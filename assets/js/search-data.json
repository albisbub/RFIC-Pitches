{
  
    
        "post0": {
            "title": "",
            "content": ". Center For Jewish History Archives Scraper . Built in support for AJHS | Can be easily used for any repo on CJH&#39;s archive space | Could also be used in other archivespace scraping situations. | . #collapse-hide class CJH_Archives: def scrape_all_records(object_type=&#39;records&#39;,start_page=1, stop_after_pages=0): if start_page &lt;= 0: print(&quot;Must start at minimum of page 1&quot;) start_page=1 page=start_page else: page = start_page if object_type.upper() == &#39;RECORDS&#39;: print(&quot;Scraping All Individual Records&quot;) # page = start_page headless_url = &quot;https://archives.cjh.org/repositories/3/objects?q%5B%5D=%2A&amp;op%5B%5D=OR&amp;field%5B%5D=keyword&amp;from_year%5B%5D=&amp;to_year%5B%5D=&amp;limit=digital_object,archival_object&amp;sort=title_sort%20asc&amp;page=&quot; base_URL = str(headless_url + str(page)) elif object_type.upper() == &#39;COLLECTIONS&#39;: # page = start_page print(&quot;Scraping Collections (Finding Aids)&quot;) headless_url = &quot;https://archives.cjh.org/repositories/3/resources?q[]=%2A&amp;op[]=&amp;field[]=title&amp;from_year[]=&amp;to_year[]=&amp;limit=resource&amp;sort=title_sort%20asc&amp;page=&quot; base_URL = str(headless_url + str(page)) def scrape_record(name, link, web_page, object_type): # print(web_page, link) # (.+?) # meta_dict = find_between(str(i),&#39;&lt;script type=&quot;application/ld+json&quot;&gt;&#39;,&#39; &lt;/script&gt;&#39; ) # meta_dict = re.findall(r&#39;&gt;(&#39;, str(web_page)) title = (web_page.title) part_of = web_page.find_all(&#39;ul&#39;,{&#39;class&#39;:&#39;breadcrumb&#39;}) part_of = part_of[0].find_all(&#39;a&#39;) location_tupes = [] for i in part_of: link = (str(i).split(&#39;&quot;&#39;)[1]) found_loc_name = (str(i).split(&#39;&gt;&#39;)[1]).split(&#39;&lt;&#39;)[0] tupp = (found_loc_name,link) location_tupes.append(tupp) # location_name = (str(i.split(&#39;&gt;&#39;)[1])).split(&#39;&lt;&#39;)[0] # stri = &quot;&lt;a href=&quot; # part_of = list(map(lambda st: str.replace(st,stri, &quot;&quot;), part_of)) locs = (location_tupes) subnotes = web_page.find_all(&#39;div&#39;, {&#39;class&#39;: &#39;upper-record-details&#39;})[0].text # print(subnotes) div_data_1 = [(&quot;Name&quot;, name), (&quot;Link&quot;,link)] acord = web_page.find_all(&#39;div&#39;, {&#39;class&#39;: &#39;acc_holder clear&#39;})[0].text acc_data = [] if object_type.upper() == &#39;RECORDS&#39;: possible_fields_1=[ &quot;Scope and Contents&quot;, &quot;Dates&quot;, &quot;Language of Materials&quot;, &quot;Access Restrictions&quot;, &quot;Extent&quot;, ] possible_fields_2 = [ &quot;Related Names&quot;, &quot;Digital Material&quot;, &quot;Physical Storage Information&quot;, &quot;Repository Details&quot;, ] elif object_type.upper() == &#39;COLLECTIONS&#39;: possible_fields_1=[ &quot;Scope and Content Note&quot;, &quot;Dates&quot;, &quot;Creator&quot;, &quot;Access Restrictions&quot;, &quot;Use Restrictions&quot;, &quot;Conditions Governing Access&quot;, &quot;Conditions Governing Use&quot;, &quot;Extent&quot;, &quot;Language of Materials&quot; ] possible_fields_2 = [ &quot;Additional Description&quot;, &quot;Subjects&quot;, &quot;Related Names&quot;, &quot;Finding Aid &amp; Administrative Information&quot;, &#39;Physical Storage Information&#39;, &#39;Repository Details&#39;, ] ##subnotes b1 = [] for i in possible_fields_1: if i in str(subnotes): out=True else: out = False missingTuple = (i, &#39;&#39;) div_data_1.append(missingTuple) b1.append(out) ##accordian b2=[] for i in possible_fields_2: if i in str(acord): out=True else: out = False missingTuple = (i, &#39;&#39;) div_data_1.append(missingTuple) b2.append(out) # print(b1, b2) xs=possible_fields_1 ys=b1 # sec_1_heads = [x for x, y in zip(xs, ys) if y == &#39;True&#39;] filtered1 = np.array(xs)[np.array(ys)] xs=possible_fields_2 ys=b2 filtered2 = np.array(xs)[np.array(ys)] # sec_2_heads = [x for x, y in zip(xs, ys) if y == &#39;True&#39;] # print(filtered1,filtered2,&#39;xyz&#39;) indexer = 0 for i in filtered1: # print(len(filtered1),len(filtered2), (indexer)) first = i try: next = filtered1[indexer+1] except BaseException as e: next = &#39;$$$&#39; # print(first, next) value = find_between(subnotes, first, next) # print(first, next, value) value = value.replace(&#39; n&#39;,&#39; &#39;).strip().replace(&#39; t&#39;, &#39; &#39;) # print(first, next, value) val = (i,value) div_data_1.append(val) indexer+=1 # print(indexer, first, next) indexer = 0 for i in filtered2: first = i try: next = filtered1[indexer+1] except BaseException as e: next = &#39;$$$&#39; # print(first,next) value = find_between(acord, first, next) # print(first, next, value) value = value.replace(&#39; n&#39;,&#39; &#39;).strip().replace(&#39; t&#39;, &#39; &#39;) val = (i,value) div_data_1.append(val) indexer+=1 # print(indexer, first, next) # exit bigList = (div_data_1) return tuple(bigList) URL = base_URL web_page = BeautifulSoup(requests.get(URL, {}).text, &quot;lxml&quot;) pagnation = web_page.find_all(&#39;ul&#39;,{&#39;class&#39;:&#39;pagination&#39;})[0].find_all(&#39;li&#39;) next_link = (web_page.find_all(&#39;li&#39;,{&#39;class&#39;:&#39;next&#39;})[0]).find(&#39;a&#39;,href=True) linkky = str(next_link) nextPage_ = str(&quot;https://archives.cjh.org&quot; + (linkky.split(&#39;&quot;&#39;)[1])) # exit # print(pagnation) pageList = [] s_pages = [] for i in pagnation: number = str(i).split(&#39;&gt;&#39;)[2].split(&#39;&lt;&#39;)[0] pageList.append((number)) # print(&quot;Pages&quot;, pageList) # break test_list=[] for i in pageList: try: # print(i) # print( int(i)) test_list.append(int(i)) except: pass # test_list = [int(i) for i in pageList if not (i).isdigit()] # print(test_list) last_page__ = (max(test_list)) __lastPage = last_page__ - (last_page__ - stop_after_pages) print() # exit page_counter = 1 while page_counter &lt; __lastPage: row_list = [] pagez= page_counter print(&quot;Scraping Page&quot;, page_counter) page_current = page_counter URL = str(headless_url + str(page_current)) web_page = BeautifulSoup(requests.get(URL, {}).text, &quot;lxml&quot;) h3s = web_page.find_all(&#39;h3&#39;) # summs = web_page tupleList = [] for i in h3s: # print(i) try: link = ((str(i).split(&#39;href=&quot;&#39;)[1]).split(&#39;&quot;&#39;))[0] name = (str(i).split(&#39;&quot;&gt;&#39;))[1].split(&quot;&lt;/a&quot;)[0] # print(link, name) # break data_tuple = (name ,str(&quot;https://archives.cjh.org&quot; + link), link) tupleList.append(data_tuple) except BaseException as e: print(e, i) page_counter+=1 archIndex = pd.DataFrame.from_records(tupleList, columns = [&#39;Names&#39;, &#39;Link&#39;, &#39;Location&#39;]) # ... counter = 0 for i in archIndex.itertuples(): counter +=1 name = i.Names link = i.Link link123 = link Location=i.Location web_page = BeautifulSoup(requests.get(link, {}).text, &quot;lxml&quot;) record_row = scrape_record(name, link123, web_page,object_type.upper() ) row_list.extend(record_row) print(&quot;Record: &quot;,counter, link123) s_pages.extend(row_list) d = {} for x, y in s_pages: d.setdefault(x, []).append(y) df = pd.DataFrame.from_records(d).drop_duplicates() if object_type.upper() == &#39;RECORDS&#39;: df[[&#39;Date_1&#39;,&#39;Date_2&#39;]] = (df[&#39;Dates&#39;].str.split(&#39;–&#39;, n=1,expand=True)) else: df[&#39;Use Terms&#39;] = df[&#39;Use Restrictions&#39;]+df[&#39;Conditions Governing Use&#39;] # df1.replace(&#39;NA&#39;,np.nan,inplace=True) df[&#39;Access Terms&#39;] = df[ &#39;Access Restrictions&#39;]+df[&#39;Conditions Governing Access&#39;] dropThese = [ &#39;Use Restrictions&#39;, &#39;Conditions Governing Use&#39;, &#39;Access Restrictions&#39;, &#39;Conditions Governing Access&#39;, ] df.drop(columns=dropThese,inplace=True) # df1 = df1.apply(lambda x: None if x.isnull().all() else &#39;;&#39;.join(x.dropna()), axis=1) return (df) def __init__(self, repo): self.repo = repo def get_meta_data(self, object_type,page_to_start_at,maximum_pages_to_scrape): if self.repo.upper() == &#39;AJHS&#39;: print(&#39;Creating CJHA Scraper Object for AJHS&#39;) self.meta_df = scrape_all_records(object_type,page_to_start_at,maximum_pages_to_scrape) return self.meta_df else: print(&quot;WIP WIP WIP WIP WIP WIP&quot;) pass . . Building AJHS Archive Datasets . The below line of code can be used to scrape the archive for a given number of pages (input 0 for all records). There are two object types, records and collections. Collections are digitized finding aids and records are all contained in some sort of collection. Some are under multiple collections. The below lines of code generate dataframes for the first 3 pages of records and collections . #collapse-hide # %%capture #records ajhs_recs = CJH_Archives(&#39;ajhs&#39;).get_meta_data(&#39;records&#39;, 1, 3) #collections ajhs_cols= CJH_Archives(&#39;ajhs&#39;).get_meta_data(&#39;collections&#39;, 1, 3) . . Output For Records . Access Restrictions Dates Digital Material Extent Language of Materials Link Name Physical Storage Information Related Names Repository Details Scope and Contents Date_1 Date_2 . 0 This collection is open to all researchers by ... | 1991–1994 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 056 Flint, MI—Noreen Kasle, 1991–1994 | Box: 296, Folder: 38 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Carolyn Agress file | 1991 | 1994 | . 2 This collection is open to all researchers by ... | 1992–1993 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 057 Ft. Lauderdale, FL—Barbara Wiener, 1992–... | Box: 296, Folder: 39 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1992 | 1993 | . 5 This collection is open to all researchers by ... | 1992–1995 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 058 Washington, D.C.—Jerome Dick, 1992–1995 | Box: 296, Folder: 42 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Carolyn Agress file | 1992 | 1995 | . 9 This collection is open to all researchers by ... | 1994–1995 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 058 Washington, D.C.—Jerome Dick, 1994–1995 | Box: 296, Folder: 43 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Carolyn Agress file | 1994 | 1995 | . 14 This collection is open to all researchers by ... | 1996 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 058 Washington, D.C.—Jerome Dick, 1996 | Box: 296, Folder: 44 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Carolyn Agress file | 1996 | None | . 20 This collection is open to all researchers by ... | 1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 058 Washington, D.C.—Jerome Dick, 1997 | Box: 296, Folder: 45 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Carolyn Agress file | 1997 | None | . 27 This collection is open to all researchers by ... | 1983–1993 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 058 Washington, D.C.—Jerome Dick—1 of 2, 198... | Box: 296, Folder: 40 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1983 | 1993 | . 35 This collection is open to all researchers by ... | 1983–1993 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 058 Washington, D.C.—Jerome Dick—2 of 2, 198... | Box: 296, Folder: 41 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1983 | 1993 | . 44 This collection is open to all researchers by ... | 1994–1995 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 059 Rye, NY—Community Synagogue, 1994–1995 | Box: 296, Folder: 46 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1994 | 1995 | . 54 This collection is open to all researchers by ... | 1990–1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 060 Latham, NY—Northeastern New York Federat... | Box: 296, Folder: 50 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1990 | 1997 | . 65 This collection is open to all researchers by ... | 1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 060 Latham, NY—Northeastern New York Federat... | Box: 296, Folder: 51 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Sally Hespe file | 1997 | None | . 77 This collection is open to all researchers by ... | 1997–1999 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 060 Latham, NY—Northeastern New York Federat... | Box: 296, Folder: 52 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Marie Donski file | 1997 | 1999 | . 90 This collection is open to all researchers by ... | 1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 060 Latham, NY—Stanley Kivort—1997 Campaign,... | Box: 296, Folder: 47 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1997 | None | . 104 This collection is open to all researchers by ... | 1999–2000 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 060 Latham, NY—Stanley Kivort—2000 Campaign,... | Box: 296, Folder: 48 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Marie Donski file | 1999 | 2000 | . 119 This collection is open to all researchers by ... | 2001 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 060 Latham, NY—Stanley Kivort—2001 Campaign,... | Box: 296, Folder: 49 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Marie Donski file | 2001 | None | . 135 This collection is open to all researchers by ... | 1996–1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 061 Philadelphia, PA—Harold Berger, Kenneth ... | Box: 296, Folder: 54 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Carolyn Agress file Analysis of campaign ope... | 1996 | 1997 | . 152 This collection is open to all researchers by ... | 1993–1996 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 061 Philadelphia, PA—Harold Berger, Lana Dis... | Box: 296, Folder: 53 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1993 | 1996 | . 170 This collection is open to all researchers by ... | 1993–1994 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 061 Philadelphia, PA—Kenneth Kaiserman, Alan... | Box: 296, Folder: 55 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1993 | 1994 | . 189 This collection is open to all researchers by ... | 1985–1993 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 062 Chevy Chase, MD—Stanley Zupnik, 1985–1993 | Box: 296, Folder: 56 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1985 | 1993 | . 209 This collection is open to all researchers by ... | 1993–1995 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 062 Chevy Chase, MD—Stanley Zupnik, 1993–1995 | Box: 296, Folder: 57 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1993 | 1995 | . 230 This collection is open to all researchers by ... | 1996–1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 062 Chevy Chase, MD—Stanley Zupnik—1996 Camp... | Box: 296, Folder: 58 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Sally Hespe file | 1996 | 1997 | . 252 This collection is open to all researchers by ... | 1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 062 Chevy Chase, MD—Stanley Zupnik—1997 Camp... | Box: 296, Folder: 59 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Sally Hespe file | 1997 | None | . 275 This collection is open to all researchers by ... | 1990–1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 063 Portland, OR—Portland Federation—Jerry S... | Box: 296, Folder: 60 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Jewish Federation of Portland | 1990 | 1997 | . 299 This collection is open to all researchers by ... | 1996–1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 063 Portland, OR—Portland Federation—Jerry S... | Box: 296, Folder: 61 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Carolyn Agress file | 1996 | 1997 | . 324 This collection is open to all researchers by ... | 1999–2000 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 063 Portland, OR—Portland Federation—Jerry S... | Box: 296, Folder: 62 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Marie Donski file | 1999 | 2000 | . 350 This collection is open to all researchers by ... | 2000 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 063 Portland, OR—Portland Federation—Jerry S... | Box: 296, Folder: 63 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Marie Donski file Jewish Family and Child Se... | 2000 | None | . 377 This collection is open to all researchers by ... | 2000–2001 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 063 Portland, OR—Portland Federation—Jerry S... | Box: 296, Folder: 64 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Marie Donski file | 2000 | 2001 | . 405 This collection is open to all researchers by ... | 1984–1990 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 064 St. Louis, MO—Lee Bohm, 1984–1990 | Box: 296, Folder: 65 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | From the Sub-Series: Campaigns we... | 1984 | 1990 | . 434 This collection is open to all researchers by ... | 1996–1997 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 064 St. Louis, MO—Lee Bohm, Bonnie Levens, R... | Box: 296, Folder: 66 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Carolyn Agress file | 1996 | 1997 | . 464 This collection is open to all researchers by ... | 1996 | Request from an off-site storage location ... | From the Collection: 902 Linear Feet (748 B... | From the Collection: The collection i... | /repositories/3/archival_objects/272963 | 064 St. Louis, MO—Lee Bohm, Bonnie Levens, R... | Box: 296, Folder: 67 (Mixed Materials) ... | Creator From the Collection: HIAS (Agency) ... | Repository Details Part of the American Jewis... | Carolyn Agress file | 1996 | None | . Output for Collections . Additional Description Creator Dates Extent Finding Aid &amp; Administrative Information Language of Materials Link Name Physical Storage Information Related Names Repository Details Scope and Content Note Subjects Use Terms Access Terms . 0 Overview This collection is comprise... | | 1908-1973 Language of Materials ... | 75 Manuscript Boxes (37.75 feet and one oversi... | Title Guide to the Papers of Ad... | The collection is in English, German, French, ... | /repositories/3 | Admiral Lewis Lichtenstein Strauss Papers | | | Repository Details Part of the American Jewis... | The Papers of Admiral Lewis L. Strauss reflect... | are arranged according to series. Folders are ... | There may be some restrictions on the use of t... | The collection is open to all researchers by p... | . 2 Overview Printer&#39;s proof of Kraus&#39; e... | Kraus, Adolf, 1850-1928 (Person) | ca. 1911 | .25 Linear Feet | Title Guide to the Adolf Kraus ... | | /repositories/3 | Adolf Kraus biographical data | | | Repository Details Part of the American Jewis... | Printer&#39;s proof of Kraus&#39; entry in Who&#39;s Who i... | | | | . 5 Overview This collection consists of... | Lorch, Adolf, 1883-1971 (Person) ... | 1896-2013 Majority of ... | 0.75 Linear Feet (1 manuscript box, 1 half-man... | Title Guide to the Adolf Lorch ... | The collection is in English and German. ... | /repositories/3 | Adolf Lorch (1883-1971) Papers | | Creator Lorch, Adolf, 1883-1971 (Per... | Repository Details Part of the American Jewis... | This collection consists of materials related ... | Correspondence Hudson (N.... | Information concerning the literary rights may... | [If you have any exceptions to the AJHS-approv... | . 9 Overview Contains three checks signe... | Sutro, Adolph, 1830-1898 (Person) | undated, 1896-1897 | .25 Linear Feet | Title Guide to the Adolph Heinr... | English | /repositories/3 | Adolph Heinrich Joseph Sutro papers | Container: Consolidated Box P9, Folder: P-318 ... | Creator Sutro, Adolph, 1830-1898 (Pe... | Repository Details Part of the American Jewis... | Contains three checks signed by Sutro; , and a... | Finance Public health ... | No permission is required to quote, reproduce ... | The collection is open to all researchers, exc... | . 14 Overview Consists of a collection of... | Sabath, Adolph Joachim, 1866-1952 (Per... | 1909-1952 | 0.5 Linear Feet | Title Guide to the Adolph J. Sa... | eng Access Restrictions ... | /repositories/3 | Adolph J. Sabath papers | | Creator Sabath, Adolph Joachim, 1866-1952 ... | Repository Details Part of the American Jewis... | Consists of a collection of bills and resoluti... | Emigration and immigration law ... | | None Biographical Note ... | . 20 Overview Included in this collection... | Solomons, Adolphus S. (Adolphus Simeon), 1826-... | undated, 1841-1966 | 3.7 Linear Feet (4 manuscript boxes, 1 oversiz... | Title Guide to the Papers of Ad... | The collection is in English. Access... | /repositories/3 | Adolphus Simeon Solomons, papers | | Creator Solomons, Adolphus S. (Adolphus Sime... | Repository Details Part of the American Jewis... | Included in this collection are papers which r... | American Red Cross Americ... | No permission is required to quote, reproduce ... | The collection is open to all researchers, exc... | . 27 Overview Collection consists of annu... | Aguilar Free Library (New York, N.Y.) ... | 1899-1903 | 1 Folders | Title Guide to the Aguilar Free... | eng Extent 1 Folders | /repositories/3 | Aguilar Free Library Society records | | Creator Aguilar Free Library (New York, N.Y.... | Repository Details Part of the American Jewis... | Collection consists of annual reports from 189... | Educational Alliance (New York, N.Y.) ... | | | . 35 Overview The collection contains pho... | Cohen, Alan, L. (Person) Lang... | 1989, 1993 | 1 Manuscript Boxes (1/2 linear foot) | Title Guide to the Papers of Al... | The collection is in English. Access... | /repositories/3 | Alan L. Cohen Papers | | Creator Cohen, Alan, L. (Person) ... | Repository Details Part of the American Jewis... | The collection contains 203 photographs taken ... | Antisemitism Emigration a... | Information concerning the literary rights may... | The collection is open to all researchers by p... | . 44 Overview The collection contains pap... | Kohn, Alan M. (Person) Langua... | 1995, 2008 | 1 Folders | Title Guide to the Papers of Al... | The collection is in English. Access... | /repositories/3 | Alan M. Kohn Papers | | Creator Kohn, Alan M. (Person) ... | Repository Details Part of the American Jewis... | The collection consists of a part of an unpubl... | Antisemitism Corresponden... | Information concerning the literary rights may... | The collection is open to all researchers by p... | . 54 Overview The collection consists of ... | Hutler, Albert A. (Person) Bi... | 1972-1975 | 2 Manuscript Boxes 1 Linear Feet | Title Guide to the Albert Hutle... | | /repositories/3 | Albert Hutler Wilkes-Barre flood collection | | Creator Hutler, Albert A. (Person) ... | Repository Details Part of the American Jewis... | The collection consists of a report to the Cou... | Camps Charities -- United... | | | . 65 Overview Records of activities of a ... | Aleph Beth Club (St. Paul, Minn.) (Org... | undated, 1913-1923 | 1 Manuscript Boxes .25 Linear Feet | Title Guide to the Aleph Beth C... | | /repositories/3 | Aleph Beth Club (St. Paul, Minn.) records | | Creator Aleph Beth Club (St. Paul, Minn.) ... | Repository Details Part of the American Jewis... | Records of activities of a Jewish young men&#39;s ... | Amateur theater Athletic ... | | | . 77 Overview This collection contains a ... | Hamilton, Alexander, 1757-1804 (Person... | undated | 1 Folders | Title Guide to the Alexander Ha... | The collection is in English. Access... | /repositories/3 | Alexander Hamilton Manuscript Fragment | Container: Consolidated Box P2, Folder: P-104 ... | Creator Hamilton, Alexander, 1757-1804 ... | Repository Details Part of the American Jewis... | This collection contains a fragment of a manus... | Fragments (object portions) ... | No permission is required to quote, reproduce ... | The collection is open to all researchers, exc... | . 90 Overview Contains a diary (68 pages)... | Harkavy, Alexander, 1863-1939 (Person) | undated, 1868-1937 | 1 Manuscript Boxes .25 Linear Feet | Title Guide to the Alexander Ha... | English | /repositories/3 | Alexander Harkavy papers | | Creator Harkavy, Alexander, 1863-1939 ... | Repository Details Part of the American Jewis... | Contains a diary (68 pages) kept by Harkavy of... | Adult education Baltimore... | No permission is required to quote, reproduce ... | The collection is open to all researchers, exc... | . 104 Overview A bond, issued by the Savan... | Isaacs, Alexander (Person) | 1869 | 1 Folders 1 Folders | Title Guide to the Alexander Is... | | /repositories/3 | Alexander Isaacs bond | | Creator Isaacs, Alexander (Person) ... | Repository Details Part of the American Jewis... | A bond, issued by the Savannah and Charleston ... | United States -- Economic conditions ... | | | . 119 Overview Contains 27 letters, of whi... | Mayer, Alexander (Person) | 1850-1852 | 1 Manuscript Boxes .25 Linear Feet | Title Guide to the Alexander Ma... | English German | /repositories/3 | Alexander Mayer letters | Container: Consolidated Box P3, Folder: P-117 ... | Creator Mayer, Alexander (Person) ... | Repository Details Part of the American Jewis... | Contains 27 letters, of which 16 are in German... | Bomeisler, Edwin Columbia... | No permission is required to quote, reproduce ... | The collection is open to all researchers, exc... | . 135 Overview The Davidson/Borison family... | Lipsey, Alfred E. (Person) La... | 1990-1992 | 2 Linear Feet (4 manuscript boxes) | Title Guide to the Alfred E. Li... | The collection is in English. Access... | /repositories/3 | Alfred E. Lipsey genealogies | | Creator Lipsey, Alfred E. (Person) ... | Repository Details Part of the American Jewis... | The Davidson/Borison family connection, a gene... | Capin family Datzkowsk... | Information concerning the literary rights may... | The collection is open to all researchers by p... | . 152 Overview An important figure in the ... | | undated, 1882-1936 Language of Mat... | 8.30 Linear Feet (3 manuscript boxes, 4 oversi... | Title Guide to the Papers of Al... | The collection is in English, French, and Yidd... | /repositories/3 | Alice Davis Menken Papers | | | Repository Details Part of the American Jewis... | The papers of Alice Davis Menken contain corre... | Articles Clippings (infor... | No permission is required to quote, reproduce ... | The collection is open to all researchers, exc... | . 170 Overview The collection contains the... | Alpha Delta Epsilon (Organization) ... | 1940 | 1 Folders | Title Guide to the Alpha Delta ... | eng Biographical Note ... | /repositories/3 | Alpha Delta Epsilon | | Creator Alpha Delta Epsilon (Organiz... | Repository Details Part of the American Jewis... | The collection contains the following publicat... | Greek letter societies ... | | | . 189 Note Old call#: MS-FRA.A135. On... | Alpha Epsilon Phi (Organization) ... | March 1947 | 1 Folders | Title Guide to the Alpha Epsilo... | eng Biographical Note ... | /repositories/3 | Alpha Epsilon Phi | | Creator Alpha Epsilon Phi (Organizat... | Repository Details Part of the American Jewis... | | Greek letter societies So... | | | . 209 Overview The collection contains mis... | Alpha Epsilon Pi (Organization) ... | 1934-1956 | .25 Linear Feet (1 one-half manuscript box) | Title Guide to the Alpha Epsilo... | eng Biographical Note ... | /repositories/3 | Alpha Epsilon Pi collection | | Creator Alpha Epsilon Pi (Organizati... | Repository Details Part of the American Jewis... | The collection contains miscellaneous correspo... | Greek letter societies Gr... | | | . 230 Overview This collection is comprise... | Alpha Omega (Fraternity) (Organization... | 1947-1970 | 0.5 Linear Feet (1 manuscript box) | Title Guide to the Alpha Omega ... | eng Biographical Note ... | /repositories/3 | Alpha Omega collection | | Creator Alpha Omega (Fraternity) (Or... | Repository Details Part of the American Jewis... | This collection is comprised of invitations, p... | Greek letter societies ... | | | . 252 Overview Contains almanacs, programs... | Amalgamated Clothing Workers of America ... | undated, 1923-1964 | 2 Boxes .75 Linear Feet | Title Guide to the Amalgamated ... | | /repositories/3 | Amalgamated Clothing Workers of America coll... | | Creator Amalgamated Clothing Workers of Amer... | Repository Details Part of the American Jewis... | Contains almanacs, programs, newsletters, pamp... | Clothing trade Clothing w... | | | . 275 Overview Consists of secretary&#39;s min... | America-Israel Society (Organization) | 1957-1966 | 1 Manuscript Boxes .25 Linear Feet | Title Guide to the America-Isra... | English | /repositories/3 | America-Israel Society records | | Creator America-Israel Society (Orga... | Repository Details Part of the American Jewis... | Consists of secretary&#39;s minute book with copy ... | Antiquities Archaeologica... | | | . 299 Overview Collection contains publica... | American Academic Association for Peace in the... | undated, 1967-1984 | 1 Boxes .6 Linear Feet | Title Guide to the American Aca... | | /repositories/3 | American Academic Association for Peace in t... | | Creator American Academic Association for Pe... | Repository Details Part of the American Jewis... | Collection contains publications relating to r... | American Professors for Peace in the Middle Ea... | | | . 324 Overview Consists of correspondence ... | American Academy for Jewish Research (... | undated, 1928-2001 Maj... | 7.5 Linear Feet (15 manuscript boxes) | Title Guide to the Records of A... | The collection is in English, Dutch, French, G... | /repositories/3 | American Academy for Jewish Research, records | | Creator American Academy for Jewish Research... | Repository Details Part of the American Jewis... | The collection consists of correspondence from... | Agendas (administrative records) ... | Information concerning the literary rights may... | The collection is open to all researchers by p... | . 350 Overview Founded in 1969, the Americ... | American Association for Ethiopian Jews ... | undated, 1960-1961, 1963, 1965-1968, 1970-1995... | 92.2 Linear Feet (168 manuscript boxes, 4 Holl... | Title Guide to the Records of A... | The collection is in English, Amharic, Chinese... | /repositories/3 | American Association for Ethiopian Jews (AAE... | | Creator American Association for Ethiopian J... | Repository Details Part of the American Jewis... | Founded in 1969, the American Association for ... | AMIT (Organization) Addis... | Information concerning the literary rights may... | The collection is open to all researchers by p... | . 377 Overview This collection is comprise... | American Council for Judaism (Organiza... | undated, 1943-1991 | 1.25 Linear Feet (2 manuscript boxes, 1 half m... | Title Guide to the American Cou... | The collection is in English. Access... | /repositories/3 | American Council for Judaism collection | | Creator American Council for Judaism ... | Repository Details Part of the American Jewis... | This collection is comprised of correspondence... | Annual Reports Correspond... | Information concerning the literary rights may... | The collection is open to all researchers by p... | . 405 Overview Newsletters, pamphlets and ... | Brodie, Israel B., 1884-1965 (Person) | 1933-1938 | 1 Manuscript Boxes .25 Linear Feet | Title Guide to the American Eco... | | /repositories/3 | American Economic Committee for Palestine re... | | Creator Brodie, Israel B., 1884-1965 ... | Repository Details Part of the American Jewis... | Newsletters, pamphlets and fact sheets publish... | Brodie, Israel B., 1884-1965 ... | | | . 434 Overview Contains incorporation and ... | American Financial and Development Corporation... | undated, 1950-1977 | 2 Boxes 1 Linear Feet | Title Guide to the American Fin... | English | /repositories/3 | American Financial and Development Corporati... | | Creator American Financial and Development C... | Repository Details Part of the American Jewis... | Contains incorporation and bylaws, financial s... | Bonds Economic conditions... | | | . 464 Overview Contains annual reports, ca... | American Friends of the Hebrew University ... | undated, 1938-1996 | 1 Boxes .5 Linear Feet | Title Guide to the American Fri... | | /repositories/3 | American Friends of the Hebrew University co... | | Creator American Friends of the Hebrew Unive... | Repository Details Part of the American Jewis... | Contains annual reports, catalogs, pamphlets, ... | Education, Higher -- Israel ... | | | . Loeb Data Scraper . The Loeb data scraperfetches meta deta and can download images for paintings, silhouettes, and photographs from the archive (or all of the above). . #collapse-hide class loeb: &quot;&quot;&quot; This class can be used to interact with the loeb image data base. The init funciton takes 1 argument which is the type of data to retreive. The input should be one of the following : &#39;paintings&#39;, silhouettes, photographs, or &#39;all&#39; &quot;&quot;&quot; def __init__(self, data_set=&#39;paintings&#39;): def scrape_loeb(URL): requests.get(URL) web_page = bs4.BeautifulSoup(requests.get(URL, {}).text, &quot;lxml&quot;) table = web_page.find_all(&#39;portfolio&#39;) div = web_page.find(id=&quot;portfolio&quot;) linkList = web_page.find_all(&#39;div&#39;,{&#39;class&#39;:&#39;work-info&#39;}) df_dict = [] for links in linkList: twolinks = links.find_all(&#39;a&#39;, href=True) details = str(twolinks[0]).split(&#39;&quot;&#39;)[1] img = str(twolinks[1]).split(&#39;&quot;&#39;)[3] new_df_tuple = {&#39;info_link&#39;:details, &#39;img_link&#39;:img} df_dict.append(new_df_tuple) listOfDfs = [] counter = 0 df = pd.DataFrame.from_records(df_dict) for i in df.itertuples(): img = i.img_link info = i.info_link # print(info) # print(info) # download_image(img,&#39;test.jpg&#39;) profile = bs4.BeautifulSoup(requests.get(info, {}).text, &quot;lxml&quot;) img = str(profile.find_all(&#39;img&#39;,src=True)[0]).split(&#39;&quot;&#39;)[3] # print(img) # print(profile) # print(profile) a = profile.find_all(&#39;h4&#39;) # print(a) b = profile.find_all(&quot;h3&quot;) # bio = profile linkts = str(profile.find_all(&#39;a&#39;,{&#39;id&#39;:&#39;viewzoom&#39;},href=True)[1]).split(&#39;&quot;&#39;)[1] def scrape_bio_loeb(url): bio = bs4.BeautifulSoup(requests.get(url, {}).text, &quot;lxml&quot;) abc=str(bio.find_all(&#39;p&#39;)[1]).replace(&quot;&lt;p&gt;&quot;, &quot; &quot;) abcd=(str(abc).replace(&#39;&lt;/p&gt;&#39;, &quot; &quot;)) bio_text = str(str(abcd.replace(&#39;&lt;i&gt;&#39;,&#39; &#39;)).replace(&quot;&lt;/i&gt;&quot;,&#39; &#39;)) s = bio_text bio_plain = re.sub(r&#39;&lt;.+?&gt;&#39;, &#39;&#39;, s) if &#39;Lorem ipsum dolor sit amet,&#39; in bio_plain: bio_plain = &#39;&#39; if &quot;Lorem ipsum dolor sit amet,&quot; in s: s = &#39;&#39; # bio_escapes = re.sub(r&#39;&gt;.+?&lt;&#39;, &#39;&#39;, s) return bio_plain, s bio__ = scrape_bio_loeb(linkts) # print(bio__) # print(linkts,len(linkts), &quot;hkgdfsjhsfgakljhashlf&quot;) # break headers4 = striplist((a)) headers4_ = [&#39;Name&#39;] for i in headers4: headers4_.append(i) # headers4_ = .extend(headers4) headers3 = striplist( b) # print(headers4_, headers3) # break headers4_ = headers4_[:-1] headers4_.append(&#39;Bio_Plain&#39;) headers3.append(bio__[0]) headers4_.append(&#39;Bio_Links&#39;) headers3.append(bio__[1]) df1 = pd.DataFrame({&#39;Label&#39;:headers4_ , &#39;Value&#39;: headers3}) # name_for_file = headers[0][1] # print(name_for_file, headers, headers[0]) self.image_cache.append((img, df1)) listOfDfs.append(df1) # download_image(img, str(str(counter) + &#39;.jpg&#39;)) counter+=1 self.list_of_dfs.extend(listOfDfs) self.list_of_dfs = [] self.image_cache = [] if data_set.upper() == &#39;ALL&#39;: data_options = [&#39;paintings&#39;, &#39;silhouettes&#39;, &#39;photographs&#39;] for i in data_options: print(i) URL = str(&quot;http://loebjewishportraits.com/&quot; + i + &#39;/&#39;) scrape_loeb(URL) else: try: URL = str(&quot;http://loebjewishportraits.com/&quot; + data_set + &#39;/&#39;) scrape_loeb(URL) except BaseException as e: print(e) print(&quot;Could not find a data set for: &quot;, data_set, &quot;Make sure you input either &#39;paintings&#39;, &#39;silhouettes&#39;, or &#39;photographs&#39;!&quot;) def get_meta_data(self, export=False): &quot;&quot;&quot; returns a meta dataframe with each painting as an entry in a row export can be csv or excel &quot;&quot;&quot; listy = self.list_of_dfs transposed = [thing.transpose() for thing in listy] cc = 1 newList = [] for i in transposed: # print(len(i.columns)) new_cols = (i.iloc[0]) i.columns = new_cols i.drop(i.index[0], inplace= True) long_df_of_entrys = pd.concat(transposed) long_df_of_entrys.set_index(&#39;Name&#39;) return long_df_of_entrys.reset_index() def download_images(self): def download_image(link,filename): urllib.request.urlretrieve(link, filename) # print(&#39;image saved to temp directory&#39;) for i in self.image_cache: name = (i[1].Value.iloc[0]) fileName = str(name + &#39;.jpg&#39;) try: download_image(i[0],fileName) print(&#39;Saved&#39;, fileName, &#39;to current directory&#39;) except BaseException as e: print(&quot;Could not download:&quot;, fileName, &quot;Error:&quot;,e) . . Scraping Meta Data and Download Locations for Selected Image Type . paintings = loeb() . Building a MetaData Dataset for the Paintings . meta_data = paintings.get_meta_data() . Output For Painting MetaData . index Name Life Span Artist Painting Date Medium Repository Bio_Plain Bio_Links Dimensions Artist Life Span . 0 Value | Richea Myers Cohen Gratz | 1731-1801 | Artist unknown | ca. 1750 | Oil on canvas | Mikveh Israel | In 1729 Samuel Myers-Cohen, a militia veteran... | In 1729 &lt;a class=&quot;intlink&quot; href=&quot;http://loebj... | NaN | NaN | . 1 Value | Richea Myers Cohen Gratz | 1731-1801 | Artist unknown | ca. 1750 | Oil on canvas | Mikveh Israel | In 1729 Samuel Myers-Cohen, a militia veteran... | In 1729 &lt;a class=&quot;intlink&quot; href=&quot;http://loebj... | NaN | NaN | . 2 Value | Sarah Hamburger | NaN | Artist unknown | ca. 1850 | Oil on canvas | Jewish Museum of Maryland | | | 16 1/2 x 13 1/2 in. | NaN | . 3 Value | Richea Myers Cohen Gratz | 1731-1801 | Artist unknown | ca. 1750 | Oil on canvas | Mikveh Israel | In 1729 Samuel Myers-Cohen, a militia veteran... | In 1729 &lt;a class=&quot;intlink&quot; href=&quot;http://loebj... | NaN | NaN | . 4 Value | Sarah Hamburger | NaN | Artist unknown | ca. 1850 | Oil on canvas | Jewish Museum of Maryland | | | 16 1/2 x 13 1/2 in. | NaN | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 53296 Value | Miriam Simon Gratz | 1749-1808 | Jane Cooper Sully Darley | NaN | Oil on canvas | Rosenbach Museum and Library | Miriam Simon was the oldest surviving child b... | Miriam Simon was the oldest surviving child b... | NaN | 1807-1877 | . 53297 Value | Rebecca Gratz | 1781-1869 | Thomas Sully | 1831 | Oil on board | Rosenbach Museum and Library | Rebecca Gratz, the seventh of twelve children... | &lt;a class=&quot;intlink&quot; href=&quot;http://loebjewishpor... | 20 x 17 in. | 1783-1872 | . 53298 Value | Rebecca Gratz | 1781-1869 | Thomas Sully | 1830 | Oil on canvas, mounted on masonite | Delaware Art Museum | Rebecca Gratz, the seventh of twelve children... | &lt;a class=&quot;intlink&quot; href=&quot;http://loebjewishpor... | 20 x 17 in. | 1783-1872 | . 53299 Value | Rebecca Gratz | 1781-1869 | Thomas Sully | 1858 | Oil on canvas | American Jewish Historical Society | Rebecca Gratz, the seventh of twelve children... | &lt;a class=&quot;intlink&quot; href=&quot;http://loebjewishpor... | 20 x 16 in. | 1783-1872 | . 53300 Value | Rebecca Gratz | 1781-1869 | Thomas Sully | 1831 | Oil on canvas | Rosenbach Museum and Library | Rebecca Gratz, the seventh of twelve children... | &lt;a class=&quot;intlink&quot; href=&quot;http://loebjewishpor... | 28 x 24 in. | 1783-1872 | . 53301 rows × 11 columns . Batch Downloading Paintings (Takes a while!) . # paintings.download_images() .",
            "url": "https://albisbub.github.io/RFIC-Pitches/2020/10/12/2020-10-12-test.html",
            "relUrl": "/2020/10/12/2020-10-12-test.html",
            "date": " • Oct 12, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "RFIC Pitch Outline",
            "content": "!pip install RFIC -U . Collecting RFIC Downloading https://files.pythonhosted.org/packages/7b/ea/47723d055dee5d2ef28f0b9b53b123bd9f1c7b02b879d63510dc01109ba0/RFIC-0.0.7-py3-none-any.whl Installing collected packages: RFIC Found existing installation: RFIC 0.0.6 Uninstalling RFIC-0.0.6: Successfully uninstalled RFIC-0.0.6 Successfully installed RFIC-0.0.7 . . import os import FundamentalAnalysis as fa . from rfic import * import time . Inputs . # Show the available companies # companies = fa.available_companies(api_key) ticker = stock_ticker tickerList = set_universe(stock_ticker, similar_companys_list) # Collect general company information profile = fa.profile(ticker, api_key) # Collect recent company quotes quotes = fa.quote(ticker, api_key) # Collect market cap and enterprise value entreprise_value = fa.enterprise(ticker, api_key) # Show recommendations of Analysts # ratings = fa.rating(ticker, api_key) . # Obtain DCFs over time dcf_annually = fa.discounted_cash_flow(ticker, api_key, period=&quot;annual&quot;) dcf_quarterly = fa.discounted_cash_flow(ticker, api_key, period=&quot;quarter&quot;) # Collect the Balance Sheet statements balance_sheet_annually = fa.balance_sheet_statement(ticker, api_key, period=&quot;annual&quot;) balance_sheet_quarterly = fa.balance_sheet_statement(ticker, api_key, period=&quot;quarter&quot;) time.sleep(secs) # Collect the Income Statements income_statement_annually = fa.income_statement(ticker, api_key, period=&quot;annual&quot;) income_statement_quarterly = fa.income_statement(ticker, api_key, period=&quot;quarter&quot;) # Collect the Cash Flow Statements cash_flow_statement_annually = fa.cash_flow_statement(ticker, api_key, period=&quot;annual&quot;) cash_flow_statement_quarterly = fa.cash_flow_statement(ticker, api_key, period=&quot;quarter&quot;) time.sleep(secs) . # Show Key Metrics key_metrics_annually = fa.key_metrics(ticker, api_key, period=&quot;annual&quot;) key_metrics_quarterly = fa.key_metrics(ticker, api_key, period=&quot;quarter&quot;) # Show a large set of in-depth ratios financial_ratios_annually = fa.financial_ratios(ticker, api_key, period=&quot;annual&quot;) financial_ratios_quarterly = fa.financial_ratios(ticker, api_key, period=&quot;quarter&quot;) time.sleep(secs) # Show the growth of the company growth_annually = fa.financial_statement_growth(ticker, api_key, period=&quot;annual&quot;) growth_quarterly = fa.financial_statement_growth(ticker, api_key, period=&quot;quarter&quot;) time.sleep(secs) # Download general stock data stock_data = fa.stock_data(ticker, period=&quot;ytd&quot;, interval=&quot;1d&quot;) # Download detailed stock data stock_data_detailed = fa.stock_data_detailed(ticker, api_key, begin=&quot;2000-01-01&quot;, end=&quot;2020-01-01&quot;) . cash = (cash_flow_statement_annually).transpose().reset_index().rename(columns={&#39;index&#39;:&#39;Year&#39;}) balance = (balance_sheet_annually).transpose().reset_index().rename(columns={&#39;index&#39;:&#39;Year&#39;}) income = (income_statement_annually).transpose().reset_index().rename(columns={&#39;index&#39;:&#39;Year&#39;}) financials_list = [income, cash, balance] . from IPython.display import HTML, display display(HTML(&quot;&quot;&quot; &lt;style&gt; #output-body { display: flex; align-items: center; justify-content: center; } &lt;/style&gt; &quot;&quot;&quot;)) profile . 0 . symbol CME | . price 169.41 | . beta 0.33471 | . volAvg 1573004 | . mktCap 60755001000 | . lastDiv 3.2 | . range 131.8-225.36 | . changes -1.49 | . companyName CME Group Inc | . currency USD | . isin US12572Q1058 | . cusip 12572Q105 | . exchange Nasdaq Global Select | . exchangeShortName NASDAQ | . industry Financial Data &amp; Stock Exchanges | . website http://www.cmegroup.com | . description CME Group, Inc. operates as a security and com... | . ceo Hon. Terrence Duffy | . sector Financial Services | . country US | . fullTimeEmployees 4360 | . phone 13129301000 | . address 20 S Wacker Dr | . city Chicago | . state ILLINOIS | . zip 60606 | . dcfDiff 663.14 | . dcf 173.741 | . image https://financialmodelingprep.com/image-stock/... | . ipoDate 2002-12-06 | . defaultImage False | . market_price_today = stock_data_detailed.iloc[0][0] . Step 1: Compare a Set of Similar Stocks . Comparing Returns . tickerList . [&#39;CME&#39;, &#39;ICE&#39;, &#39;CBOE&#39;, &#39;NDAQ&#39;, &#39;FDS&#39;] . tickerList . [&#39;CME&#39;, &#39;ICE&#39;, &#39;CBOE&#39;, &#39;NDAQ&#39;, &#39;FDS&#39;] . ev_peer_df = pd.concat([fa.enterprise(i, api_key) for i in tickerList],axis=1) source = ev_peer_df.transpose().reset_index().rename(columns={&quot;index&quot;:&quot;Year&quot;}) . make_line_graph_with_crosshair(source) . Big Comp Table . make_facet_bar(format_wide_peer_list(bigTable)) . Step 2: Review Historical Financial Trends of Your Subject Company . Income Statement . Year fillingDate acceptedDate period revenue costOfRevenue grossProfit grossProfitRatio researchAndDevelopmentExpenses generalAndAdministrativeExpenses sellingAndMarketingExpenses otherExpenses operatingExpenses costAndExpenses interestExpense depreciationAndAmortization ebitda ebitdaratio operatingIncome operatingIncomeRatio totalOtherIncomeExpensesNet incomeBeforeTax incomeBeforeTaxRatio incomeTaxExpense netIncome netIncomeRatio eps epsdiluted weightedAverageShsOut weightedAverageShsOutDil link finalLink . 0 2019 | 2020-02-28 00:00:00 | 2020-02-28 14:00:27 | FY | 4868000000 | 0 | 0 | 1 | 0 | 1525000000 | 0 | 281900000 | 2280200000 | 2280200000 | 178000000 | 4.733e+08 | 3341600000 | 0.686442 | 2587800000 | 0.531594 | -534900000 | 2689600000 | 0.552506 | 573800000 | 2116500000 | 0.434778 | 5.90807 | 5.90807 | 358239000 | 358239000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 1 2018 | 2019-02-28 00:00:00 | 2019-02-28 16:41:26 | FY | 4309400000 | 0 | 0 | 1 | 0 | 1126100000 | 0 | 327000000 | 1701800000 | 1701800000 | 157700000 | 248700000 | 3182700000 | 0.738548 | 2607600000 | 0.605096 | -570000000 | 2777800000 | 0.644591 | 814100000 | 1962200000 | 0.45533 | 5.70843 | 5.70843 | 343737000 | 343737000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 2 2017 | 2018-03-01 00:00:00 | 2018-02-28 18:15:07 | FY | 3644700000 | 0 | 0 | 1 | 0 | 929400000 | 0 | 196200000 | 1334100000 | 1334100000 | 117000000 | 208500000 | 2851800000 | 0.782451 | 2310600000 | 0.633962 | -328200000 | 2526300000 | 0.693143 | -1537100000 | 4063400000 | 1.11488 | 11.9432 | 11.9432 | 340226000 | 340226000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 3 2016 | 2017-02-27 00:00:00 | 2017-02-27 16:01:59 | FY | 3595200000 | 0 | 0 | 1 | 0 | 921000000 | 0 | 248400000 | 1394700000 | 1394700000 | 123500000 | 2.253e+08 | 2636400000 | 0.733311 | 2200500000 | 0.612066 | -41400000 | 2287600000 | 0.636293 | 753500000 | 1534100000 | 0.426708 | 4.52582 | 4.52582 | 338966000 | 338966000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 4 2015 | 2016-02-26 00:00:00 | 2016-02-26 17:37:16 | FY | 3326800000 | 0 | 0 | 1 | 0 | 985100000 | 0 | 124400000 | 1338100000 | 1338100000 | 117400000 | 228600000 | 2302800000 | 0.692197 | 1988700000 | 0.597782 | -42800000 | 1956800000 | 0.588193 | 709800000 | 1247000000 | 0.374835 | 3.69051 | 3.69051 | 337894000 | 337894000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 5 2014 | 2015-02-26 | 2015-02-26 17:22:18 | FY | 3112500000 | 0 | 0 | 1 | 0 | 982300000 | 0 | 128600000 | 1344100000 | 1344100000 | 119400000 | 233200000 | 2124200000 | 0.682474 | 1768400000 | 0.568161 | 1.8e+06 | 1771400000 | 0.569124 | 644500000 | 1127100000 | 0.36212 | 3.35384 | 3.35384 | 336063000 | 336063000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 6 2013 | 2014-03-03 | 2014-02-28 18:30:52 | FY | 2936300000 | 0 | 0 | 1 | 0 | 914300000 | 0 | 146900000 | 1299300000 | 1299300000 | 151400000 | 238100000 | 1989200000 | 0.677451 | 1637000000 | 0.557504 | 0 | 1601000000 | 0.545244 | 622900000 | 976800000 | 0.332664 | 2.92105 | 2.92105 | 334400000 | 334400000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 7 2012 | 2013-03-01 00:00:00 | 2013-02-28 19:54:19 | FY | 2914600000 | 0 | 0 | 1 | 0 | 873900000 | 0 | 95600000 | 1222600000 | 1222600000 | 132200000 | 2.531e+08 | 2068300000 | 0.709634 | 1692000000 | 0.580526 | 64300000 | 1693400000 | 0.581006 | 786700000 | 896300000 | 0.307521 | 2.69726 | 2.69726 | 332300000 | 332300000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 8 2011 | 2012-02-28 00:00:00 | 2012-02-27 19:36:03 | FY | 3280600000 | 0 | 0 | 1 | 0 | 858600000 | 0 | 140400000 | 1259500000 | 1259500000 | 116900000 | 260500000 | 2311800000 | 0.704688 | 2021100000 | 0.616076 | 0 | 1936500000 | 0.590288 | 122100000 | 1812300000 | 0.552429 | 5.4293 | 5.4293 | 333800000 | 333800000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 9 2010 | 2011-02-28 | 2011-02-28 17:30:03 | FY | 3003700000 | 0 | 0 | 1 | 0 | 798200000 | 0 | 117000000 | 1174800000 | 1174800000 | 140300000 | 258000000 | 2119500000 | 0.70563 | 1828900000 | 0.608882 | 0 | 1721900000 | 0.57326 | 769800000 | 951400000 | 0.316743 | 2.86135 | 2.86135 | 332500000 | 332500000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 10 2009 | 2010-02-26 00:00:00 | 2010-02-26 17:26:57 | FY | 2612800000 | 0 | 0 | 1 | 0 | 694800000 | 0 | 72200000 | 1069700000 | 1069700000 | -109500000 | 2.514e+08 | 1578700000 | 0.604218 | 1543100000 | 0.590592 | 3.9e+06 | 1437500000 | 0.550176 | 611000000 | 825800000 | 0.316059 | 2.48212 | 2.48212 | 332700000 | 332700000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 11 2008 | 2009-03-02 00:00:00 | 2009-03-02 14:50:46 | FY | 2561000000 | 0 | 0 | 1 | 0 | 643100000 | 0 | 94900000 | 1253300000 | 1253300000 | -64100000 | 236000000 | 1419878000 | 0.554423 | 1307700000 | 0.510621 | 4.4e+06 | 1248000000 | 0.48731 | 532478000 | 715500000 | 0.279383 | 2.42707 | 2.42707 | 294800000 | 294800000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 12 2007 | 2008-02-28 | 2008-02-27 21:14:31 | FY | 1756100000 | 0 | 0 | 1 | 0 | 557200000 | 0 | 2370112000 | 705600000 | 705600000 | 114453000 | 139600000 | 1349822000 | 0.768648 | 1050500000 | 0.598201 | -17200000 | 1095800000 | 0.623996 | 437269000 | 658500000 | 0.374979 | 2.98639 | 2.98639 | 220500000 | 220500000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 13 2006 | 2007-03-01 | 2007-02-28 20:47:10 | FY | 1089900000 | 0 | 0 | 1 | 0 | 396300000 | 16740000 | 0 | 469100000 | 469100000 | 92103000 | 74100000 | 837812000 | 0.768705 | 620900000 | 0.569685 | 0 | 671700000 | 0.616295 | 264309000 | 407300000 | 0.373704 | 2.31948 | 2.31948 | 175600000 | 175600000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 14 2005 | 2006-03-06 | 2006-03-06 17:27:57 | FY | 977300000 | 56800000 | 920500000 | 0.941881 | 0 | 347200000 | 0 | 0 | 4.121e+08 | 4.689e+08 | 0 | 6.56e+07 | 365593000 | 0.374085 | 508400000 | 0.520209 | 0 | 508400000 | 0.520209 | -6.907e+06 | 306900000 | 0.314028 | 1.76177 | 1.76177 | 174200000 | 174200000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 15 2004 | 2005-03-10 | 2005-03-10 17:24:54 | FY | 752800000 | 19000000 | 733800000 | 0.974761 | 0 | 312700000 | 0 | 0 | 366100000 | 385100000 | 0 | 53800000 | 270813000 | 0.359741 | 367700000 | 0.488443 | 0 | 367700000 | 0.488443 | -2.587e+06 | 219600000 | 0.291711 | 1.276 | 1.276 | 172100000 | 172100000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 16 2003 | 2004-03-11 | 2004-03-11 13:35:36 | FY | 544800000 | 8.7e+06 | 536000000 | 0.983847 | 0 | 276900000 | 0 | 0 | 330000000 | 338700000 | 0 | 53000000 | 174369000 | 0.320061 | 206100000 | 0.378304 | 0 | 206100000 | 0.378304 | -731000 | 122100000 | 0.224119 | 0.71951 | 0.71951 | 169700000 | 169700000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 17 2002 | 2003-03-21 00:00:00 | 2003-03-21 16:58:23 | FY | 469100000 | 15900000 | 453200000 | 0.966105 | 0 | 244200000 | 0 | 0 | 299000000 | 314900000 | 0 | 48500000 | 142563000 | 0.303907 | 154200000 | 0.328715 | 0 | 154200000 | 0.328715 | -37000 | 94100000 | 0.200597 | 0.62608 | 0.62608 | 150300000 | 150300000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 18 2001 | 2002-03-28 00:00:00 | 2002-03-28 00:00:00 | FY | 396600000 | 9.5e+06 | 387200000 | 0.976299 | 0 | 235100000 | 0 | 0 | 272800000 | 282300000 | 0 | 37600000 | 152000000 | 0.383258 | 114400000 | 0.288452 | 0 | 114400000 | 0.288452 | 46100000 | 68300000 | 0.172214 | 0.42929 | 0.42929 | 159100000 | 159100000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 19 2000 | None | None | FY | 226600000 | 0 | 226600000 | 1 | 0 | 201100000 | 0 | 0 | 234600000 | 234600000 | -1.2e+06 | 33500000 | 23100000 | 0.101942 | -8.1e+06 | -0.035746 | 0 | -9.2e+06 | -0.0406 | -3.3e+06 | -5.9e+06 | -0.026037 | -0.03708 | -0.03708 | 159100000 | 159100000 | None | None | . 20 1999 | None | None | FY | 210600000 | 0 | 210600000 | 1 | 0 | 178700000 | 0 | 0 | 204000000 | 204000000 | -2.1e+06 | 25300000 | 27800000 | 0.132004 | 6.6e+06 | 0.031339 | 0 | 4.5e+06 | 0.021368 | 1.9e+06 | 2.7e+06 | 0.012821 | 0.01697 | 0.01697 | 159100000 | 159100000 | None | None | . 21 1998 | None | None | FY | 197200000 | 0 | 197200000 | 1 | 0 | 165000000 | 0 | 0 | 183000000 | 183000000 | -2.8e+06 | 0 | 8.5e+06 | 0.043103 | 14200000 | 0.072008 | 0 | 11300000 | 0.057302 | 4.3e+06 | 7e+06 | 0.035497 | 0.044 | 0.044 | 159100000 | 159100000 | None | None | . 22 1997 | None | None | FY | 177600000 | 0 | 177600000 | 1 | 0 | 141900000 | 0 | 0 | 158600000 | 158600000 | 0 | 0 | 15700000 | 0.088401 | 19100000 | 0.107545 | 0 | 19100000 | 0.107545 | 7e+06 | 8.7e+06 | 0.048986 | 0.05468 | 0.05468 | 159100000 | 159100000 | None | None | . #Here im making subsets of metrics that I want to plot on their own charts revenueBases = [&#39;revenue&#39;,&#39;grossProfit&#39;, &quot;ebitda&quot;,&quot;operatingIncome&quot; ,&quot;incomeBeforeTax&quot; , &quot;netIncome&quot;, &quot;Net Income Com&quot;] epsS = [&quot;eps&quot; , &quot;epsdiluted&quot; , ] costs = [ &quot;costOfRevenue&quot; ,&quot;operatingExpenses&quot; ] oppCosts = [&quot;researchAndDevelopmentExpenses&quot; , &quot;generalAndAdministrativeExpenses&quot; , &quot;sellingAndMarketingExpenses&quot;,&quot;otherExpenses&quot;,&quot;costAndExpenses&quot;,&quot;interestExpense&quot;,&quot;depreciationAndAmortization&quot;] floats = [&#39;weightedAverageShsOut&#39; , &#39;weightedAverageShsOutDil&#39; , ] ratios = [ &#39;grossProfitRatio&#39; , &#39;ebitdaratio&#39; , &#39;operatingIncomeRatio&#39; , &#39;incomeBeforeTaxRatio&#39; , &#39;netIncomeRatio&#39; , ] revs_g = df[df[&#39;Metric&#39;].isin(revenueBases)] eps_g = df[df[&#39;Metric&#39;].isin(epsS)] cost_g = df[df[&#39;Metric&#39;].isin(costs)] operating_g = df[df[&#39;Metric&#39;].isin(oppCosts)] float_g = df[df[&#39;Metric&#39;].isin(floats)] ratios_g = df[df[&#39;Metric&#39;].isin(ratios)] # revs_gg = df[df[&#39;Metric&#39;].isin(growthRates)] most_recent_float = list((float_g.Value).dropna())[0] #This dictionary returns a set of graphable dataframes that are segmented by breakdowns income_statement = { &quot;revenue_streams&quot; : revs_g, &quot;eps&quot;: eps_g, &quot;cost_components&quot;:cost_g, &quot;operating_costs&quot;:operating_g, &quot;historical_shares_outstanding&quot;: float_g, &quot;historical_ratios&quot;:ratios_g, &#39;most_recent_shares_outstanding&#39;:most_recent_float, } . Revenues . EPS . Cost Components . Shares Outstanding . make_multi_LineGraph(float_g, True) . Revenue streams as a portion of total income . make_multi_LineGraph(ratios_g, False) . make_multi_LineGraph(ratios_g, True) . Balance Sheet . Year fillingDate acceptedDate period cashAndCashEquivalents shortTermInvestments cashAndShortTermInvestments netReceivables inventory otherCurrentAssets totalCurrentAssets propertyPlantEquipmentNet goodwill intangibleAssets goodwillAndIntangibleAssets longTermInvestments taxAssets otherNonCurrentAssets totalNonCurrentAssets otherAssets totalAssets accountPayables shortTermDebt taxPayables deferredRevenue otherCurrentLiabilities totalCurrentLiabilities longTermDebt deferredRevenueNonCurrent deferredTaxLiabilitiesNonCurrent otherNonCurrentLiabilities totalNonCurrentLiabilities otherLiabilities totalLiabilities commonStock retainedEarnings accumulatedOtherComprehensiveIncomeLoss othertotalStockholdersEquity totalStockholdersEquity totalLiabilitiesAndStockholdersEquity totalInvestments totalDebt netDebt link finalLink . 0 2019 | 2020-02-28 00:00:00 | 2020-02-28 14:00:27 | FY | 1551400000 | 83200000 | 1634600000 | 491800000 | 0 | 37441400000 | 39567800000 | 1058600000 | 10742500000 | 22293000000 | 33035500000 | 1018600000 | 5635200000 | 534800000 | 35647500000 | 37976200000 | 75215300000 | 61900000 | 0 | 0 | 5635000000 | 38410900000 | 38522500000 | 3834700000 | 0 | 5635200000 | 1063600000 | 10563900000 | 1063600000 | 49086400000 | 3.6e+06 | 5008700000 | 3.4e+06 | 2.6e+06 | 26128900000 | 75215300000 | 1101800000 | 3842100000 | 2290700000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 1 2018 | 2019-02-28 00:00:00 | 2019-02-28 16:41:26 | FY | 1374500000 | 72900000 | 1447400000 | 553300000 | 0 | 39886000000 | 41886700000 | 448700000 | 10805300000 | 22675400000 | 33480700000 | 1031600000 | 5665900000 | 628000000 | 35589000000 | 40514000000 | 77475700000 | 116000000 | 0 | 0 | 5665000000 | 40582400000 | 41272600000 | 3826800000 | 0 | 5665900000 | 745100000 | 10284600000 | 745100000 | 51557200000 | 3.6e+06 | 4855300000 | 5.3e+06 | 5.2e+06 | 25918500000 | 77475700000 | 1104500000 | 4401000000 | 3026500000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 2 2017 | 2018-03-01 00:00:00 | 2018-02-28 18:15:07 | FY | 1903600000 | 90100000 | 1993700000 | 359700000 | 0 | 44553100000 | 46906500000 | 399700000 | 7569000000 | 19521600000 | 27090600000 | 999000000 | 4857700000 | 395400000 | 28884700000 | 44948500000 | 75791200000 | 31300000 | 0 | 0 | 4857000000 | 45641600000 | 45672900000 | 2233100000 | 0 | 4857700000 | 615700000 | 7706500000 | 615700000 | 53379400000 | 3.4e+06 | 4497200000 | 14300000 | 13700000 | 22411800000 | 75791200000 | 1089100000 | 2233100000 | 329500000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 3 2016 | 2017-02-27 00:00:00 | 2017-02-27 16:01:59 | FY | 1868600000 | 83300000 | 1951900000 | 364400000 | 0 | 37715200000 | 40031500000 | 425200000 | 7569000000 | 19617100000 | 27186100000 | 991900000 | 7291000000 | 734700000 | 29337900000 | 38449900000 | 69369400000 | 26200000 | 0 | 0 | 7291000000 | 38919400000 | 38945600000 | 2231200000 | 0 | 7291000000 | 560900000 | 10083100000 | 560900000 | 49028700000 | 3.4e+06 | 2524500000 | -14100000 | 5.4e+06 | 20340700000 | 69369400000 | 1075200000 | 2231200000 | 362600000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 4 2015 | 2016-02-26 00:00:00 | 2016-02-26 17:37:16 | FY | 1692600000 | 72500000 | 1765100000 | 357800000 | 0 | 35781600000 | 37904500000 | 491700000 | 7569000000 | 19713200000 | 27282200000 | 0 | 7358300000 | 1681000000 | 29454900000 | 37462600000 | 67359400000 | 28700000 | 0 | 0 | 7358000000 | 36795800000 | 36824500000 | 2229300000 | 0 | 7358300000 | 395500000 | 9983100000 | 395500000 | 46807600000 | 3.4e+06 | 2907600000 | -80800000 | 14200000 | 20551800000 | 67359400000 | 72500000 | 2229300000 | 536700000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 5 2014 | 2015-02-26 | 2015-02-26 17:22:18 | FY | 1366100000 | 74700000 | 1440800000 | 341200000 | 0 | 40763300000 | 42545300000 | 508900000 | 7569000000 | 19812700000 | 27381700000 | 991200000 | 7302700000 | 808200000 | 29696200000 | 41571500000 | 72241500000 | 36900000 | 0 | 0 | 7302000000 | 41494300000 | 41531200000 | 2107900000 | 0 | -7302700000 | 376200000 | 9786800000 | 376200000 | 51318000000 | 3.4e+06 | 3317300000 | 6.2e+06 | 29100000 | 20923500000 | 72241500000 | 1065900000 | 2107900000 | 741800000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 6 2013 | 2014-03-03 | 2014-02-28 18:30:52 | FY | 2470000000 | 68000000 | 2538000000 | 303000000 | 0 | 21565000000 | 24406000000 | 513000000 | 7569000000 | 19917000000 | 27486000000 | 991000000 | 7250000000 | 882000000 | 29872000000 | 22447000000 | 54278000000 | 36000000 | 0 | 0 | 7249000000 | 22525000000 | 23311000000 | 2107000000 | 0 | -7249700000 | 449000000 | 9812000000 | 449000000 | 33123000000 | 3e+06 | 3495000000 | 152000000 | 53000000 | 21155000000 | 54278000000 | 1059000000 | 2857000000 | 387000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 7 2012 | 2013-03-01 00:00:00 | 2013-02-28 19:54:19 | FY | 1605000000 | 57000000 | 1661000000 | 268000000 | 0 | 6789000000 | 8718000000 | 724000000 | 7567000000 | 20029000000 | 27596000000 | 991000000 | 7413000000 | 835000000 | 30145000000 | 7624000000 | 38863000000 | 42000000 | 0 | 0 | 7413000000 | 6826000000 | 7617000000 | 2107000000 | 0 | -7413300000 | 221000000 | 9827000000 | 221000000 | 17444000000 | 3e+06 | 3993000000 | 418000000 | 209000000 | 21419000000 | 38863000000 | 1048000000 | 2857000000 | 1252000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 8 2011 | 2012-02-28 00:00:00 | 2012-02-27 19:36:03 | FY | 1042000000 | 48000000 | 1090000000 | 289000000 | 0 | 9567000000 | 10946000000 | 822000000 | 7984000000 | 20363000000 | 28347000000 | 0 | 7227000000 | 645000000 | 29813000000 | 10212000000 | 40759000000 | 31000000 | 0 | 0 | 0 | 9584000000 | 9615000000 | 2107000000 | 0 | -7226800000 | 188000000 | 9592000000 | 188000000 | 19207000000 | 1e+06 | 4325000000 | 111000000 | -37000000 | 21552000000 | 40759000000 | 48000000 | 2107000000 | 1065000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 9 2010 | 2011-02-28 | 2011-02-28 17:30:03 | FY | 855000000 | 50000000 | 905000000 | 309000000 | 0 | 4174000000 | 5388000000 | 787000000 | 7984000000 | 20503000000 | 28487000000 | 344000000 | 7840000000 | 42000000 | 29658000000 | 4181000000 | 35046000000 | 52000000 | 0 | 0 | 0 | 4168000000 | 4781000000 | 2105000000 | 0 | 7840400000 | 192000000 | 10205000000 | 192000000 | 14986000000 | 1e+06 | 2886000000 | -104000000 | -110000000 | 20060000000 | 35046000000 | 394000000 | 2525000000 | 1670000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 10 2009 | 2010-02-26 00:00:00 | 2010-02-26 17:26:57 | FY | 261000000 | 43000000 | 303000000 | 276000000 | 0 | 6120000000 | 6699000000 | 739000000 | 7549000000 | 20237000000 | 27786000000 | 371000000 | 7646000000 | 56000000 | 28952000000 | 6139000000 | 35651000000 | 47000000 | 0 | 0 | 0 | 6078000000 | 6524000000 | 2015000000 | 0 | 0 | 166000000 | 9826000000 | 166000000 | 16350000000 | 1e+06 | 2240000000 | -546000000 | -127000000 | 19301000000 | 35651000000 | 414000000 | 2315000000 | 2054000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 11 2008 | 2009-03-02 00:00:00 | 2009-03-02 14:50:46 | FY | 298000000 | 310000000 | 608000000 | 267000000 | 0 | 18237000000 | 19112000000 | 707000000 | 7519000000 | 20351000000 | 27870000000 | 358000000 | 7728000000 | 111000000 | 29047000000 | 18313000000 | 48159000000 | 71000000 | 0 | 0 | 0 | 18179000000 | 18643000000 | 2966000000 | 0 | 0 | 133000000 | 10827000000 | 133000000 | 29470000000 | 1e+06 | 1720000000 | -320000000 | -160000000 | 18689000000 | 48159000000 | 668000000 | 3216000000 | 2918000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 12 2007 | 2008-02-28 | 2008-02-27 21:14:31 | FY | 845000000 | 203000000 | 1049000000 | 198000000 | 0 | 3740000000 | 4987000000 | 377000000 | 5049000000 | 9784000000 | 14833000000 | 19000000 | 3848000000 | 90000000 | 15319000000 | 3806000000 | 20306000000 | 59000000 | 0 | 0 | 0 | 3734000000 | 4076000000 | 0 | 0 | 0 | 76000000 | 3925000000 | 76000000 | 8001000000 | 1e+06 | 1619000000 | -6e+06 | -3e+06 | 12306000000 | 20306000000 | 222000000 | 164000000 | -681000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 13 2006 | 2007-03-01 | 2007-02-28 20:47:10 | FY | 970000000 | 251000000 | 1220000000 | 121000000 | 0 | 2689000000 | 4030000000 | 169000000 | 0 | 0 | 0 | 0 | 0 | 107000000 | 277000000 | 2796000000 | 4307000000 | 26000000 | 0 | 0 | 0 | 2730000000 | 2755000000 | 0 | 0 | 0 | 32000000 | 32000000 | 32000000 | 2787000000 | 0 | 1116000000 | -6e+06 | -3e+06 | 1519000000 | 4307000000 | 251000000 | 0 | -970000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 14 2005 | 2006-03-06 | 2006-03-06 17:27:57 | FY | 611000000 | 293000000 | 904000000 | 87000000 | 0 | 2792000000 | 3783000000 | 153000000 | 0 | 0 | 0 | 0 | 0 | 33000000 | 186000000 | 2826000000 | 3969000000 | 24000000 | 0 | 0 | 0 | 2806000000 | 2830000000 | 0 | 0 | 0 | 21000000 | 21000000 | 21000000 | 2851000000 | 0 | 796000000 | -6e+06 | -3e+06 | 1119000000 | 3969000000 | 293000000 | 0 | -611000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 15 2004 | 2005-03-10 | 2005-03-10 17:24:54 | FY | 358000000 | 390000000 | 748000000 | 79000000 | 0 | 1868000000 | 2695000000 | 131000000 | 0 | 0 | 0 | 0 | 0 | 31000000 | 162000000 | 1900000000 | 2857000000 | 23000000 | 0 | 0 | 0 | 2003000000 | 2026000000 | 0 | 0 | 0 | 19000000 | 19000000 | 19000000 | 2045000000 | 0 | 553000000 | -4e+06 | -2e+06 | 813000000 | 2857000000 | 390000000 | 0 | -358000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 16 2003 | 2004-03-11 | 2004-03-11 13:35:36 | FY | 185000000 | 627000000 | 812000000 | 53000000 | 0 | 3858000000 | 4723000000 | 118000000 | 0 | 0 | 0 | 0 | 0 | 31000000 | 150000000 | 3889000000 | 4873000000 | 25000000 | 0 | 0 | 0 | 4263000000 | 4288000000 | 0 | 0 | 0 | 22000000 | 22000000 | 22000000 | 4310000000 | 0 | 368000000 | -2e+06 | -1e+06 | 563000000 | 4873000000 | 627000000 | 0 | -185000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 17 2002 | 2003-03-21 00:00:00 | 2003-03-21 16:58:23 | FY | 339000000 | 0 | 339000000 | 51000000 | 0 | 2825000000 | 3215000000 | 110000000 | 0 | 0 | 0 | 0 | 0 | 30000000 | 140000000 | 2855000000 | 3355000000 | 28000000 | 0 | 0 | 0 | 2862000000 | 2889000000 | 2e+06 | 0 | 0 | 17000000 | 20000000 | 17000000 | 2909000000 | 0 | 267000000 | -2e+06 | -1e+06 | 446000000 | 3355000000 | 0 | 2e+06 | -337000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 18 2001 | 2002-03-28 00:00:00 | 2002-03-28 00:00:00 | FY | 69000000 | 92000000 | 161000000 | 41000000 | 0 | 1744000000 | 1946000000 | 101000000 | 0 | 0 | 0 | 0 | 0 | 20000000 | 121000000 | 1764000000 | 2067000000 | 24000000 | 0 | 0 | 0 | 1778000000 | 1802000000 | 7e+06 | 0 | 0 | 10000000 | 17000000 | 10000000 | 1819000000 | 0 | 190000000 | -2e+06 | -1e+06 | 248000000 | 2067000000 | 92000000 | 7e+06 | -62000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 19 2000 | None | None | FY | 31000000 | 44000000 | 75000000 | 29000000 | 0 | 163000000 | 267000000 | 80000000 | 0 | 0 | 0 | 0 | 0 | 34000000 | 114000000 | 198000000 | 381000000 | 12000000 | 0 | 0 | 0 | 186000000 | 198000000 | 6e+06 | 0 | 0 | 13000000 | 20000000 | 13000000 | 218000000 | 0 | 120000000 | -157000000 | 0 | 164000000 | 381000000 | 44000000 | 6e+06 | -25000000 | None | None | . Assets . make_multi_LineGraph(assets_g, True) . Investment and Cash Equivalents . make_multi_LineGraph(dep_g, True) . Liabilities . Liabilities Vs Equity . Cash Flows . Year fillingDate acceptedDate period netIncome depreciationAndAmortization deferredIncomeTax stockBasedCompensation changeInWorkingCapital accountsReceivables inventory accountsPayables otherWorkingCapital otherNonCashItems netCashProvidedByOperatingActivities investmentsInPropertyPlantAndEquipment acquisitionsNet purchasesOfInvestments salesMaturitiesOfInvestments otherInvestingActivites netCashUsedForInvestingActivites debtRepayment commonStockIssued commonStockRepurchased dividendsPaid otherFinancingActivites netCashUsedProvidedByFinancingActivities effectOfForexChangesOnCash netChangeInCash cashAtEndOfPeriod cashAtBeginningOfPeriod operatingCashFlow capitalExpenditure freeCashFlow link finalLink . 0 2019 | 2020-02-28 00:00:00 | 2020-02-28 14:00:27 | FY | 2115800000 | 4.733e+08 | -3.7e+06 | 73100000 | -22700000 | 60800000 | 0 | -54100000 | 1045300000 | 110100000 | 2672800000 | -245600000 | 0 | -15000000 | 18800000 | 74200000 | -152600000 | -569200000 | 0 | 0 | -1695900000 | 1475700000 | -2340800000 | 0 | 179400000 | 1553900000 | 1374500000 | 2672800000 | -245600000 | 2427200000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 1 2018 | 2019-02-28 00:00:00 | 2019-02-28 16:41:26 | FY | 1963700000 | 248700000 | 114300000 | 96500000 | 61000000 | -65500000 | 0 | 32300000 | 614100000 | 53100000 | 2440800000 | -116700000 | -1795400000 | -10000000 | 11800000 | 10700000 | -1889600000 | -452500000 | 0 | 11500000 | -2149900000 | 2896900000 | -1080000000 | 0 | -528800000 | 1374800000 | 1903600000 | 2440800000 | -116700000 | 2324100000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 2 2017 | 2018-03-01 00:00:00 | 2018-02-28 18:15:07 | FY | 4063400000 | 208500000 | -2445600000 | 58000000 | -105400000 | 6e+06 | 0 | 5.1e+06 | 1233600000 | 30200000 | 1751100000 | -81900000 | 0 | -5.3e+06 | 22100000 | 245000000 | 179900000 | 0 | 0 | 36700000 | -1993500000 | 1911800000 | -1985300000 | 0 | -54300000 | 1814300000 | 1868600000 | 1751100000 | -81900000 | 1669200000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 3 2016 | 2017-02-27 00:00:00 | 2017-02-27 16:01:59 | FY | 1534100000 | 2.253e+08 | -83000000 | 66200000 | 13000000 | -8.1e+06 | 0 | -2.6e+06 | 1085900000 | 42600000 | 1732000000 | -91800000 | 0 | -9.1e+06 | 41700000 | 112900000 | 53700000 | 0 | 0 | 51800000 | -1787200000 | 2062100000 | -1620500000 | 0 | 165200000 | 1857800000 | 1692600000 | 1732000000 | -91800000 | 1640200000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 4 2015 | 2016-02-26 00:00:00 | 2016-02-26 17:37:16 | FY | 1247000000 | 228600000 | 63300000 | 60800000 | -149600000 | -17300000 | 0 | -8.2e+06 | 1080000000 | 126000000 | 1515300000 | -114200000 | 0 | -16700000 | 38300000 | 110500000 | 17900000 | -673000000 | 0 | 64000000 | -1343400000 | 2502300000 | -1206700000 | 0 | 326500000 | 1692600000 | 1366100000 | 1515300000 | -114200000 | 1401100000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 5 2014 | 2015-02-26 | 2015-02-26 17:22:18 | FY | 1126900000 | 233200000 | 78900000 | 54800000 | -193800000 | -38500000 | 0 | 700000 | 1014100000 | 46200000 | 1291400000 | -140700000 | 0 | -59300000 | 37500000 | -36600000 | -199100000 | -750000000 | 0 | 53300000 | -1496800000 | 1417000000 | -2195900000 | 0 | -1103600000 | 1366400000 | 2470000000 | 1291400000 | -140700000 | 1150700000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 6 2013 | 2014-03-03 | 2014-02-28 18:30:52 | FY | 978100000 | 238100000 | -6e+06 | 54400000 | -9.2e+06 | -35500000 | 0 | -5.5e+06 | 1094600000 | 79500000 | 1280500000 | -125600000 | 0 | -36000000 | 36500000 | 279600000 | 190500000 | -750000000 | 0 | 73700000 | -599100000 | 743100000 | -606000000 | 0 | 865000000 | 2470000000 | 1605000000 | 1280500000 | -125600000 | 1154900000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 7 2012 | 2013-03-01 00:00:00 | 2013-02-28 19:54:19 | FY | 906700000 | 2.531e+08 | 82200000 | 61400000 | -2.4e+06 | -300000 | 0 | 11200000 | 1101000000 | -22800000 | 1216800000 | -141800000 | -162900000 | -32000000 | 29500000 | 69200000 | -206000000 | 0 | 0 | 22100000 | -1224300000 | 775900000 | -448400000 | 0 | 562400000 | 1604400000 | 1042000000 | 1216800000 | -141800000 | 1075000000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 8 2011 | 2012-02-28 00:00:00 | 2012-02-27 19:36:03 | FY | 1814400000 | 260500000 | -658700000 | 51300000 | -142300000 | -13200000 | 0 | -21000000 | 1330600000 | 72400000 | 1346300000 | -172200000 | 0 | -220400000 | 11300000 | 227700000 | -153600000 | -420500000 | 0 | -214600000 | -372800000 | 8.1e+06 | -1005600000 | 0 | 187100000 | 1042100000 | 855000000 | 1346300000 | -172200000 | 1174100000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 9 2010 | 2011-02-28 | 2011-02-28 17:30:03 | FY | 952100000 | 258000000 | 22300000 | 40900000 | 40500000 | -28700000 | 0 | 6.1e+06 | 606300000 | 83500000 | 1356400000 | -160000000 | -19600000 | -575300000 | 11900000 | 634600000 | -108400000 | -200100000 | 0 | 44400000 | -305300000 | 427300000 | -653400000 | 0 | 594600000 | 855600000 | 261000000 | 1356400000 | -160000000 | 1196400000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 10 2009 | 2010-02-26 00:00:00 | 2010-02-26 17:26:57 | FY | 825800000 | 2.514e+08 | -56900000 | 33000000 | -31800000 | -14000000 | 0 | -24000000 | 176000000 | 94600000 | 1083100000 | 0 | 0 | -159000000 | 439000000 | 0 | 544800000 | 0 | 0 | -5.2e+06 | -305600000 | 0 | -1665200000 | 0 | -37300000 | 260700000 | 298000000 | 1083100000 | -157900000 | 925200000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 11 2008 | 2009-03-02 00:00:00 | 2009-03-02 14:50:46 | FY | 715500000 | 236000000 | -115100000 | 0 | -34900000 | 0 | 0 | 0 | 468553000 | 395700000 | 1197200000 | 0 | 0 | -45195000 | 0 | 0 | -3749100000 | 665390000 | 0 | -202000000 | -615200000 | 0 | 2004500000 | 0 | -547400000 | 297600000 | 845000000 | 1197200000 | -200100000 | 997100000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 12 2007 | 2008-02-28 | 2008-02-27 21:14:31 | FY | 658500000 | 139600000 | -50600000 | 22846000 | 4e+06 | -49926000 | 0 | 4.594e+06 | 910992000 | 62900000 | 814400000 | 0 | 0 | -129125000 | 0 | 0 | -78600000 | 0 | 0 | -908900000 | -151600000 | 0 | -859900000 | 0 | -124200000 | 845800000 | 970000000 | 814400000 | -166700000 | 647700000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 13 2006 | 2007-03-01 | 2007-02-28 20:47:10 | FY | 407300000 | 74100000 | -24800000 | 16359000 | -9.1e+06 | -35878000 | 0 | 1.621e+06 | 1274898000 | 24300000 | 471700000 | 0 | -17651000 | -29681000 | 0 | 0 | -85900000 | 0 | 0 | 16400000 | -87500000 | 0 | -27200000 | 0 | 358600000 | 969600000 | 611000000 | 471700000 | -90400000 | 381300000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 14 2005 | 2006-03-06 | 2006-03-06 17:27:57 | FY | 306900000 | 6.56e+07 | -3.2e+06 | 0 | -39300000 | 14000 | 0 | 0 | 525846000 | 61600000 | 391600000 | 0 | 0 | 1.853e+06 | 0 | 0 | -82300000 | 0 | 0 | 7.3e+06 | -63300000 | 0 | -55900000 | 0 | 253300000 | 611300000 | 358000000 | 391600000 | -86700000 | 304900000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 15 2004 | 2005-03-10 | 2005-03-10 17:24:54 | FY | 219600000 | 53800000 | 4.3e+06 | 0 | -17400000 | -14000 | 0 | 0 | 274293000 | 68600000 | 328800000 | 0 | 0 | 2.368e+06 | 0 | 0 | -125800000 | 0 | 0 | 6e+06 | -35100000 | 0 | -30500000 | 0 | 172400000 | 357400000 | 185000000 | 328800000 | -72400000 | 256400000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 16 2003 | 2004-03-11 | 2004-03-11 13:35:36 | FY | 122100000 | 53000000 | 3.3e+06 | 0 | -600000 | 0 | 0 | 0 | 385583000 | 13300000 | 191100000 | 0 | 0 | -176745000 | 0 | 0 | -327100000 | 0 | 0 | 7.9e+06 | -20600000 | 0 | -18200000 | 0 | -154100000 | 184900000 | 339000000 | 191100000 | -63000000 | 128100000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 17 2002 | 2003-03-21 00:00:00 | 2003-03-21 16:58:23 | FY | 94100000 | 48500000 | -5.6e+06 | 0 | -100000 | 0 | 0 | 0 | 120940000 | 4.3e+06 | 141100000 | 0 | 0 | 0 | 0 | 0 | 34400000 | 0 | 0 | 117500000 | -17300000 | 0 | 94700000 | 0 | 270200000 | 339200000 | 69000000 | 141100000 | -56300000 | 84800000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 18 2001 | 2002-03-28 00:00:00 | 2002-03-28 00:00:00 | FY | 68300000 | 37600000 | -8.9e+06 | 0 | 6.3e+06 | -12000000 | 0 | -12000000 | 0 | 17200000 | 120600000 | 0 | 0 | 0 | 0 | 0 | -78200000 | 0 | 0 | 0 | 0 | 0 | -3.9e+06 | 0 | 38400000 | 69400000 | 31000000 | 120600000 | -30400000 | 90200000 | https://www.sec.gov/Archives/edgar/data/115637... | https://www.sec.gov/Archives/edgar/data/115637... | . 19 2000 | None | None | FY | -5.9e+06 | 33500000 | 800000 | 0 | -1.7e+06 | 0 | 0 | 0 | 0 | 6.3e+06 | 33000000 | 0 | 0 | 0 | 0 | 0 | -13000000 | 0 | 0 | 0 | 0 | 0 | -3.6e+06 | 0 | 16400000 | 16400000 | 0 | 33000000 | -25200000 | 7.8e+06 | None | None | . 20 1999 | None | None | FY | 2.7e+06 | 25300000 | 5.1e+06 | 0 | -4.1e+06 | 0 | 0 | 0 | 0 | 2.2e+06 | 31200000 | 0 | 0 | 0 | 0 | 0 | -29100000 | 0 | 0 | 0 | 0 | 0 | -2.7e+06 | 0 | -600000 | 1373900000 | 1374500000 | 31200000 | -55300000 | -24100000 | None | None | . vects = [ &quot;netIncome&quot; , &quot;depreciationAndAmortization&quot; , &quot;deferredIncomeTax&quot; , &quot;stockBasedCompensation&quot; , &quot;changeInWorkingCapital&quot; , &quot;accountsReceivables&quot; , &quot;inventory&quot; , &quot;accountsPayables&quot; , &quot;otherWorkingCapital&quot; , &quot;otherNonCashItems&quot; , &quot;netCashProvidedByOperatingActivities&quot; , &quot;investmentsInPropertyPlantAndEquipment&quot; , &quot;acquisitionsNet&quot; , &quot;purchasesOfInvestments&quot; , &quot;salesMaturitiesOfInvestments&quot; , &quot;otherInvestingActivites&quot; , &quot;netCashUsedForInvestingActivites&quot; , &quot;debtRepayment&quot; , &quot;commonStockIssued&quot; , &quot;commonStockRepurchased&quot; , &quot;dividendsPaid&quot; , &quot;otherFinancingActivites&quot; , &quot;netCashUsedProvidedByFinancingActivities&quot; , &quot;effectOfForexChangesOnCash&quot; , &quot;netChangeInCash&quot; , &quot;cashAtEndOfPeriod&quot; , &quot;cashAtBeginningOfPeriod&quot; , &quot;operatingCashFlow&quot; , &quot;capitalExpenditure&quot; , &quot;freeCashFlow&quot; , ] outflows = [ &quot;depreciationAndAmortization&quot; , &quot;stockBasedCompensation&quot; ,&quot;deferredIncomeTax&quot; ,&quot;changeInWorkingCapital&quot; ,&quot;commonStockRepurchased&quot; , &quot;dividendsPaid&quot; ,&quot;capitalExpenditure&quot;,&#39;purchasesOfInvestments&#39;,&#39;netCashUsedForInvestingActivites&#39;,&#39;inventory&#39;,&#39;debtRepayment&#39;] flows = [&quot;operatingCashFlow&quot; ,&quot;Acquisitions and disposals&quot; , &quot;salesMaturitiesOfInvestments&quot; , &quot;netChangeInCash&quot; ,&quot;freeCashFlow&quot; ,&quot;Free Cash Flow&quot; , &#39;netIncome&#39;, &quot;effectOfForexChangesOnCash&quot; ] out_g = df[df[&#39;Metric&#39;].isin(outflows)] flow_g = df[df[&#39;Metric&#39;].isin(flows)] . Outflows . make_multi_LineGraph(out_g, False) . make_multi_LineGraph(out_g, True) . Other Cash Flows . make_multi_LineGraph(flow_g, False) . make_multi_LineGraph(flow_g, True) . Step 3: Asses Social Impact and Enviormental Costs . Step 4: Approximate Fair Value for the Firm and Arrive at a Target Price . growth_annually . 2019 2018 2017 2016 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 2001 2000 . revenueGrowth 0.129624 | 0.182374 | 0.013768 | 0.080678 | 0.068851 | 0.060007 | 0.007445 | -0.111565 | 0.092186 | 0.149610 | 0.020226 | 0.458345 | 0.611249 | 0.115215 | 0.298220 | 0.381791 | 0.161373 | 0.182804 | 0.750221 | 0.075973 | . grossProfitGrowth 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | -1.000000 | 0.254429 | 0.369030 | 0.182701 | 0.170455 | 0.708738 | 0.075973 | . ebitgrowth -0.007593 | 0.128538 | 0.050034 | 0.106502 | 0.124576 | 0.080269 | -0.032506 | -0.162832 | 0.105090 | 0.185212 | 0.180011 | 0.244836 | 0.691899 | 0.221282 | 0.382649 | 0.784085 | 0.336576 | 0.347902 | 15.123457 | -2.227273 | . operatingIncomeGrowth -0.007593 | 0.128538 | 0.050034 | 0.106502 | 0.124576 | 0.080269 | -0.032506 | -0.162832 | 0.105090 | 0.185212 | 0.180011 | 0.244836 | 0.691899 | 0.221282 | 0.382649 | 0.784085 | 0.336576 | 0.347902 | 15.123457 | -2.227273 | . netIncomeGrowth 0.078636 | -0.517104 | 1.648719 | 0.230233 | 0.106379 | 0.153870 | 0.089814 | -0.505435 | 0.904877 | 0.152095 | 0.154158 | 0.086560 | 0.616744 | 0.327142 | 0.397541 | 0.798526 | 0.297556 | 0.377745 | 12.576271 | -3.185185 | . epsgrowth 0.034973 | -0.522037 | 1.638912 | 0.226340 | 0.100383 | 0.148162 | 0.082969 | -0.503203 | 0.897461 | 0.152785 | 0.022682 | -0.187290 | 0.287526 | 0.316562 | 0.380697 | 0.773429 | 0.149230 | 0.458408 | 12.577400 | -3.185032 | . epsdilutedGrowth 0.034973 | -0.522037 | 1.638912 | 0.226340 | 0.100383 | 0.148162 | 0.082969 | -0.503203 | 0.897461 | 0.152785 | 0.022682 | -0.187290 | 0.287526 | 0.316562 | 0.380697 | 0.773429 | 0.149230 | 0.458408 | 12.577400 | -3.185032 | . weightedAverageSharesGrowth 0.042189 | 0.010320 | 0.003717 | 0.003173 | 0.005448 | 0.004973 | 0.006320 | -0.004494 | 0.003910 | -0.000601 | 0.128562 | 0.336961 | 0.255695 | 0.008037 | 0.012202 | 0.014143 | 0.129075 | -0.055311 | 0.000000 | 0.000000 | . weightedAverageSharesDilutedGrowth 0.042189 | 0.010320 | 0.003717 | 0.003173 | 0.005448 | 0.004973 | 0.006320 | -0.004494 | 0.003910 | -0.000601 | 0.128562 | 0.336961 | 0.255695 | 0.008037 | 0.012202 | 0.014143 | 0.129075 | -0.055311 | 0.000000 | 0.000000 | . dividendsperShareGrowth -0.243105 | 0.067439 | 0.111301 | 0.326148 | -0.107349 | 1.486051 | -0.513732 | 2.298891 | 0.216338 | -0.000381 | -0.559839 | 2.035276 | 0.379771 | 0.371286 | 0.781678 | 0.680122 | 0.054625 | 0.000000 | 0.000000 | 0.000000 | . operatingCashFlowGrowth 0.095051 | 0.393867 | 0.011028 | 0.143008 | 0.173378 | 0.008512 | 0.052350 | -0.096190 | -0.007446 | 0.252331 | -0.095306 | 0.470039 | 0.726521 | 0.204545 | 0.190998 | 0.720565 | 0.354359 | 0.169983 | 2.654545 | 0.057692 | . freeCashFlowGrowth 0.044361 | 0.392344 | 0.017681 | 0.170652 | 0.217607 | -0.003637 | 0.074326 | -0.084405 | -0.018639 | 0.293126 | -0.072109 | 0.539447 | 0.698662 | 0.250574 | 0.189158 | 1.001561 | 0.510613 | -0.059867 | 10.564103 | -1.323651 | . tenYRevenueGrowthPerShare 0.730312 | 0.443140 | 0.345097 | 0.708853 | 0.754957 | 1.117337 | 1.735136 | 1.810232 | 2.942615 | 5.342715 | 4.513960 | 5.099474 | 4.591791 | 3.357851 | 2.939037 | 2.071206 | 1.254060 | 1.191375 | 0.750221 | 0.000000 | . fiveYRevenueGrowthPerShare 0.467199 | 0.427764 | 0.221366 | 0.079195 | 0.089887 | 0.179330 | 0.010769 | 0.101306 | 0.583452 | 0.610220 | 0.795373 | 1.705994 | 1.551727 | 1.489887 | 2.939037 | 2.071206 | 1.254060 | 1.191375 | 0.750221 | 0.000000 | . threeYRevenueGrowthPerShare 0.281182 | 0.273340 | 0.156660 | 0.207905 | 0.122529 | -0.057629 | -0.027993 | 0.116851 | 0.131318 | 0.134290 | 0.265293 | 0.548468 | 0.820715 | 0.933334 | 0.797518 | 0.754754 | 1.254060 | 1.191375 | 0.750221 | 0.000000 | . tenYOperatingCFGrowthPerShare 1.291806 | 0.748504 | 0.393523 | 0.902175 | 0.994911 | 1.011357 | 2.400435 | 2.900505 | 4.320818 | 18.667645 | 14.695386 | 18.579224 | 16.806781 | 11.950830 | 9.838041 | 8.211008 | 4.429191 | 3.526101 | 2.654545 | 0.000000 | . fiveYOperatingCFGrowthPerShare 0.941572 | 0.854354 | 0.405577 | 0.266882 | 0.099315 | 0.180387 | -0.057082 | -0.008575 | 0.501461 | 0.814686 | 0.703981 | 2.606288 | 2.934243 | 2.543759 | 9.838041 | 8.211008 | 4.429191 | 3.526101 | 2.654545 | 0.000000 | . threeYOperatingCFGrowthPerShare 0.460165 | 0.583390 | 0.339379 | 0.334377 | 0.224699 | -0.047238 | -0.061321 | 0.124794 | -0.006847 | 0.104503 | 0.211921 | 0.806528 | 0.933206 | 1.385407 | 1.394564 | 1.520425 | 4.429191 | 3.526101 | 2.654545 | 0.000000 | . tenYNetIncomeGrowthPerShare 1.380254 | 1.351987 | 2.999216 | 0.951226 | 1.094774 | 1.628393 | 3.059809 | 3.308166 | 11.647166 | -78.159546 | -67.932993 | -66.448595 | -81.531419 | -63.547228 | -48.508017 | -35.408808 | -20.402245 | -17.882969 | -12.576271 | 0.000000 | . fiveYNetIncomeGrowthPerShare 0.761585 | 0.954239 | 3.427912 | -0.166408 | 0.289777 | 0.351200 | 0.203531 | -0.096817 | 1.340744 | 0.624137 | 0.945228 | 2.373249 | 3.769980 | 4.403055 | -48.508017 | -35.408808 | -20.402245 | -17.882969 | -12.576271 | 0.000000 | . threeYNetIncomeGrowthPerShare 0.305413 | 0.546789 | 2.561068 | 0.549381 | 0.368242 | -0.382271 | 0.020864 | 0.086678 | 1.236977 | -0.041870 | 0.070119 | 0.377633 | 1.340430 | 2.223711 | 1.813961 | 1.972357 | -20.402245 | -17.882969 | -12.576271 | 0.000000 | . tenYShareholdersEquityGrowthPerShare 0.257249 | 0.189392 | 0.180323 | 5.937077 | 8.468637 | 12.179652 | 18.068661 | 20.721658 | 40.420920 | 57.528260 | 55.279903 | 60.501388 | 53.142044 | 7.391886 | 5.231725 | 3.582854 | 2.218495 | 1.878738 | 0.512195 | 0.000000 | . fiveYShareholdersEquityGrowthPerShare 0.171479 | 0.191892 | 0.021975 | -0.070587 | 0.008161 | 0.073215 | -0.002097 | 0.154943 | 6.463937 | 8.391984 | 11.280536 | 18.108739 | 17.807559 | 4.549473 | 5.231725 | 3.582854 | 2.218495 | 1.878738 | 0.512195 | 0.000000 | . threeYShareholdersEquityGrowthPerShare 0.215454 | 0.239693 | 0.058024 | -0.051444 | -0.056373 | -0.035700 | 0.048594 | 0.111071 | 0.018457 | 0.081013 | 5.706466 | 8.869080 | 10.814046 | 1.607394 | 1.164742 | 2.030597 | 2.218495 | 1.878738 | 0.512195 | 0.000000 | . tenYDividendperShareGrowthPerShare 4.153791 | 1.997113 | 7.522326 | 9.581165 | 9.941310 | 20.838199 | 13.758685 | 31.008873 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . fiveYDividendperShareGrowthPerShare 0.062880 | 2.491073 | 0.590345 | 3.720929 | 3.330018 | 3.848892 | -0.141492 | 4.358792 | 1.241331 | 1.526851 | 3.503750 | 16.191092 | 4.973151 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . threeYDividendperShareGrowthPerShare -0.102136 | 0.573139 | 0.315545 | 1.942957 | 0.079114 | 2.987985 | 0.951183 | 3.011040 | -0.464819 | 0.335502 | 0.843389 | 4.742927 | 2.371044 | 3.104858 | 2.156955 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . receivablesGrowth -0.111151 | 0.538226 | -0.012898 | 0.018446 | 0.048652 | 0.126073 | 0.130597 | -0.072664 | -0.064725 | 0.119565 | 0.033708 | 0.348485 | 0.636364 | 0.390805 | 0.101266 | 0.490566 | 0.039216 | 0.243902 | 0.413793 | 0.000000 | . inventoryGrowth 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . assetGrowth -0.029176 | 0.022226 | 0.092574 | 0.029840 | -0.067580 | 0.330954 | 0.396650 | -0.046517 | 0.163014 | -0.016970 | -0.259723 | 1.371664 | 3.714651 | 0.085160 | 0.389219 | -0.413708 | 0.452459 | 0.623125 | 4.425197 | 0.000000 | . bookValueperShareGrowth 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . debtGrowth -0.126994 | 0.970803 | 0.000852 | 0.000852 | 0.057593 | -0.262198 | 0.000000 | 0.355956 | -0.165545 | 0.090713 | -0.280162 | 18.609756 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | -1.000000 | -0.714286 | 0.166667 | 0.000000 | . rdexpenseGrowth 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . sgaexpensesGrowth 0.354231 | 0.211642 | 0.009121 | -0.065070 | 0.002850 | 0.074374 | 0.046230 | 0.017820 | 0.075670 | 0.148820 | 0.080392 | 0.154164 | 0.406006 | 0.141417 | 0.110329 | 0.129289 | 0.133907 | 0.038707 | 0.169070 | 0.125350 | . dcf_annually.plot . &lt;pandas.plotting._core.PlotAccessor object at 0x7f70a19075c0&gt; . dcf_quarterly . 2020-10 2020-06 2020-03 2019-12 2019-09 2019-06 2019-03 2018-12 2018-09 2018-06 2018-03 2017-12 2017-09 2017-06 2017-03 2016-12 2016-09 2016-06 2016-03 2015-12 2015-09 2015-06 2015-03 2014-12 2014-09 2014-06 2014-03 2013-12 2013-09 2013-06 2013-03 2012-12 2012-09 2012-06 2012-03 2011-12 2011-09 2011-06 2011-03 2010-12 2010-09 2010-06 2010-03 2009-12 2009-09 2009-06 . date 2020-10-12 | 2020-06-30 | 2020-03-31 | 2019-12-31 | 2019-09-30 | 2019-06-30 | 2019-03-31 | 2018-12-31 | 2018-09-30 | 2018-06-30 | 2018-03-31 | 2017-12-31 | 2017-09-30 | 2017-06-30 | 2017-03-31 | 2016-12-31 | 2016-09-30 | 2016-06-30 | 2016-03-31 | 2015-12-31 | 2015-09-30 | 2015-06-30 | 2015-03-31 | 2014-12-31 | 2014-09-30 | 2014-06-30 | 2014-03-31 | 2013-12-31 | 2013-09-30 | 2013-06-30 | 2013-03-31 | 2012-12-31 | 2012-09-30 | 2012-06-30 | 2012-03-31 | 2011-12-31 | 2011-09-30 | 2011-06-30 | 2011-03-31 | 2010-12-31 | 2010-09-30 | 2010-06-30 | 2010-03-31 | 2009-12-31 | 2009-09-30 | 2009-06-30 | . Stock Price 169.41 | 163.1 | 177.42 | 216.954 | 200.03 | 191.907 | 173.351 | 174.023 | 173.714 | 152.855 | 148.905 | 144.196 | 124.454 | 110.324 | 105.098 | 108.361 | 87.0285 | 88.562 | 79.1166 | 76.8474 | 77.9308 | 79.5932 | 74.1997 | 69.2614 | 64.4529 | 59.5564 | 54.91 | 57.6192 | 55.9698 | 55.0254 | 44.8757 | 42.5425 | 39.242 | 36.7455 | 37.0278 | 32.7952 | 38.0368 | 39.0694 | 39.752 | 40.789 | 38.6082 | 36.9966 | 43.5262 | 37.7742 | 39.7121 | 36.1693 | . DCF 173.741 | 167.03 | 179.802 | 221.298 | 203.419 | 194.534 | 176.146 | 178.038 | 177.857 | 156.093 | 151.217 | 149.816 | 129.271 | 114.349 | 108.905 | 113.897 | 91.2399 | 92.0058 | 82.5171 | 81.8815 | 82.1994 | 83.0202 | 79.2486 | 73.3465 | 67.7087 | 62.6621 | 58.0657 | 65.0429 | 62.183 | 60.9505 | 50.4289 | 47.3868 | 45.3337 | 40.6531 | 53.0745 | 48.4578 | 50.4719 | 49.4514 | 49.6941 | 53.6881 | 47.201 | 42.5135 | 50.2327 | 56.671 | 61.1575 | 63.5872 | . Enterprise Value . entreprise_value . 2019 2018 2017 2016 2015 2014 2013 2012 2011 2010 2009 2008 2007 2006 2005 2004 2003 2002 . symbol CME | CME | CME | CME | CME | CME | CME | CME | CME | CME | CME | CME | CME | CME | CME | CME | CME | CME | . stockPrice 216.954 | 174.023 | 144.196 | 108.361 | 76.8474 | 69.2614 | 57.6192 | 42.5425 | 32.7952 | 40.789 | 37.7742 | 22.5047 | 75.3375 | 71.1401 | 50.2998 | 25.8987 | 10.7237 | 5.3653 | . numberOfShares 358239000 | 343737000 | 340226000 | 338966000 | 337894000 | 336063000 | 334400000 | 332300000 | 333800000 | 332500000 | 332700000 | 294800000 | 220500000 | 175600000 | 174200000 | 172100000 | 169700000 | 150300000 | . marketCapitalization 7.77214e+10 | 5.98183e+10 | 4.90591e+10 | 3.67306e+10 | 2.59663e+10 | 2.32762e+10 | 19267860480 | 1.41369e+10 | 10947037760 | 13562342500 | 12567476340 | 6634385560 | 1.66119e+10 | 12492201560 | 8762225160 | 4457166270 | 1.81981e+09 | 8.06405e+08 | . minusCashAndCashEquivalents 1551400000 | 1374500000 | 1903600000 | 1868600000 | 1692600000 | 1366100000 | 2470000000 | 1605000000 | 1042000000 | 855000000 | 261000000 | 298000000 | 845000000 | 970000000 | 611000000 | 358000000 | 185000000 | 339000000 | . addTotalDebt 3834700000 | 3826800000 | 2233100000 | 2231200000 | 2229300000 | 2107900000 | 2107000000 | 2107000000 | 2107000000 | 2105000000 | 2015000000 | 2966000000 | 0 | 0 | 0 | 0 | 0 | 2e+06 | . enterpriseValue 8.00047e+10 | 6.22706e+10 | 4.93886e+10 | 3.70932e+10 | 2.6503e+10 | 2.4018e+10 | 18904860480 | 1.46389e+10 | 12012037760 | 14812342500 | 14321476340 | 9302385560 | 1.57669e+10 | 11522201560 | 8151225160 | 4099166270 | 1.63481e+09 | 4.69405e+08 | . Modelling and Forecasting . Choosing the Right Model . &quot;All models are wrong, but some are usefull&quot; . The following script is designed to help you choose the appropriate model for the firm in question. . Level of Earnings . # Are your earnings positive ? (Yes or No) pos_earnings = True # If the earnings are positive and normal, please enter the following: # What is the expected inflation rate in the economy? (In percent such that 2% = .02 DECIMAL FORMAT) inflation = .03 # What is the expected real growth rate in the economy? (In percent such that 2% = .02 DECIMAL FORMAT) output_growth = .02 # What is the expected growth rate in earnings (revenues) for this firm in the near future? (In percent such that 2% = .02 DECIMAL FORMAT) earnings_growth = .15 # If the earnings are negative, please enter the following: # Are the earnings negative because the firm is in a cyclical business ? neg_cyc = False # Are the earnings negative because of a one-time or temporary occurrence? neg_temp = False # Are the earnings negative because the firm has too much debt? # If yes, is there a strong likelihood of bankruptcy? neg_bankrupt = False . Differential Advantages . High growth comes from a firm earning excess returns on its projects, which in turn comes from some differential advantage possessed by the firm over its competitors. This differential advantage can be legal (as is the case with legal monopolies like telecom), or technological, or a strong brand name (as is the case with many consumer product firms) or economies of scale. The question that is being asked relates not just to the existing differential advantage but also to the future. . # Does this firm have a significant and sustainable advantage over competitors? (SUBJECTIVE: Argument and THESIS SHOULD COVER and deffend THIS!!!) wide_moats = True . Financial Leverage . # What is the current debt ratio (in market value terms) ? (in percent like before!) debt_ratio = .04 # Is this debt ratio expected to change significantly ? (is borrowing volatile or unpredictable) debt_ratio_change_likely = True . Dividend Policy . # What did the firm pay out as dividends in the current year? current_year_dividends = 100 # Can you estimate capital expenditures and working capital requirements? capex_estimateable_current_yr = True . Enter the following inputs (from the current year) for computing FCFE . # Net Income (NI)($s) net_income = income.revenue[0] # Depreciation and Amortization dep_and_am = cash.depreciationAndAmortization[0] # Capital Spending (Including acquisitions) capital_spending = cash.capitalExpenditure[0] # ∆ (Change) in Non-cash Working Capital (∆WC) change_non_cash_WC = cash.changeInWorkingCapital[0] . if capex_estimateable_current_yr: FCFE = net_income - (capital_spending - dep_and_am)*(1-debt_ratio) - change_non_cash_WC*(1-debt_ratio) print(&quot;Free Cash Flow to Equity Per Share= &quot;, FCFE) . Free Cash Flow to Equity Per Share= 5579936000.0 . market_cap = profile.loc[&#39;mktCap&#39;] print(&quot;Market Cap:&quot;, market_cap) . Market Cap: 0 60755001000 Name: mktCap, dtype: object . print((FCFE - market_cap)/market_cap) . 0 -0.908157 Name: mktCap, dtype: object . if neg_bankrupt: model_type = &quot;Option Pricing Model&quot; else: model_type = &quot;Discounted Cash Flow Model&quot; if pos_earnings: if neg_cyc: current_or_normalized_earnings = &quot;Normalized Earnings&quot; else: current_or_normalized_earnings = &quot;Current Earnings&quot; else: current_or_normalized_earnings = &quot;Current Earnings&quot; . if debt_ratio_change_likely: if capex_estimateable_current_yr: DCF_type = &quot;FCFF, or Free Cash Flow to Firm&quot; else: DCF_type = &quot;Dividends (Value Equity) DDM&quot; else: if pos_earnings == False: DCF_type = &quot;FCFF, or Free Cash Flow to Firm&quot; else: if current_year_dividends &gt; (1.25*FCFE): DCF_type = &quot;FCFE, or Free Cash Flow to Equity&quot; elif current_year_dividends &lt; (0.9*FCFE): DCF_type = &quot;FCFF, or Free Cash Flow to Firm&quot; else: DCF_type = &quot;Dividends (Value Equity) DDM&quot; . Constant Growth Rate DCF&#39;s under multiple growth rate scenarios . !pip install RFIC -U . Collecting RFIC Downloading https://files.pythonhosted.org/packages/d0/d0/62e896a88e1af10760da34858c1670c26958271b293b955576fee8c2d9ed/RFIC-0.0.8-py3-none-any.whl Installing collected packages: RFIC Found existing installation: RFIC 0.0.7 Uninstalling RFIC-0.0.7: Successfully uninstalled RFIC-0.0.7 Successfully installed RFIC-0.0.8 . from valuation import * !pip install pyfinmod . NameError Traceback (most recent call last) &lt;ipython-input-245-8e079f10374f&gt; in &lt;module&gt;() -&gt; 1 from valuation import * 2 get_ipython().system(&#39;pip install pyfinmod&#39;) /usr/local/lib/python3.6/dist-packages/valuation/__init__.py in &lt;module&gt;() 124 125 --&gt; 126 class rfic_models: 127 def __init__(self, ticker, tickerList): 128 self.ticker = ticker /usr/local/lib/python3.6/dist-packages/valuation/__init__.py in rfic_models() 176 177 --&gt; 178 def fcf_dcf_using_wacc(RFR, mkt_return, SR_g, LR_g, shock, subjectCompany=self.ticker): 179 # print(fcf_dcf_using_wacc(RFR,mkt_return,SR_g,LR_g)) 180 parser = Financials(subjectCompany) NameError: name &#39;self&#39; is not defined . # # hide # import numpy as np # import pandas as pd # from pyfinmod.ev import enterprise_value # # from pyfinmod.financials import Financials # from pyfinmod.wacc import tax_rate # from pyfinmod.wacc import total_debt # from pyfinmod.wacc import wacc # from pyfinmod.ev import dcf, fcf # from pyfinmod.basic import npv # from math import sqrt # # Calculate WACC # # hide # def dcf(fcfs, wacc, short_term_growth, long_term_growth): # latest_fcf_date = fcfs.index.max() # dates = pd.date_range(latest_fcf_date, periods=6, freq=&quot;365D&quot;)[1:] # future_cash_flows = [fcfs[latest_fcf_date]] # for i in range(5): # 5? # next_year_fcf = future_cash_flows[-1] * (1 + short_term_growth) # future_cash_flows.append(next_year_fcf) # future_cash_flows = future_cash_flows[1:] # df = pd.DataFrame(data={&quot;fcf&quot;: future_cash_flows, &quot;date&quot;: dates}) # # df.set_index(&#39;date&#39;, inplace=True) # df[&quot;terminal value&quot;] = 0 # last_index = df.index[-1] # last_short_term_fcf = df.at[last_index, &quot;fcf&quot;] # df.at[last_index, &quot;terminal value&quot;] = ( # last_short_term_fcf * (1 + long_term_growth) / (wacc - long_term_growth) # ) # df[&quot;cash flow&quot;] = df[[&quot;fcf&quot;, &quot;terminal value&quot;]].apply(sum, axis=1) # return npv(df, wacc) * sqrt((1 + wacc)) # def dcf_n1Shock(fcfs, wacc, SHOCK, short_term_growth, long_term_growth): # latest_fcf_date = fcfs.index.max() # dates = pd.date_range(latest_fcf_date, periods=6, freq=&quot;365D&quot;)[1:] # future_cash_flows = [fcfs[latest_fcf_date]] # for i in range(5): # 5? # # print(i) # # print(SHOCK) # if i == 0: # next_year_fcf = future_cash_flows[-1] * (1 + short_term_growth) # future_cash_flows.append(next_year_fcf * SHOCK) # else: # next_year_fcf = future_cash_flows[-1] * (1 + short_term_growth) # future_cash_flows.append(next_year_fcf) # future_cash_flows = future_cash_flows[1:] # df = pd.DataFrame(data={&quot;fcf&quot;: future_cash_flows, &quot;date&quot;: dates}) # # df.set_index(&#39;date&#39;, inplace=True) # df[&quot;terminal value&quot;] = 0 # last_index = df.index[-1] # last_short_term_fcf = df.at[last_index, &quot;fcf&quot;] # df.at[last_index, &quot;terminal value&quot;] = ( # last_short_term_fcf * (1 + long_term_growth) / (wacc - long_term_growth) # ) # df[&quot;cash flow&quot;] = df[[&quot;fcf&quot;, &quot;terminal value&quot;]].apply(sum, axis=1) # return npv(df, wacc) * sqrt((1 + wacc)) # def fcf_dcf_using_wacc(RFR, mkt_return, SR_g, LR_g, shock, subjectCompany=ticker): # # print(fcf_dcf_using_wacc(RFR,mkt_return,SR_g,LR_g)) # parser = Financials(subjectCompany) # lec = (parser.balance_sheet_statement.iloc[-5::5]) # for i in lec.itertuples(): # ec = (i._1) # break # parser = Financials(subjectCompany) # parser.income_statement.columns # currentPrice = parser.price # parser = Financials(subjectCompany) # ev = enterprise_value(parser.balance_sheet_statement)[0] # ecToev = ec / ev # equitys_share = (1 - ecToev) # parser = Financials(subjectCompany) # fcf_value = fcf(parser.cash_flow_statement) # total_debt(parser.balance_sheet_statement) # tax_rate(parser.income_statement) # parser.mktCap # # cost_of_debt(parser.balance_sheet_statement, parser.income_statement) # # cost_of_equity(float(parser.beta), risk_free_interest_rate = RFR, market_return = mkt_return) # parser = Financials(subjectCompany) # aapl_wacc = wacc(parser.mktCap, # parser.balance_sheet_statement, # parser.income_statement, # float(parser.beta), # risk_free_interest_rate=RFR, # market_return=mkt_return) # parser = Financials(subjectCompany) # if shock: # output = dcf_n1Shock(fcf(parser.cash_flow_statement), aapl_wacc, shock, short_term_growth=SR_g, # long_term_growth=LR_g) # else: # output = dcf(fcf(parser.cash_flow_statement), aapl_wacc, short_term_growth=SR_g, long_term_growth=LR_g) # value_per_share = output / (parser.income_statement.loc[&#39;Weighted Average Shs Out&#39;][0]) # pps = equitys_share * value_per_share # IR = ((pps - currentPrice) / currentPrice) * 100 # out = (value_per_share, pps, SR_g, LR_g, IR) # return (out) # # return float(value_per_share) # def dcf_g_range_simple(RFR, mkt_return, SR_g_scenarios, LR_g): # colz = (&#39;Firm Value/Share ($)&#39;, &#39;Equity Value/Share ($)&#39;, &#39;SR CAGR&#39;, &#39;LR CAGR&#39;, &#39;Implied ROI (%)&#39;) # records_dcf_1 = [colz] # for i in range(len(SR_g_scenarios)): # time.sleep(2) # SR_g = SR_g_scenarios[i] # records_dcf_1.append(fcf_dcf_using_wacc(RFR, mkt_return, SR_g, LR_g, False)) # # print(records_dcf_1) # print(&quot;Done computing &quot;, (i + 1), &#39; DCF out of &#39;, len(SR_g_scenarios)) # dcf_growth_rates_outputs = pd.DataFrame.from_records(records_dcf_1, columns=list(records_dcf_1[0])) # ind = (dcf_growth_rates_outputs.columns[4]) # out = dcf_growth_rates_outputs # out = out.iloc[1:] # out[&#39;Annual Growth Rate (%)&#39;] = [i*100 for i in (SR_g_scenarios)] # return out # def dcf_g_range_shock(RFR,mkt_return,SR_g_scenarios,LR_g,revenue_growth_decline_rate_shock): # colz = (&#39;Firm Value/Share ($)&#39;, &#39;Equity Value/Share ($)&#39;, &#39;SR CAGR&#39;, &#39;LR CAGR&#39;, &#39;Implied ROI (%)&#39;) # records_dcf_1 = [colz] # for i in range(len(SR_g_scenarios)): # time.sleep(2) # SR_g = SR_g_scenarios[i] # records_dcf_1.append(fcf_dcf_using_wacc(RFR, mkt_return, SR_g, LR_g, revenue_growth_decline_rate_shock)) # # print(records_dcf_1) # print(&quot;Done computing &quot;, (i + 1), &#39; DCF out of &#39;, len(SR_g_scenarios)) # dcf_growth_rates_outputs_shock = pd.DataFrame.from_records(records_dcf_1, columns=list(records_dcf_1[0])) # out = dcf_growth_rates_outputs_shock # out = out.iloc[1:] # out[&#39;Annual Growth Rate (%)&#39;] = [i*100 for i in (SR_g_scenarios)] # return out # def peer_dcf_comparison(RFR,mkt_return, LR_g, SR_g, tickerList,shock): # colz = (&#39;Firm Value/Share ($)&#39;, &#39;Equity Value/Share ($)&#39;, &#39;SR CAGR&#39;, &#39;LR CAGR&#39;, &#39;Implied ROI (%)&#39;) # tList = [] # records_dcf_2 = [] # for i in tickerList: # print(i) # time.sleep(2) # try: # # time.sleep(1) # records_dcf_2.append(fcf_dcf_using_wacc(RFR, mkt_return, SR_g, LR_g, shock, i)) # tList.append(i) # # print(records_dcf_1) # except: # pass # peer_dcf = pd.DataFrame.from_records(records_dcf_2, columns=colz) # peer_dcf[&#39;ticker&#39;] = tList # peer_dcf.set_index(&#39;ticker&#39;, inplace=True) # return peer_dcf . # collapse-hide SR_g_scenarios = np.linspace(.01, .3, 5, endpoint=False) print(SR_g_scenarios) RFR = .015 mkt_return = .05 LR_g = .01 revenue_growth_decline_rate_shock = .99 #.02 implies next years revenues will be 2% of this years, so if this years income 100, the model would start at a base of 2 . . [0.01 0.068 0.126 0.184 0.242] . model = rfic_models(ticker, tickerList) . model.dcf_g_range_simple(RFR, mkt_return, SR_g_scenarios,LR_g) . Done computing 1 DCF out of 5 Done computing 2 DCF out of 5 Done computing 3 DCF out of 5 Done computing 4 DCF out of 5 Done computing 5 DCF out of 5 . Firm Value/Share ($) Equity Value/Share ($) SR CAGR LR CAGR Implied ROI (%) Annual Growth Rate (%) . 1 514.897 | 148.24 | 0.01 | 0.01 | -12.4966 | 1.0 | . 2 676.065 | 194.64 | 0.068 | 0.01 | 14.8928 | 6.8 | . 3 875.799 | 252.144 | 0.126 | 0.01 | 48.8364 | 12.6 | . 4 1120.68 | 322.646 | 0.184 | 0.01 | 90.4529 | 18.4 | . 5 1418.01 | 408.247 | 0.242 | 0.01 | 140.982 | 24.2 | . DCF Models With a Shock to Growth in Year 1 . model.dcf_g_range_shock(RFR,mkt_return,SR_g_scenarios,LR_g,revenue_growth_decline_rate_shock) . Done computing 1 DCF out of 5 Done computing 2 DCF out of 5 Done computing 3 DCF out of 5 Done computing 4 DCF out of 5 Done computing 5 DCF out of 5 . Firm Value/Share ($) Equity Value/Share ($) SR CAGR LR CAGR Implied ROI (%) Annual Growth Rate (%) . 1 509.748 | 146.757 | 0.01 | 0.01 | -13.3716 | 1.0 | . 2 669.304 | 192.693 | 0.068 | 0.01 | 13.7438 | 6.8 | . 3 867.041 | 249.622 | 0.126 | 0.01 | 47.348 | 12.6 | . 4 1109.48 | 319.42 | 0.184 | 0.01 | 88.5483 | 18.4 | . 5 1403.83 | 404.165 | 0.242 | 0.01 | 138.572 | 24.2 | . SR_g = SR_g_scenarios[3] model.peer_dcf_comparison(RFR,mkt_return, LR_g, SR_g, shock=None) . CME ICE CBOE NDAQ FDS . Firm Value/Share ($) Equity Value/Share ($) SR CAGR LR CAGR Implied ROI (%) . ticker . CME 1120.683828 | 322.646184 | 0.184 | 0.01 | 90.452856 | . ICE 460.333094 | 150.988251 | 0.184 | 0.01 | 48.918287 | . NDAQ 476.945831 | 199.592264 | 0.184 | 0.01 | 59.597204 | . FDS 714.547840 | 356.393526 | 0.184 | 0.01 | 8.832420 | . print(&quot;Short run growth rate&quot;, SR_g) . Short run growth rate 0.184 . Pick a range of growth rates . Step 5: Risk &amp; Scenario Analysis . Step 6: Summarize your Findings and Conclude and assign the Subject Company a BUY, SELL, or HOLD rating. .",
            "url": "https://albisbub.github.io/RFIC-Pitches/testing123/",
            "relUrl": "/testing123/",
            "date": " • Oct 12, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Historical Macroeconomic Data",
            "content": ". This is a work in progress report that will give real time info on macroeconomic conditions, along with info on our holdings composition. . To Do: . Github LIVE data updating | Collect historical records of portfolio for returns analysis | . Imports and Helpers . FRED Data Cleaning and Grouping . # exploring the basics, gdp, unemployment, and inflation prices_n = [ &#39;cpi_inflation&#39;, &#39;gdp_deflator&#39;,&#39;cpi_urban&#39;,&#39;cpi_medical&#39;] prices_id = [&#39;CPIAUCSL&#39;,&quot;FPCPITOTLZGUSA&quot;,&quot;A191RI1Q225SBEA&quot;,&quot;CPIMEDSL&quot;] fed_n = [&quot;M1&quot;,&quot;M2&quot;,&quot;M2_less_M1&quot;,&quot;effective_ffr&quot;,&quot;ffr_upper&quot;,&quot;ffr_lower&quot;] fed_id = [&quot;M1&quot;,&quot;M2&quot;,&quot;NONM1&quot;,&quot;DFF&quot;,&quot;DFEDTARU&quot;,&quot;DFEDTARL&quot;] output_n = [&#39;potential_gdp&#39;,&#39;nominal_gdp&#39;,&#39;real_GDP&#39;] output_id = [&#39;GDPPOT&#39;,&#39;GDPC1&#39;,&#39;GDP&#39;] per_cap_n = [&#39;gdp_per_capita&#39;,] per_cap_id = [&#39;A939RX0Q048SBEA&#39;] # employment_n = [&#39;unemployment_rate&#39;,&quot;fed_natural_rate&quot;,&#39;insured_unemployment_rate&#39;,&#39;20_and_over&#39;, &#39;black_or_african_american&#39;,&#39;LNU04032183&#39;,&#39;women&#39;,&#39;men&#39;] # employment_id = [&#39;UNRATE&#39;,&quot;NROU&quot;,&#39;IURSA&#39;,&#39;LNS14000024&#39;,&#39;LNS14000006&#39;,&#39;LNU04032183&#39;,&#39;LNS14000002&#39;,&#39;LNS14000001&#39;] # employment_n = [&#39;unemployment_rate&#39;,&quot;fed_natural_rate&quot;,&#39;insured_unemployment_rate&#39;,&#39;20_and_over&#39;, &#39;black_or_african_american&#39;,&#39;LNU04032183&#39;,&#39;women&#39;,&#39;men&#39;] # employment_id = [&#39;UNRATE&#39;,&quot;NROU&quot;,&#39;IURSA&#39;,&#39;LNS14000024&#39;,&#39;LNS14000006&#39;,&#39;LNU04032183&#39;,&#39;LNS14000002&#39;,&#39;LNS14000001&#39;] # employment_n = [&#39;unemployment_rate&#39;,&quot;fed_natural_rate&quot;,&#39;insured_unemployment_rate&#39;,] # employment_id = [&#39;UNRATE&#39;,&quot;NROU&quot;,&#39;IURSA&#39;,] employment_n = [&#39;unemployment_rate&#39;,&quot;fed_natural_rate&quot;,] employment_id = [&#39;UNRATE&#39;,&quot;NROU&quot;,] # # 1 Mo 2 Mo 3 Mo 6 Mo 1 Yr 2 Yr 3 Yr 5 Yr 7 Yr 10 Yr 20 Yr 30 Yr yield_curve_n = [&#39;DGS1MO&#39;,&quot;DGS2MO&quot;,&quot;DGS6MO&quot;,&quot;DGS1&quot;,&quot;DGS2&quot;,&quot;DGS3&quot;,&quot;DGS5&quot;,&quot;DGS7&quot;,&quot;DGS10&quot;,&quot;DGS20&quot;,&quot;DGS30&quot;] yield_curve_id = [&#39;DGS1MO&#39;,&quot;DGS2MO&quot;,&quot;DGS6MO&quot;,&quot;DGS1&quot;,&quot;DGS2&quot;,&quot;DGS3&quot;,&quot;DGS5&quot;,&quot;DGS7&quot;,&quot;DGS10&quot;,&quot;DGS20&quot;,&quot;DGS30&quot;] # yield_curve_n = [&quot;DGS6MO&quot;,&quot;DGS1&quot;,&quot;DGS2&quot;,&quot;DGS3&quot;,&quot;DGS5&quot;,&quot;DGS7&quot;,&quot;DGS10&quot;,&quot;DGS20&quot;,&quot;DGS30&quot;] # yield_curve_id = [&#39;DGS1MO&#39;,&quot;DGS2MO&quot;,&quot;DGS6MO&quot;,&quot;DGS1&quot;,&quot;DGS2&quot;,&quot;DGS3&quot;,&quot;DGS5&quot;,&quot;DGS7&quot;,&quot;DGS10&quot;,&quot;DGS20&quot;,&quot;DGS30&quot;] # print(len(series_names),len(series_ids)) prices =compile_FRED(prices_n, prices_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) prices[&#39;cpi_inflation&#39;] = prices[&#39;cpi_inflation&#39;].pct_change() * 100 prices[&#39;cpi_medical&#39;] = prices[&#39;cpi_medical&#39;].pct_change() * 100 for i in prices.columns: print(i) if i != &#39;date&#39;: prices[i] = prices[i].round(2) # prices = prices.pct_change() # prices[&#39;cpi_urban&#39;] = prices[&#39;cpi_urban&#39;].pct_change() # prices[&#39;cpi_medical&#39;] = prices[&#39;cpi_medical&#39;].pct_change() fed =compile_FRED(fed_n, fed_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) output =compile_FRED(output_n, output_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) pcap = compile_FRED(per_cap_n,per_cap_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) for i in pcap.columns: print(i) if i != &#39;date&#39;: pcap[i] = ((pcap[i].pct_change())*100).round(2) for i in output.columns: print(i) if i != &#39;date&#39;: output[i] = ((output[i].pct_change())*100).round(2) employment =compile_FRED(employment_n, employment_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) # yield_curve= compile_FRED(yield_curve_n, yield_curve_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) macro_dfList = [prices,fed,output,pcap,employment] # US_data.columns # # add gdp per capital growth RATE, inflation RATE to the data set, as well as a flag for growth vs. recession per quarter # US_data[&#39;gdp_growth_rate&#39;] = US_data[&#39;gdp_per_capita&#39;].pct_change() # US_data[&#39;cpi_inflation_rate&#39;] = US_data[&#39;cpi&#39;].pct_change() # US_data[&#39;growth&#39;] = US_data[&#39;gdp_growth_rate&#39;] &gt; 0.0 # # drop null rows from the first period, which dont have percent changes # US_data = US_data.dropna() # US_data.head() . date cpi_inflation gdp_deflator cpi_urban cpi_medical date gdp_per_capita date potential_gdp nominal_gdp real_GDP . def formatMacros(inputs): ColumnList = list(inputs.columns) yearList = list(inputs.date) # print(ColumnList) # print(yearList) # transposed = inputs.transpose() cleaned = inputs.rename_axis(&#39;date&#39;) # print(cleaned.columns) # cleaned.drop(cleaned.columns[0],inplace=True) byYear = cleaned.set_index(&#39;date&#39;).stack() df = pd.DataFrame(byYear, columns=[&#39;Value&#39;]) # print(df) df.reset_index(inplace=True) # print(df.columns) df.rename(columns={&#39;level_1&#39;:&#39;Metric&#39;}, inplace=True) # df.dropna(inplace=True) # df[&#39;Value&#39;] = pd.to_numeric(df[&#39;Value&#39;], errors=&#39;coerce&#39;) # print(df) # print(df.columns) df = df[~df[&#39;date&#39;].isin([&#39;level_0&#39;,&#39;index&#39;])] # df = df.drop([&#39;level_0&#39;,&#39;index&#39;],axis=0) # print(df.Year) df.Year = df.date.astype(str) return df _prices = formatMacros(prices) . Prices . Values are in percents, so a reading of 6 on the following chart is interpreted as 6%, not 600%. . CPI Inflation Baskets . Aggregate Demand . Y = (Consumption) + (Investment) + (Govt. Spending) - (Net Exports) . Percent Change . Are we on a steady state growth path? Last 30 Years . Per Capita Output . make_multi_LineGraph(_pcap,True) . Consumption . Investment . Governmtment Spending . Exports/Imports . Net Exports = Exports-Imports | . Aggregate Supply . Productivity . Input Markets . Real Estate Markets . Labor Markets . Unemployment Rated . def gpct(input, logged,recent): _input = formatMacros(input) if recent: return make_multi_LineGraph(_input[_input.date &gt; yearsago], logged) else: return make_multi_LineGraph(_input, logged) gpct(employment, False, False) . gpct(employment, True,False) . gpct(employment, False, True) . gpct(employment, True, True) . Credit Markets . Capital Stock . Fed Watching . Balance Sheet . Fed Funds Rate Targets . Repurchase Activity . Theoretical Relationships . Classical Phillips Curve . # explore some visualizations here # let&#39;s take a look at a classic macro 101 relationship - the Phillips curve # https://en.wikipedia.org/wiki/Phillips_curve sns.pairplot(data=US_data, x_vars=[&#39;unemployment_rate&#39;], y_vars=[&#39;cpi_inflation_rate&#39;], size=7); . # doesnt seem to be much evidence of the Phillips curve in this correlation plot . # # try out some basic models on this data, attempting to predict if the US economy will grow or recede the next quarter (classification) # # going to adjust the data a bit first, since we should be trying to predict with past data # # each will have 4 lagged variables for unemployment rate, inflation rate, and gdp growth rate # US_data_new = US_data.copy() # # lagged unemployment # US_data_new[&#39;unemployment_1&#39;] = US_data_new[&#39;unemployment_rate&#39;].shift(periods=1) # US_data_new[&#39;unemployment_2&#39;] = US_data_new[&#39;unemployment_rate&#39;].shift(periods=2) # US_data_new[&#39;unemployment_3&#39;] = US_data_new[&#39;unemployment_rate&#39;].shift(periods=3) # US_data_new[&#39;unemployment_4&#39;] = US_data_new[&#39;unemployment_rate&#39;].shift(periods=4) # # gdp lags # US_data_new[&#39;gdp_1&#39;] = US_data_new[&#39;gdp_growth_rate&#39;].shift(periods=1) # US_data_new[&#39;gdp_2&#39;] = US_data_new[&#39;gdp_growth_rate&#39;].shift(periods=2) # US_data_new[&#39;gdp_3&#39;] = US_data_new[&#39;gdp_growth_rate&#39;].shift(periods=3) # US_data_new[&#39;gdp_4&#39;] = US_data_new[&#39;gdp_growth_rate&#39;].shift(periods=4) # # inflation lags # US_data_new[&#39;cpi_1&#39;] = US_data_new[&#39;cpi_inflation_rate&#39;].shift(periods=1) # US_data_new[&#39;cpi_2&#39;] = US_data_new[&#39;cpi_inflation_rate&#39;].shift(periods=2) # US_data_new[&#39;cpi_3&#39;] = US_data_new[&#39;cpi_inflation_rate&#39;].shift(periods=3) # US_data_new[&#39;cpi_4&#39;] = US_data_new[&#39;cpi_inflation_rate&#39;].shift(periods=4) # # convert target to 0/1 instead of boolean # US_data_new[&#39;growth&#39;].replace(False, 0, inplace=True) # # drop null rows for which we don&#39;t have new lagged variables # US_data_new = US_data_new.dropna() # # target and feature enumeration # target = [&#39;growth&#39;] # features = [&#39;unemployment_1&#39;, &#39;unemployment_2&#39;, &#39;unemployment_3&#39;, &#39;unemployment_4&#39;, &#39;gdp_1&#39;, &#39;gdp_2&#39;, &#39;gdp_3&#39;, &#39;gdp_4&#39;, &#39;cpi_1&#39;, &#39;cpi_2&#39;, &#39;cpi_3&#39;, &#39;cpi_4&#39;] # # train test split # from sklearn.model_selection import train_test_split # train, test = train_test_split(US_data_new, random_state=0) # US_data_new.head() . date gdp_per_capita unemployment_rate cpi gdp_growth_rate cpi_inflation_rate growth unemployment_1 unemployment_2 unemployment_3 unemployment_4 gdp_1 gdp_2 gdp_3 gdp_4 cpi_1 cpi_2 cpi_3 cpi_4 . 5 1951-04-01 | 15968.0 | 3.1 | 25.92 | 0.013262 | 0.021277 | 1.0 | 3.7 | 4.2 | 5.0 | 5.8 | 0.009416 | 0.014557 | 0.034209 | 0.026846 | 0.035918 | 0.017865 | 0.017759 | 0.005955 | . 6 1951-07-01 | 16223.0 | 3.1 | 25.91 | 0.015969 | -0.000386 | 1.0 | 3.1 | 3.7 | 4.2 | 5.0 | 0.013262 | 0.009416 | 0.014557 | 0.034209 | 0.021277 | 0.035918 | 0.017865 | 0.017759 | . 7 1951-10-01 | 16181.0 | 3.5 | 26.16 | -0.002589 | 0.009649 | 0.0 | 3.1 | 3.1 | 3.7 | 4.2 | 0.015969 | 0.013262 | 0.009416 | 0.014557 | -0.000386 | 0.021277 | 0.035918 | 0.017865 | . 8 1952-01-01 | 16288.0 | 3.2 | 26.45 | 0.006613 | 0.011086 | 1.0 | 3.5 | 3.1 | 3.1 | 3.7 | -0.002589 | 0.015969 | 0.013262 | 0.009416 | 0.009649 | -0.000386 | 0.021277 | 0.035918 | . 9 1952-04-01 | 16259.0 | 2.9 | 26.46 | -0.001780 | 0.000378 | 0.0 | 3.2 | 3.5 | 3.1 | 3.1 | 0.006613 | -0.002589 | 0.015969 | 0.013262 | 0.011086 | 0.009649 | -0.000386 | 0.021277 | . Modelling/Forecasting .",
            "url": "https://albisbub.github.io/RFIC-Pitches/2020/05/25/Macro-and-Holdings-Snapshot.html",
            "relUrl": "/2020/05/25/Macro-and-Holdings-Snapshot.html",
            "date": " • May 25, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "RFIC MEETING 7",
            "content": ". Subjet Company Financials . Income Statement . row name Year Revenue Revenue Growth Cost of Revenue Gross Profit R&amp;D Expenses SG&amp;A Expense Operating Expenses Operating Income Interest Expense Earnings before Tax Income Tax Expense Net Income - Non-Controlling int Net Income - Discontinued ops Net Income Preferred Dividends Net Income Com EPS EPS Diluted Weighted Average Shs Out Weighted Average Shs Out (Dil) Dividend per Share Gross Margin EBITDA Margin EBIT Margin Profit Margin Free Cash Flow margin EBITDA EBIT Consolidated Income Earnings Before Tax Margin Net Profit Margin . 0 2019-12-31 | 8.781000e+09 | 0.062561 | 0.000000e+00 | 8.781000e+09 | 0.0 | 2.370000e+09 | 7.718000e+09 | 1.063000e+09 | 78000000.0 | 1.016000e+09 | 247000000.0 | 0.0 | 0.0 | 7.690000e+08 | 0.0 | 7.690000e+08 | 6.240 | 6.19 | 123279000.0 | 124289000.0 | 1.391917 | 1.000000 | 0.169229 | 0.121057 | 0.087575 | 0.116843 | 1.486000e+09 | 1.063000e+09 | 7.690000e+08 | 0.115704 | 0.087575 | . 1 2018-12-31 | 8.264000e+09 | 0.041724 | 0.000000e+00 | 8.264000e+09 | 0.0 | 2.190000e+09 | 7.621000e+09 | 6.430000e+08 | 91000000.0 | 5.850000e+08 | 148000000.0 | 0.0 | 0.0 | 4.370000e+08 | 0.0 | 4.370000e+08 | 3.550 | 3.52 | 123230000.0 | 123975000.0 | 1.274450 | 1.000000 | 0.125968 | 0.077807 | 0.052880 | 0.028437 | 1.041000e+09 | 6.430000e+08 | 4.370000e+08 | 0.070789 | 0.052880 | . 2 2017-12-31 | 7.933000e+09 | 0.337548 | 1.950000e+08 | 7.738000e+09 | 0.0 | 1.924000e+09 | 6.673000e+09 | 1.260000e+09 | 103000000.0 | 1.207000e+09 | 173000000.0 | 0.0 | 0.0 | 1.034000e+09 | 0.0 | 1.034000e+09 | 8.390 | 8.35 | 123211000.0 | 123854000.0 | 1.194955 | 0.975419 | 0.205723 | 0.158830 | 0.130342 | 0.071095 | 1.632000e+09 | 1.260000e+09 | 1.034000e+09 | 0.152149 | 0.130342 | . 3 2016-12-31 | 5.931000e+09 | 0.059486 | 1.260000e+08 | 5.805000e+09 | 0.0 | 1.382000e+09 | 4.582000e+09 | 1.349000e+09 | 55000000.0 | 1.345000e+09 | 531000000.0 | 0.0 | 0.0 | 8.140000e+08 | 0.0 | 8.140000e+08 | 6.590 | 6.54 | 123557000.0 | 124389000.0 | 1.093344 | 0.978756 | 0.288653 | 0.227449 | 0.137245 | 0.119373 | 1.712000e+09 | 1.349000e+09 | 8.140000e+08 | 0.226775 | 0.137245 | . 4 2015-12-31 | 5.598000e+09 | 0.042846 | 1.130000e+08 | 5.485000e+09 | 0.0 | 1.254000e+09 | 4.300000e+09 | 1.298000e+09 | 42000000.0 | 1.312000e+09 | 464000000.0 | 0.0 | 0.0 | 8.480000e+08 | 0.0 | 8.480000e+08 | 6.610 | 6.56 | 128373000.0 | 129372000.0 | 0.788424 | 0.979814 | 0.289032 | 0.231869 | 0.151483 | 0.134512 | 1.618000e+09 | 1.298000e+09 | 8.480000e+08 | 0.234369 | 0.151483 | . 5 2014-12-31 | 5.368000e+09 | 0.041117 | 9.300000e+07 | 5.275000e+09 | 0.0 | 1.136000e+09 | 4.406000e+09 | 9.620000e+08 | 48000000.0 | 9.750000e+08 | 370000000.0 | 0.0 | 0.0 | 6.050000e+08 | 0.0 | 6.050000e+08 | 4.470 | 4.42 | 135445000.0 | 136801000.0 | 0.497072 | 0.982675 | 0.233979 | 0.179210 | 0.112705 | 0.062593 | 1.256000e+09 | 9.620000e+08 | 6.050000e+08 | 0.181632 | 0.112705 | . 6 2013-12-31 | 5.156000e+09 | 0.107151 | 8.400000e+07 | 5.072000e+09 | 0.0 | 1.086000e+09 | 4.318000e+09 | 8.380000e+08 | 56000000.0 | 8.160000e+08 | 308000000.0 | 0.0 | 0.0 | 5.080000e+08 | 0.0 | 5.080000e+08 | 7.260 | 7.16 | 69955000.0 | 70939000.0 | 0.394705 | 0.983708 | 0.214895 | 0.162529 | 0.098526 | 0.080489 | 1.108000e+09 | 8.380000e+08 | 5.080000e+08 | 0.000000 | 0.098526 | . 7 2012-12-31 | 4.657000e+09 | 0.078559 | 7.900000e+07 | 4.578000e+09 | 0.0 | 1.038000e+09 | 4.125000e+09 | 5.320000e+08 | 64000000.0 | 5.140000e+08 | 198000000.0 | 0.0 | 0.0 | 3.160000e+08 | 0.0 | 3.160000e+08 | 4.470 | 4.40 | 70708000.0 | 71784000.0 | 0.000000 | 0.983036 | 0.170925 | 0.114237 | 0.067855 | 0.050462 | 7.960000e+08 | 5.320000e+08 | 3.160000e+08 | 0.110371 | 0.067855 | . 8 2011-12-31 | 4.317800e+09 | 0.126686 | 6.720000e+07 | 4.250600e+09 | 0.0 | 9.905000e+08 | 3.868900e+09 | 4.489000e+08 | 87300000.0 | 3.937000e+08 | 149200000.0 | 0.0 | 0.0 | 2.445000e+08 | 0.0 | 2.445000e+08 | 6.810 | 6.66 | 35878000.0 | 36710000.0 | 0.000000 | 0.984437 | 0.161147 | 0.103965 | 0.056626 | 0.071472 | 6.958000e+08 | 4.489000e+08 | 2.445000e+08 | 0.091181 | 0.056626 | . 9 2010-12-31 | 3.832300e+09 | 0.127213 | 5.750000e+07 | 3.774800e+09 | 0.0 | 0.000000e+00 | 3.360700e+09 | 4.716000e+08 | 108300000.0 | 4.059000e+08 | 154800000.0 | 0.0 | 0.0 | 2.511000e+08 | 0.0 | 2.511000e+08 | 7.010 | 6.83 | 35822000.0 | 36786000.0 | 0.000000 | 0.984996 | 0.183206 | 0.123059 | 0.065522 | 0.096730 | 7.021000e+08 | 4.716000e+08 | 2.511000e+08 | 0.105916 | 0.065522 | . 10 2009-12-31 | 3.399800e+09 | -0.071800 | 1.534800e+09 | 1.865000e+09 | 0.0 | 1.119900e+09 | 1.597600e+09 | 2.674000e+08 | 104300000.0 | 2.029000e+08 | 81300000.0 | 0.0 | 0.0 | 1.216000e+08 | 0.0 | 1.216000e+08 | 0.848 | 0.84 | 141022012.0 | 143260000.0 | 0.000000 | 0.548600 | 0.155000 | 0.090400 | 0.036000 | -0.042900 | 5.264000e+08 | 3.072000e+08 | 1.216000e+08 | 0.059700 | 0.035800 | . Revenues . Revenue Growth &amp; Change in Growth . EPS . Cost Components . make_multi_LineGraph(operating_g, True) . Shares Outstanding . Margins . make_multi_LineGraph(margins_g, False) . Balance Sheet . row name Year Cash and cash equivalents Short-term investments Cash and short-term investments Receivables Inventories Total current assets Property, Plant &amp; Equipment Net Goodwill and Intangible Assets Long-term investments Tax assets Total non-current assets Total assets Payables Short-term debt Total current liabilities Long-term debt Total debt Deferred revenue Tax Liabilities Deposit Liabilities Total non-current liabilities Total liabilities Other comprehensive income Retained earnings (deficit) Total shareholders equity Investments Net Debt Other Assets Other Liabilities . 0 2019-12-31 | 221000000.0 | 1.300000e+09 | 1.521000e+09 | 0.0 | 72000000.0 | 2.037000e+09 | 6.902000e+09 | 2.065000e+09 | 3000000.0 | 0.0 | 1.095600e+10 | 1.299300e+10 | 146000000.0 | 269000000.0 | 3.201000e+09 | 1.264000e+09 | 1.533000e+09 | 750000000.0 | 40000000.0 | 0.0 | 3.451000e+09 | 8.662000e+09 | 0.0 | 5.133000e+09 | 4.331000e+09 | 1.303000e+09 | 1.312000e+09 | 0.0 | 2.010000e+09 | . 1 2018-12-31 | 105000000.0 | 1.131000e+09 | 1.236000e+09 | 0.0 | 60000000.0 | 1.787000e+09 | 6.781000e+09 | 2.070000e+09 | 2000000.0 | 0.0 | 9.125000e+09 | 1.091200e+10 | 132000000.0 | 486000000.0 | 2.942000e+09 | 1.617000e+09 | 2.103000e+09 | 705000000.0 | 40000000.0 | 0.0 | 3.716000e+09 | 7.161000e+09 | 0.0 | 4.534000e+09 | 3.751000e+09 | 1.133000e+09 | 1.998000e+09 | 0.0 | 5.030000e+08 | . 2 2017-12-31 | 194000000.0 | 1.427000e+09 | 1.621000e+09 | 0.0 | 57000000.0 | 2.146000e+09 | 6.284000e+09 | 2.076000e+09 | 3000000.0 | 0.0 | 8.594000e+09 | 1.074000e+10 | 120000000.0 | 307000000.0 | 2.700000e+09 | 2.262000e+09 | 2.569000e+09 | 699000000.0 | 43000000.0 | 0.0 | 3.167000e+09 | 7.019000e+09 | 0.0 | 4.454000e+09 | 3.721000e+09 | 1.430000e+09 | 2.375000e+09 | 0.0 | 1.152000e+09 | . 3 2016-12-31 | 328000000.0 | 1.252000e+09 | 1.580000e+09 | 0.0 | 47000000.0 | 2.050000e+09 | 5.666000e+09 | 2.077000e+09 | 3000000.0 | 0.0 | 7.912000e+09 | 9.962000e+09 | 92000000.0 | 319000000.0 | 2.535000e+09 | 2.645000e+09 | 2.964000e+09 | 640000000.0 | 33000000.0 | 0.0 | 3.525000e+09 | 7.031000e+09 | 0.0 | 3.568000e+09 | 2.931000e+09 | 1.255000e+09 | 2.636000e+09 | 0.0 | 9.710000e+08 | . 4 2015-12-31 | 73000000.0 | 1.255000e+09 | 1.328000e+09 | 0.0 | 51000000.0 | 1.663000e+09 | 4.802000e+09 | 0.000000e+00 | 2000000.0 | 0.0 | 4.870000e+09 | 6.533000e+09 | 63000000.0 | 115000000.0 | 1.806000e+09 | 5.710000e+08 | 6.860000e+08 | 431000000.0 | 22000000.0 | 0.0 | 1.615000e+09 | 4.122000e+09 | 0.0 | 2.890000e+09 | 2.411000e+09 | 1.257000e+09 | 6.130000e+08 | 0.0 | 7.010000e+08 | . 5 2014-12-31 | 107000000.0 | 1.110000e+09 | 1.217000e+09 | 0.0 | 58000000.0 | 1.756000e+09 | 4.299000e+09 | 0.000000e+00 | 4000000.0 | 117000000.0 | 4.425000e+09 | 6.181000e+09 | 62000000.0 | 117000000.0 | 1.671000e+09 | 6.860000e+08 | 8.030000e+08 | 374000000.0 | 0.0 | 0.0 | 1.697000e+09 | 4.054000e+09 | 292000000.0 | 2.144000e+09 | 2.127000e+09 | 1.114000e+09 | 6.960000e+08 | 0.0 | 6.860000e+08 | . 6 2013-12-31 | 80000000.0 | 1.250000e+09 | 1.330000e+09 | 0.0 | 60000000.0 | 1.762000e+09 | 3.893000e+09 | 0.000000e+00 | 4000000.0 | 113000000.0 | 4.076000e+09 | 5.838000e+09 | 64000000.0 | 12000000.0 | 1.580000e+09 | 7.540000e+08 | 7.660000e+08 | 335000000.0 | 0.0 | 0.0 | 1.475000e+09 | 3.809000e+09 | 536000000.0 | 1.607000e+09 | 2.029000e+09 | 1.254000e+09 | 6.860000e+08 | 0.0 | 7.540000e+08 | . 7 2012-12-31 | 122000000.0 | 1.130000e+09 | 1.252000e+09 | 0.0 | 58000000.0 | 1.737000e+09 | 3.609000e+09 | 0.000000e+00 | 39000000.0 | 148000000.0 | 3.768000e+09 | 5.505000e+09 | 65000000.0 | 18000000.0 | 1.501000e+09 | 8.710000e+08 | 8.890000e+08 | 443000000.0 | 0.0 | 0.0 | 1.712000e+09 | 4.084000e+09 | 660000000.0 | 1.127000e+09 | 1.421000e+09 | 1.169000e+09 | 7.670000e+08 | 0.0 | 8.710000e+08 | . 8 2011-12-31 | 102200000.0 | 1.038700e+09 | 1.140900e+09 | 0.0 | 44300000.0 | 1.595500e+09 | 3.401500e+09 | 0.000000e+00 | 70200000.0 | 134200000.0 | 3.599500e+09 | 5.195000e+09 | 103600000.0 | 31600000.0 | 1.509600e+09 | 1.099000e+09 | 1.130600e+09 | 410200000.0 | 71500000.0 | 0.0 | 1.413200e+09 | 4.021800e+09 | 714700000.0 | 8.106000e+08 | 1.173200e+09 | 1.108900e+09 | 1.028400e+09 | 0.0 | 1.099000e+09 | . 9 2010-12-31 | 89500000.0 | 1.118700e+09 | 1.208200e+09 | 0.0 | 45100000.0 | 1.662000e+09 | 3.117100e+09 | 0.000000e+00 | 0.0 | 120500000.0 | 3.354600e+09 | 5.016600e+09 | 60200000.0 | 221200000.0 | 1.424700e+09 | 1.313000e+09 | 1.534200e+09 | 0.0 | 0.0 | 0.0 | 1.173500e+09 | 3.911200e+09 | 769500000.0 | 5.661000e+08 | 1.105400e+09 | 1.118700e+09 | 1.444700e+09 | 0.0 | 1.313000e+09 | . 10 2009-12-31 | 164200000.0 | 1.027900e+09 | 1.192100e+09 | 111800000.0 | 45800000.0 | 1.634300e+09 | 3.167900e+09 | 0.000000e+00 | 0.0 | 120300000.0 | 3.361900e+09 | 4.996200e+09 | 63300000.0 | 156000000.0 | 1.269500e+09 | 1.699200e+09 | 1.855200e+09 | 435100000.0 | 151100000.0 | 0.0 | 2.854600e+09 | 4.124100e+09 | -240000000.0 | 3.150000e+08 | 8.721000e+08 | 1.027900e+09 | 6.631000e+08 | 284600000.0 | 1.050200e+09 | . Assets . make_multi_LineGraph(assets_g, True) . Investment and Cash Equivalents . make_multi_LineGraph(dep_g, True) . Liabilities . Liabilities Vs Equity . Cash Flows . row name Year Depreciation &amp; Amortization Stock-based compensation Operating Cash Flow Capital Expenditure Acquisitions and disposals Investment purchases and sales Investing Cash flow Issuance (repayment) of debt Issuance (buybacks) of shares Dividend payments Financing Cash Flow Effect of forex changes on cash Net cash flow / Change in cash Free Cash Flow Net Cash/Marketcap . 0 2019-12-31 | 423000000.0 | 29000000.0 | 1.722000e+09 | 6.960000e+08 | -0.000000e+00 | -185000000.0 | -7.910000e+08 | -1.100000e+09 | -75000000.0 | -173000000.0 | -8.130000e+08 | 0.0 | 221000000.0 | 1.026000e+09 | 0.0000 | . 1 2018-12-31 | 398000000.0 | 47000000.0 | 1.195000e+09 | 9.600000e+08 | -0.000000e+00 | 232000000.0 | -6.310000e+08 | -8.070000e+08 | -50000000.0 | -158000000.0 | -6.470000e+08 | 0.0 | 105000000.0 | 2.350000e+08 | 0.0000 | . 2 2017-12-31 | 372000000.0 | 55000000.0 | 1.590000e+09 | 1.026000e+09 | -0.000000e+00 | -256000000.0 | -1.132000e+09 | -3.970000e+08 | -75000000.0 | -148000000.0 | -5.920000e+08 | 0.0 | -134000000.0 | 5.640000e+08 | 0.0000 | . 3 2016-12-31 | 363000000.0 | 26000000.0 | 1.386000e+09 | 6.780000e+08 | -1.951000e+09 | -191000000.0 | -2.622000e+09 | -2.490000e+08 | -193000000.0 | -136000000.0 | 1.491000e+09 | 0.0 | 255000000.0 | 7.080000e+08 | 0.0000 | . 4 2015-12-31 | 320000000.0 | 25000000.0 | 1.584000e+09 | 8.310000e+08 | -0.000000e+00 | -657000000.0 | -9.300000e+08 | -1.160000e+08 | -505000000.0 | -102000000.0 | -6.880000e+08 | 0.0 | -34000000.0 | 7.530000e+08 | 0.0000 | . 5 2014-12-31 | 294000000.0 | 6000000.0 | 1.030000e+09 | 6.940000e+08 | -0.000000e+00 | -205000000.0 | -5.410000e+08 | -1.190000e+08 | -321000000.0 | -68000000.0 | -4.620000e+08 | 0.0 | 27000000.0 | 3.360000e+08 | 0.0000 | . 6 2013-12-31 | 270000000.0 | 32000000.0 | 9.810000e+08 | 5.660000e+08 | -0.000000e+00 | -288000000.0 | -6.980000e+08 | -1.610000e+08 | -135000000.0 | -28000000.0 | -3.250000e+08 | 0.0 | -42000000.0 | 4.150000e+08 | 0.0000 | . 7 2012-12-31 | 264000000.0 | 10000000.0 | 7.530000e+08 | 5.180000e+08 | -0.000000e+00 | -142000000.0 | -6.450000e+08 | -2.750000e+08 | -29000000.0 | -0.0 | -8.800000e+07 | 0.0 | 20000000.0 | 2.350000e+08 | 0.0000 | . 8 2011-12-31 | 246900000.0 | 16500000.0 | 6.960000e+08 | 3.874000e+08 | -0.000000e+00 | -7300000.0 | -4.033000e+08 | -3.335000e+08 | -60100000.0 | -0.0 | -2.800000e+08 | 0.0 | 12700000.0 | 3.086000e+08 | 0.0000 | . 9 2010-12-31 | 230500000.0 | 0.0 | 5.537000e+08 | 1.830000e+08 | -0.000000e+00 | -136100000.0 | -2.952000e+08 | -3.210000e+08 | -8600000.0 | -0.0 | -3.332000e+08 | 0.0 | -74700000.0 | 3.707000e+08 | 0.0000 | . 10 2009-12-31 | 219200000.0 | 12900000.0 | 2.925000e+08 | -4.384000e+08 | 0.000000e+00 | -217600000.0 | -6.574000e+08 | 1.400000e+07 | -10800000.0 | 0.0 | 2.460000e+08 | 0.0 | -118900000.0 | -1.459000e+08 | -0.5442 | . vects = [ &quot;Depreciation &amp; Amortization&quot; , &quot;Stock-based compensation&quot; , &quot;Operating Cash Flow&quot; , &quot;Capital Expenditure&quot; , &quot;Acquisitions and disposals&quot; , &quot;Investment purchases and sales&quot; , &quot;Investing Cash flow&quot; , &quot;Issuance (repayment) of debt&quot; , &quot;Issuance (buybacks) of shares&quot; , &quot;Dividend payments&quot; , &quot;Financing Cash Flow&quot; , &quot;Effect of forex changes on cash&quot; , &quot;Net cash flow / Change in cash&quot; , &quot;Free Cash Flow&quot; , &quot;Net Cash/Marketcap&quot; , ] outflows = [ &quot;Depreciation &amp; Amortization&quot; , &quot;Stock-based compensation&quot; ,&quot;Dividend payments&quot; ,&quot;Capital Expenditure&quot; ,&quot;Issuance (repayment) of debt&quot; , &quot;Issuance (buybacks) of shares&quot; ,&quot;Effect of forex changes on cash&quot; ,] flows = [&quot;Operating Cash Flow&quot; ,&quot;Acquisitions and disposals&quot; , &quot;Investment purchases and sales&quot; , &quot;Investing Cash flow&quot; ,&quot;Financing Cash Flow&quot; ,&quot;Free Cash Flow&quot; , ] ratios = [&quot;Net cash flow / Change in cash&quot; ,&quot;Net Cash/Marketcap&quot; , ] out_g = df[df[&#39;Metric&#39;].isin(outflows)] flow_g = df[df[&#39;Metric&#39;].isin(flows)] ratio_g = df[df[&#39;Metric&#39;].isin(ratios)] . Outflows . make_multi_LineGraph(out_g, False) . make_multi_LineGraph(out_g, True) . Other Cash Flows . make_multi_LineGraph(flow_g, False) . make_multi_LineGraph(flow_g, True) . Ratios . make_multi_LineGraph(ratio_g, False) . make_multi_LineGraph(ratio_g, True) . Peer Comparison . Big Comp Table . Ticker Company Sector Industry Country Index P/E EPS (ttm) Insider Own Shs Outstand Perf Week Market Cap Forward P/E EPS next Y Insider Trans Shs Float Perf Month Income PEG EPS next Q Inst Own Short Float Perf Quarter Sales P/S EPS this Y Inst Trans Short Ratio Perf Half Y Book/sh P/B ROA Target Price Perf Year Cash/sh P/C EPS next 5Y ROE 52W Range Perf YTD Dividend P/FCF EPS past 5Y ROI 52W High Beta Dividend % Quick Ratio Sales past 5Y Gross Margin 52W Low ATR Employees Current Ratio Sales Q/Q Oper. Margin RSI (14) Volatility Optionable Debt/Eq EPS Q/Q Profit Margin Rel Volume Prev Close Shortable LT Debt/Eq Earnings Payout Avg Volume Price Recom SMA20 SMA50 SMA200 Volume Change . 0 ALK | Alaska Air Group, Inc. | Services | Regional Airlines | USA | S&amp;P 500 | 5.50 | 6.18 | 0.30% | 123.13M | 23.50% | 4.19B | 8.20 | 216.00% | -1.80% | 122.05M | 20.01% | 769.00M | 4.44 | -1.08 | 90.00% | 3.27% | -49.17% | 8.78B | 0.48 | 75.50% | -0.59% | 1.39 | -51.48% | 35.18 | 0.97 | 6.00% | 45.25 | -45.07% | 12.35 | 2.75 | 1.24% | 18.90% | 20.02 - 72.22 | -49.82% | - | 3.02 | 6.90% | 14.00% | -52.92% | 1.42 | - | 0.60 | 10.30% | 56.10% | 69.83% | 2.92 | 24134 | 0.60 | 7.90% | 12.10% | 54.94 | 6.89% 8.15% | Yes | 0.35 | 683.70% | 8.80% | 1.40 | 31.58 | Yes | 0.29 | May 05 BMO | 22.40% | 2.87M | 34.00 | 2.30 | 19.27% | -9.09% | -42.09% | 4,002,548 | 7.66% | . 1 AAL | American Airlines Group Inc. | Services | Major Airlines | USA | S&amp;P 500 | 3.32 | 3.81 | 1.30% | 426.89M | 22.98% | 5.39B | 11.03 | 108.50% | 0.98% | 421.02M | 3.10% | 1.69B | 0.29 | -2.26 | 84.30% | 19.37% | -52.87% | 45.77B | 0.12 | 25.20% | -0.88% | 1.58 | -59.73% | -0.27 | - | 2.80% | 16.25 | -63.05% | 8.96 | 1.41 | 11.28% | - | 9.09 - 34.99 | -55.96% | 0.40 | - | -0.70% | 10.30% | -63.90% | 1.81 | 3.17% | 0.30 | 1.40% | 61.50% | 38.94% | 1.36 | 133000 | 0.40 | 3.40% | 6.70% | 51.95 | 7.34% 9.51% | Yes | - | 35.10% | 3.70% | 2.21 | 11.26 | Yes | - | Apr 30 BMO | 10.50% | 51.51M | 12.63 | 3.20 | 15.61% | -15.87% | -49.70% | 113,669,408 | 12.17% | . 2 DAL | Delta Air Lines, Inc. | Services | Major Airlines | USA | S&amp;P 500 | 5.07 | 5.39 | 0.30% | 639.81M | 21.58% | 17.48B | 6.61 | 170.10% | -86.23% | 639.81M | -4.71% | 3.50B | 1.32 | -4.17 | 88.70% | 3.91% | -51.77% | 45.13B | 0.39 | 28.70% | -0.15% | 0.69 | -50.48% | 22.46 | 1.22 | 5.40% | 38.93 | -53.13% | - | - | 3.85% | 23.90% | 19.10 - 63.44 | -53.28% | - | 4.14 | 56.40% | 19.60% | -56.93% | 1.33 | - | 0.50 | 3.10% | 53.50% | 43.04% | 2.54 | 91224 | 0.50 | -18.00% | 11.50% | 50.93 | 6.29% 8.27% | Yes | 1.19 | -176.60% | 7.80% | 2.27 | 24.34 | Yes | 0.88 | Apr 22 BMO | 28.80% | 36.39M | 27.32 | 2.20 | 16.37% | -19.29% | -47.26% | 81,614,880 | 12.24% | . 3 LUV | Southwest Airlines Co. | Services | Regional Airlines | USA | S&amp;P 500 | 7.34 | 4.22 | 0.30% | 526.00M | 4.24% | 16.29B | 9.87 | 190.80% | -59.39% | 506.62M | -11.77% | 2.27B | 4.59 | -0.41 | 89.10% | 1.91% | -45.56% | 22.43B | 0.73 | -2.00% | 0.57% | 0.83 | -46.27% | 18.69 | 1.66 | 8.70% | 43.06 | -42.89% | 7.74 | 4.00 | 1.60% | 23.30% | 28.25 - 58.83 | -42.63% | 0.72 | 6.29 | 20.80% | 18.20% | -47.36% | 1.40 | 2.32% | 0.60 | 3.80% | 74.50% | 9.63% | 2.56 | 60800 | 0.70 | 0.50% | 13.20% | 42.21 | 5.85% 6.69% | Yes | 0.27 | -21.80% | 10.30% | 9.86 | 29.69 | Yes | 0.19 | Apr 28 BMO | 16.40% | 11.68M | 30.97 | 2.60 | -2.73% | -20.46% | -38.70% | 101,007,792 | 4.31% | . 4 UAL | United Airlines Holdings, Inc. | Services | Major Airlines | USA | S&amp;P 500 | 2.68 | 11.63 | 0.30% | 248.79M | 20.60% | 7.76B | 5.74 | 134.70% | -0.27% | 246.21M | 3.48% | 3.01B | 0.26 | -2.88 | - | 9.11% | -58.50% | 43.26B | 0.18 | 51.30% | 0.22% | 1.02 | -66.15% | 45.72 | 0.68 | 5.80% | 49.50 | -64.88% | 19.87 | 1.57 | 10.20% | 28.00% | 17.80 - 96.03 | -64.57% | - | 3.26 | 31.60% | 12.90% | -67.50% | 1.56 | - | 0.50 | 2.10% | 62.00% | 75.34% | 3.49 | 96000 | 0.50 | 3.80% | 9.90% | 48.35 | 6.98% 10.68% | Yes | 1.29 | 51.20% | 7.00% | 2.44 | 27.84 | Yes | 1.16 | Apr 30 AMC | 0.00% | 22.01M | 31.21 | 2.40 | 14.40% | -23.51% | -58.95% | 52,643,464 | 12.10% | . Market Value . Enterprise Value . Leverage . DCF Valuation . Generating a range of growth rate scenarios: . #collapse-hide SR_g_scenarios = np.linspace(-.03,.04,15,endpoint=False) print(SR_g_scenarios) . . [-0.03 -0.02533333 -0.02066667 -0.016 -0.01133333 -0.00666667 -0.002 0.00266667 0.00733333 0.012 0.01666667 0.02133333 0.026 0.03066667 0.03533333] . DCF Growth Rate Scenario . Firm Value/Share ($) Equity Value/Share ($) SR CAGR LR CAGR Implied ROI (%) . 0 Firm Value/Share ($) | Equity Value/Share ($) | SR CAGR | LR CAGR | Implied ROI (%) | . 1 138.905 | 77.4672 | -0.03 | 0.01 | 127.845 | . 2 141.907 | 79.1414 | -0.0253333 | 0.01 | 132.769 | . 3 144.963 | 80.846 | -0.0206667 | 0.01 | 137.782 | . 4 148.075 | 82.5815 | -0.016 | 0.01 | 142.887 | . 5 151.243 | 84.3483 | -0.0113333 | 0.01 | 148.083 | . 6 154.468 | 86.147 | -0.00666667 | 0.01 | 153.373 | . 7 157.751 | 87.9778 | -0.002 | 0.01 | 158.758 | . 8 161.092 | 89.8412 | 0.00266667 | 0.01 | 164.239 | . 9 164.493 | 91.7378 | 0.00733333 | 0.01 | 169.817 | . 10 167.954 | 93.6679 | 0.012 | 0.01 | 175.494 | . 11 171.476 | 95.632 | 0.0166667 | 0.01 | 181.271 | . 12 175.059 | 97.6306 | 0.0213333 | 0.01 | 187.149 | . 13 178.706 | 99.6641 | 0.026 | 0.01 | 193.13 | . 14 182.415 | 101.733 | 0.0306667 | 0.01 | 199.215 | . 15 186.189 | 103.838 | 0.0353333 | 0.01 | 205.405 | . Seems to do a decent job, however this does not take into account the shock from coronavirus which will probably hurt revenues next year. We will modifiy the discounted cash flow formula to include a shock to FCF in the first year. . Firm Value/Share ($) Equity Value/Share ($) SR CAGR LR CAGR Implied ROI (%) . 0 Firm Value/Share ($) | Equity Value/Share ($) | SR CAGR | LR CAGR | Implied ROI (%) | . 1 69.4524 | 38.7336 | -0.03 | 0.01 | 13.9224 | . 2 70.9533 | 39.5707 | -0.0253333 | 0.01 | 16.3844 | . 3 72.4816 | 40.423 | -0.0206667 | 0.01 | 18.8911 | . 4 74.0375 | 41.2907 | -0.016 | 0.01 | 21.4434 | . 5 75.6216 | 42.1742 | -0.0113333 | 0.01 | 24.0417 | . 6 77.2341 | 43.0735 | -0.00666667 | 0.01 | 26.6867 | . 7 78.8755 | 43.9889 | -0.002 | 0.01 | 29.3791 | . 8 80.5462 | 44.9206 | 0.00266667 | 0.01 | 32.1195 | . 9 82.2465 | 45.8689 | 0.00733333 | 0.01 | 34.9085 | . 10 83.9769 | 46.834 | 0.012 | 0.01 | 37.7469 | . 11 85.7379 | 47.816 | 0.0166667 | 0.01 | 40.6353 | . 12 87.5297 | 48.8153 | 0.0213333 | 0.01 | 43.5744 | . 13 89.3528 | 49.8321 | 0.026 | 0.01 | 46.5649 | . 14 91.2076 | 50.8665 | 0.0306667 | 0.01 | 49.6074 | . 15 93.0946 | 51.9189 | 0.0353333 | 0.01 | 52.7026 | . DCF Peer Comparison . Firm Value/Share ($) Equity Value/Share ($) SR CAGR LR CAGR Implied ROI (%) . ticker . ALK 87.014531 | 48.528018 | 0.02 | 0.01 | 42.729465 | . AAL 54.319490 | 54.473259 | 0.02 | 0.01 | 331.300545 | . DAL 58.522847 | 38.246862 | 0.02 | 0.01 | 39.995833 | . LUV 28.131268 | 11.806731 | 0.02 | 0.01 | -61.876877 | . UAL 670.864513 | 465.525445 | 0.02 | 0.01 | 1391.590660 | . Historical DCF Scenario Backtest Analysis Using Differint Bases (Work In Progress.) . (WIP -- NEED TO DO MORE CODE BUT THIS WILL HOW HOW ACCURATE OUR MODELS ARE OVER TIME AND WHAT EARNINGS BASE MAKE THE BEST ESTIMATORS FOR THIS FIRM) . from google.colab import drive import sys . &#39;&#39;&#39; Quick visualization toolkit. I&#39;d like to build this out to be decently powerful in terms of enabling quick interpretation of DCF related data. &#39;&#39;&#39; import sys import matplotlib.pyplot as plt import seaborn as sns sys.path.append(&#39;..&#39;) sns.set() sns.set_context(&#39;paper&#39;) def visualize(dcf_prices, current_share_prices, regress = True): &#39;&#39;&#39; 2d plot comparing dcf-forecasted per share price with where a list of stocks is currently trading args: dcf_prices: dict of {&#39;ticker&#39;: price, ...} for dcf-values current_share_prices: dict of {&#39;ticker&#39;: price, ...} for (guess) regress: regress a line of best fit, because why not returns: nada &#39;&#39;&#39; # TODO: implement return NotImplementedError def visualize_bulk_historicals(dcfs, ticker, condition): &#39;&#39;&#39; multiple 2d plot comparing historical DCFS of different growth assumption conditions args: dcfs: list of dcfs of format {&#39;value1&#39;, {&#39;year1&#39;: dcf}, ...} condition: dict of format {&#39;condition&#39;: [value1, value2, value3]} &#39;&#39;&#39; dcf_share_prices = {} variable = list(condition.keys())[0] #TODO: make this more eloquent for handling the plotting of multiple condition formats try: conditions = [str(cond) for cond in list(condition.values())[0]] except IndexError: print(condition) conditions = [condition[&#39;Ticker&#39;]] for cond in conditions: dcf_share_prices[cond] = {} years = dcfs[cond].keys() for year in years: dcf_share_prices[cond][year] = dcfs[cond][year][&#39;share_price&#39;] for cond in conditions: plt.plot(list(dcf_share_prices[cond].keys())[::-1], list(dcf_share_prices[cond].values())[::-1], label = cond) # sorry for anybody reading this, bit too pythonic # the second argument here just fetches the list of dates we&#39;re using as x values # in the above plt.plot() call without knowing the conditions we index with abo historical_stock_prices = get_historical_share_prices(ticker, list(dcf_share_prices[list(dcf_share_prices.keys())[0]].keys())[::-1]) plt.plot(list(historical_stock_prices.keys()), list(historical_stock_prices.values()), label = &#39;${} over time&#39;.format(ticker)) plt.rcParams[&quot;figure.figsize&quot;]=20,20 plt.xlabel(&#39;Date&#39;) plt.ylabel(&#39;Share price ($)&#39;) plt.legend(loc = &#39;upper right&#39;) plt.title(&#39;$&#39; + ticker + &#39; &#39;) return plt def visualize_historicals(dcfs): &#39;&#39;&#39; 2d plot comparing dcf history to share price history &#39;&#39;&#39; pass dcf_share_prices = {} for k, v in dcfs.items(): dcf_share_prices[dcfs[k][&#39;date&#39;]] = dcfs[k][&#39;share_price&#39;] xs = list(dcf_share_prices.keys())[::-1] ys = list(dcf_share_prices.values())[::-1] plt.scatter(xs, ys) plt.rcParams[&quot;figure.figsize&quot;]=20,20 return plt . def prettyprint(dcfs, years): &#39;&#39;&#39; Pretty print-out results of a DCF query. Handles formatting for all output variatisons. &#39;&#39;&#39; LISTTEST = [] if years &gt; 1: for k, v in dcfs.items(): LISTTEST.append(&#39;ticker: {}&#39;.format(k)) if len(dcfs[k].keys()) &gt; 1: for yr, dcf in v.items(): LISTTEST.append(&#39;date: {} nvalue: {}&#39;.format(yr, dcf)) else: for k, v in dcfs.items(): LISTTEST.append(&#39;ticker: {} nvalue: {}&#39;.format(k, v)) print(LISTTEST) # return None . # !pip install argparse # # !rm -R DCF # !pip install matplotlib urllib3 seaborn # # !git clone https://github.com/albisbub/DCF.git # # !pip install git+https://github.com/albisbub/DCF.git # # !git merge DCF/DCF # # !ls DCF # # !pip install git+file://c:/DCF/modelling # # !pip install git+file://c:/DCF/visualization # !pip install fuckit # import fuckit # import os # import subprocess # import argparse # from modeling.data import * # from modeling.dcf import * # from visualization.plot import * # from visualization.printouts import * def main(args): &#39;&#39;&#39; although the if statements are less than desirable, it allows rapid exploration of historical or present DCF values for either a single or list of tickers. &#39;&#39;&#39; parser = argparse.ArgumentParser() parser.add_argument(&#39;--p&#39;, &#39;--period&#39;, help = &#39;years to forecast&#39;, type = int, default = 5) parser.add_argument(&#39;--t&#39;, &#39;--ticker&#39;, help = &#39;pass a single ticker to do historical DCF&#39;, type = str, default = &#39;AAPL&#39;) parser.add_argument(&#39;--y&#39;, &#39;--years&#39;, help = &#39;number of years to compute DCF analysis for&#39;, type = int, default = 1) parser.add_argument(&#39;--i&#39;, &#39;--interval&#39;, help = &#39;interval period for each calc, either &quot;annual&quot; or &quot;quarter&quot;&#39;, default = &#39;annual&#39;) parser.add_argument(&#39;--s&#39;, &#39;--step_increase&#39;, help = &#39;specify step increase for EG, CG, PG to enable comparisons.&#39;, type = float, default = 0) parser.add_argument(&#39;--steps&#39;, help = &#39;steps to take if --s is &gt; 0&#39;, default = 5) parser.add_argument(&#39;--v&#39;, &#39;--variable&#39;, help = &#39;if --step_increase is specified, must specifiy variable to increase from: [earnings_growth_rate, discount_rate]&#39;, default = None) parser.add_argument(&#39;--d&#39;, &#39;--discount_rate&#39;, help = &#39;discount rate for future cash flow to firm&#39;, default = 0.1) parser.add_argument(&#39;--eg&#39;, &#39;--earnings_growth_rate&#39;, help = &#39;growth in revenue, YoY&#39;, type = float, default = .05) parser.add_argument(&#39;--cg&#39;, &#39;--cap_ex_growth_rate&#39;, help = &#39;growth in cap_ex, YoY&#39;, type = float, default = 0.045) parser.add_argument(&#39;--pg&#39;, &#39;--perpetual_growth_rate&#39;, help = &#39;for perpetuity growth terminal value&#39;, type = float, default = 0.05) args = parser.parse_args(args.split()) if args.s &gt; 0: if args.v is not None: if args.v == &#39;eg&#39; or &#39;earnings_growth_rate&#39;: cond, dcfs = run_setup(args, variable = &#39;eg&#39;) elif args.v == &#39;cg&#39; or &#39;cap_ex_growth_rate&#39;: cond, dcfs = run_setup(args, variable = &#39;cg&#39;) elif args.v == &#39;pg&#39; or &#39;perpetual_growth_rate&#39;: cond, dcfs = run_setup(args, variable = &#39;pg&#39;) elif args.v == &#39;discount_rate&#39; or &#39;discount&#39;: cond, dcfs = run_setup(args, variable = &#39;discount&#39;) # TODO: more dynamically do this...potentially? else: raise ValueError(&#39;args.variable is invalid, must choose (as of now) from this list -&gt; [earnings_growth_rate, cap_ex_growth_rate, perpetual_growth_rate, discount&#39;) else: # should we just default to something? raise ValueError(&#39;If step (-- s) is &gt; 0, you must specify the variable via --v. What was passed is invalid.&#39;) else: cond, dcfs = {&#39;Ticker&#39;: [args.t]}, {} dcfs[args.t] = historical_DCF(args.t, args.y, args.p, args.d, args.eg, args.cg, args.pg, args.i) if args.y &gt; 1: # can&#39;t graph single timepoint very well.... return visualize_bulk_historicals(dcfs, args.t, cond) else: prettyprint(dcfs, args.y) def run_setup(args, variable): dcfs, cond = {}, {args.v: []} for increment in range(1, int(args.steps) + 1): # default to 5 steps? # this should probably be wrapped in another function.. var = vars(args)[variable] * (1 + (args.s * increment)) step = &#39;{}: {}&#39;.format(args.v, str(var)[0:4]) cond[args.v].append(step) vars(args)[variable] = var dcfs[step] = historical_DCF(args.t, args.y, args.p, args.d, args.eg, args.cg, args.pg, args.i) return cond, dcfs def multiple_tickers(): &#39;&#39;&#39; can be called from main to spawn dcf/historical dcfs for a list of tickers TODO: fully fix &#39;&#39;&#39; # if args.ts is not None: # &#39;&#39;&#39;list to forecast&#39;&#39;&#39; # if args.y &gt; 1: # for ticker in args.ts: # dcfs[ticker] = historical_DCF(args.t, args.y, args.p, args.eg, args.cg, args.pgr) # else: # for ticker in args.tss: # dcfs[ticker] = DCF(args.t, args.p, args.eg, args.cg, args.pgr) # elif args.t is not None: # &#39;&#39;&#39; single ticker&#39;&#39;&#39; # if args.y &gt; 1: # dcfs[args.t] = historical_DCF(args.t, args.y, args.p, args.eg, args.cg, args.pgr) # else: # dcfs[args.t] = DCF(args.t, args.p, args.eg, args.cg, args.pgr) # else: # raise ValueError(&#39;A ticker or list of tickers must be specified with --ticker or --tickers&#39;) return NotImplementedError . Scenario Callibration . Forecasting flows for 5 years out, starting at 2019-12-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2020 3.67E+08 | 2.94E+08 | 1.23E+08 | -1.16E+08 | 1.77E+08 | 2021 4.68E+08 | 3.90E+08 | 1.64E+08 | -8.08E+07 | 1.92E+08 | 2022 6.33E+08 | 5.84E+08 | 2.46E+08 | -5.66E+07 | 2.18E+08 | 2023 9.20E+08 | 9.69E+08 | 4.08E+08 | -3.96E+07 | 2.58E+08 | 2024 1.46E+09 | 1.77E+09 | 7.44E+08 | -2.77E+07 | 3.16E+08 | Enterprise Value for ALK: $2.11E+10. Equity Value for ALK: $1.97E+10. Per share value for ALK: $1.59E+02. Forecasting flows for 5 years out, starting at 2019-09-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2020 6.32E+08 | 4.92E+08 | 1.23E+08 | -1.12E+07 | 2.03E+08 | 2021 7.30E+08 | 6.54E+08 | 1.64E+08 | -7.84E+06 | 2.21E+08 | 2022 9.37E+08 | 9.78E+08 | 2.46E+08 | -5.49E+06 | 2.51E+08 | 2023 1.34E+09 | 1.62E+09 | 4.08E+08 | -3.84E+06 | 2.96E+08 | 2024 2.11E+09 | 2.96E+09 | 7.44E+08 | -2.69E+06 | 3.63E+08 | Enterprise Value for ALK: $3.07E+10. Equity Value for ALK: $2.92E+10. Per share value for ALK: $2.36E+02. Forecasting flows for 5 years out, starting at 2019-06-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2020 7.44E+08 | 4.24E+08 | 1.22E+08 | 1.52E+08 | 2.28E+08 | 2021 7.75E+08 | 5.64E+08 | 1.63E+08 | 1.06E+08 | 2.48E+08 | 2022 9.23E+08 | 8.43E+08 | 2.43E+08 | 7.44E+07 | 2.82E+08 | 2023 1.25E+09 | 1.40E+09 | 4.04E+08 | 5.21E+07 | 3.33E+08 | 2024 1.92E+09 | 2.55E+09 | 7.37E+08 | 3.65E+07 | 4.07E+08 | Enterprise Value for ALK: $2.83E+10. Equity Value for ALK: $2.66E+10. Per share value for ALK: $2.16E+02. Forecasting flows for 5 years out, starting at 2019-03-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2020 3.75E+08 | 2.91E+07 | 1.23E+08 | 1.50E+08 | 1.20E+08 | 2021 3.52E+08 | 3.87E+07 | 1.64E+08 | 1.05E+08 | 1.31E+08 | 2022 3.80E+08 | 5.79E+07 | 2.46E+08 | 7.34E+07 | 1.49E+08 | 2023 4.77E+08 | 9.61E+07 | 4.08E+08 | 5.14E+07 | 1.75E+08 | 2024 6.90E+08 | 1.75E+08 | 7.44E+08 | 3.60E+07 | 2.15E+08 | Enterprise Value for ALK: $1.05E+10. Equity Value for ALK: $8.46E+09. Per share value for ALK: $6.86E+01. Forecasting flows for 5 years out, starting at 2018-12-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2019 3.60E+08 | 5.36E+07 | 1.26E+08 | -1.88E+08 | 4.24E+08 | 2020 4.49E+08 | 7.13E+07 | 1.67E+08 | -1.32E+08 | 4.62E+08 | 2021 5.64E+08 | 1.07E+08 | 2.50E+08 | -9.23E+07 | 5.25E+08 | 2022 7.40E+08 | 1.77E+08 | 4.15E+08 | -6.46E+07 | 6.19E+08 | 2023 1.04E+09 | 3.23E+08 | 7.58E+08 | -4.52E+07 | 7.59E+08 | Enterprise Value for ALK: $1.55E+10. Equity Value for ALK: $1.36E+10. Per share value for ALK: $1.11E+02. Forecasting flows for 5 years out, starting at 2018-09-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2019 3.68E+08 | 3.46E+08 | 1.15E+08 | -1.12E+08 | 1.37E+08 | 2020 4.76E+08 | 4.60E+08 | 1.53E+08 | -7.84E+07 | 1.49E+08 | 2021 6.53E+08 | 6.88E+08 | 2.29E+08 | -5.49E+07 | 1.69E+08 | 2022 9.66E+08 | 1.14E+09 | 3.81E+08 | -3.84E+07 | 2.00E+08 | 2023 1.56E+09 | 2.08E+09 | 6.95E+08 | -2.69E+07 | 2.45E+08 | Enterprise Value for ALK: $2.25E+10. Equity Value for ALK: $2.02E+10. Per share value for ALK: $1.64E+02. Forecasting flows for 5 years out, starting at 2018-06-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2019 5.60E+08 | 3.16E+08 | 1.13E+08 | 7.14E+07 | 1.96E+08 | 2020 6.01E+08 | 4.20E+08 | 1.50E+08 | 5.00E+07 | 2.14E+08 | 2021 7.29E+08 | 6.28E+08 | 2.25E+08 | 3.50E+07 | 2.43E+08 | 2022 9.98E+08 | 1.04E+09 | 3.73E+08 | 2.45E+07 | 2.87E+08 | 2023 1.53E+09 | 1.90E+09 | 6.81E+08 | 1.71E+07 | 3.51E+08 | Enterprise Value for ALK: $2.26E+10. Equity Value for ALK: $2.03E+10. Per share value for ALK: $1.65E+02. Forecasting flows for 5 years out, starting at 2018-03-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2019 3.23E+08 | 3.38E+07 | 1.10E+08 | -2.24E+07 | 2.46E+08 | 2020 3.53E+08 | 4.49E+07 | 1.46E+08 | -1.57E+07 | 2.68E+08 | 2021 4.17E+08 | 6.72E+07 | 2.18E+08 | -1.10E+07 | 3.04E+08 | 2022 5.37E+08 | 1.12E+08 | 3.61E+08 | -7.68E+06 | 3.58E+08 | 2023 7.63E+08 | 2.04E+08 | 6.60E+08 | -5.38E+06 | 4.39E+08 | Enterprise Value for ALK: $1.14E+10. Equity Value for ALK: $9.07E+09. Per share value for ALK: $7.36E+01. Forecasting flows for 5 years out, starting at 2017-12-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2018 6.65E+08 | 1.89E+08 | 1.13E+08 | -4.76E+07 | 1.93E+08 | 2019 7.90E+08 | 2.51E+08 | 1.50E+08 | -3.33E+07 | 2.11E+08 | 2020 1.04E+09 | 3.75E+08 | 2.25E+08 | -2.33E+07 | 2.39E+08 | 2021 1.50E+09 | 6.23E+08 | 3.73E+08 | -1.63E+07 | 2.82E+08 | 2022 2.40E+09 | 1.14E+09 | 6.81E+08 | -1.14E+07 | 3.46E+08 | Enterprise Value for ALK: $3.48E+10. Equity Value for ALK: $3.23E+10. Per share value for ALK: $2.61E+02. Forecasting flows for 5 years out, starting at 2017-09-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2018 5.69E+08 | 5.11E+08 | 1.11E+08 | -1.48E+08 | 3.44E+08 | 2019 6.96E+08 | 6.80E+08 | 1.47E+08 | -1.03E+08 | 3.75E+08 | 2020 9.06E+08 | 1.02E+09 | 2.20E+08 | -7.24E+07 | 4.25E+08 | 2021 1.28E+09 | 1.69E+09 | 3.65E+08 | -5.07E+07 | 5.02E+08 | 2022 1.97E+09 | 3.08E+09 | 6.67E+08 | -3.55E+07 | 6.15E+08 | Enterprise Value for ALK: $2.87E+10. Equity Value for ALK: $2.61E+10. Per share value for ALK: $2.11E+02. Forecasting flows for 5 years out, starting at 2017-06-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2018 8.34E+08 | 5.74E+08 | 1.05E+08 | 1.48E+08 | 3.09E+08 | 2019 8.70E+08 | 7.64E+08 | 1.39E+08 | 1.04E+08 | 3.37E+08 | 2020 1.03E+09 | 1.14E+09 | 2.08E+08 | 7.27E+07 | 3.83E+08 | 2021 1.38E+09 | 1.90E+09 | 3.46E+08 | 5.09E+07 | 4.52E+08 | 2022 2.09E+09 | 3.46E+09 | 6.32E+08 | 3.56E+07 | 5.53E+08 | Enterprise Value for ALK: $3.09E+10. Equity Value for ALK: $2.82E+10. Per share value for ALK: $2.29E+02. Forecasting flows for 5 years out, starting at 2017-03-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2018 5.19E+08 | 1.93E+08 | 1.05E+08 | 1.14E+08 | 2.26E+08 | 2019 5.23E+08 | 2.57E+08 | 1.39E+08 | 7.99E+07 | 2.46E+08 | 2020 5.97E+08 | 3.85E+08 | 2.08E+08 | 5.59E+07 | 2.79E+08 | 2021 7.72E+08 | 6.38E+08 | 3.46E+08 | 3.91E+07 | 3.30E+08 | 2022 1.13E+09 | 1.16E+09 | 6.32E+08 | 2.74E+07 | 4.04E+08 | Enterprise Value for ALK: $1.69E+10. Equity Value for ALK: $1.43E+10. Per share value for ALK: $1.16E+02. Forecasting flows for 5 years out, starting at 2019-12-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2020 3.75E+08 | 3.02E+08 | 1.27E+08 | -1.16E+08 | 1.77E+08 | 2021 4.98E+08 | 4.21E+08 | 1.77E+08 | -8.08E+07 | 1.92E+08 | 2022 7.10E+08 | 6.72E+08 | 2.83E+08 | -5.66E+07 | 2.18E+08 | 2023 1.11E+09 | 1.20E+09 | 5.06E+08 | -3.96E+07 | 2.58E+08 | 2024 1.91E+09 | 2.40E+09 | 1.01E+09 | -2.77E+07 | 3.16E+08 | Enterprise Value for ALK: $2.73E+10. Equity Value for ALK: $2.58E+10. Per share value for ALK: $2.09E+02. Forecasting flows for 5 years out, starting at 2019-09-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2020 6.45E+08 | 5.06E+08 | 1.27E+08 | -1.12E+07 | 2.03E+08 | 2021 7.74E+08 | 7.06E+08 | 1.77E+08 | -7.84E+06 | 2.21E+08 | 2022 1.05E+09 | 1.12E+09 | 2.83E+08 | -5.49E+06 | 2.51E+08 | 2023 1.61E+09 | 2.02E+09 | 5.06E+08 | -3.84E+06 | 2.96E+08 | 2024 2.78E+09 | 4.01E+09 | 1.01E+09 | -2.69E+06 | 3.63E+08 | Enterprise Value for ALK: $3.98E+10. Equity Value for ALK: $3.82E+10. Per share value for ALK: $3.10E+02. Forecasting flows for 5 years out, starting at 2019-06-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2020 7.55E+08 | 4.36E+08 | 1.26E+08 | 1.52E+08 | 2.28E+08 | 2021 8.14E+08 | 6.09E+08 | 1.76E+08 | 1.06E+08 | 2.48E+08 | 2022 1.02E+09 | 9.70E+08 | 2.80E+08 | 7.44E+07 | 2.82E+08 | 2023 1.49E+09 | 1.74E+09 | 5.02E+08 | 5.21E+07 | 3.33E+08 | 2024 2.50E+09 | 3.46E+09 | 9.98E+08 | 3.65E+07 | 4.07E+08 | Enterprise Value for ALK: $3.62E+10. Equity Value for ALK: $3.45E+10. Per share value for ALK: $2.80E+02. Forecasting flows for 5 years out, starting at 2019-03-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2020 3.79E+08 | 3.00E+07 | 1.27E+08 | 1.50E+08 | 1.20E+08 | 2021 3.64E+08 | 4.18E+07 | 1.77E+08 | 1.05E+08 | 1.31E+08 | 2022 4.13E+08 | 6.66E+07 | 2.83E+08 | 7.34E+07 | 1.49E+08 | 2023 5.55E+08 | 1.19E+08 | 5.06E+08 | 5.14E+07 | 1.75E+08 | 2024 8.80E+08 | 2.38E+08 | 1.01E+09 | 3.60E+07 | 2.15E+08 | Enterprise Value for ALK: $1.30E+10. Equity Value for ALK: $1.10E+10. Per share value for ALK: $8.94E+01. Forecasting flows for 5 years out, starting at 2018-12-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2019 3.64E+08 | 5.51E+07 | 1.29E+08 | -1.88E+08 | 4.24E+08 | 2020 4.63E+08 | 7.69E+07 | 1.81E+08 | -1.32E+08 | 4.62E+08 | 2021 6.00E+08 | 1.23E+08 | 2.88E+08 | -9.23E+07 | 5.25E+08 | 2022 8.27E+08 | 2.20E+08 | 5.16E+08 | -6.46E+07 | 6.19E+08 | 2023 1.25E+09 | 4.37E+08 | 1.03E+09 | -4.52E+07 | 7.59E+08 | Enterprise Value for ALK: $1.84E+10. Equity Value for ALK: $1.65E+10. Per share value for ALK: $1.34E+02. Forecasting flows for 5 years out, starting at 2018-09-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2019 3.78E+08 | 3.56E+08 | 1.19E+08 | -1.12E+08 | 1.37E+08 | 2020 5.09E+08 | 4.97E+08 | 1.66E+08 | -7.84E+07 | 1.49E+08 | 2021 7.39E+08 | 7.92E+08 | 2.64E+08 | -5.49E+07 | 1.69E+08 | 2022 1.17E+09 | 1.42E+09 | 4.73E+08 | -3.84E+07 | 2.00E+08 | 2023 2.06E+09 | 2.82E+09 | 9.41E+08 | -2.69E+07 | 2.45E+08 | Enterprise Value for ALK: $2.93E+10. Equity Value for ALK: $2.71E+10. Per share value for ALK: $2.20E+02. Forecasting flows for 5 years out, starting at 2018-06-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2019 5.69E+08 | 3.25E+08 | 1.16E+08 | 7.14E+07 | 1.96E+08 | 2020 6.31E+08 | 4.53E+08 | 1.62E+08 | 5.00E+07 | 2.14E+08 | 2021 8.08E+08 | 7.22E+08 | 2.59E+08 | 3.50E+07 | 2.43E+08 | 2022 1.19E+09 | 1.29E+09 | 4.63E+08 | 2.45E+07 | 2.87E+08 | 2023 1.99E+09 | 2.58E+09 | 9.22E+08 | 1.71E+07 | 3.51E+08 | Enterprise Value for ALK: $2.88E+10. Equity Value for ALK: $2.65E+10. Per share value for ALK: $2.16E+02. Forecasting flows for 5 years out, starting at 2018-03-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2019 3.26E+08 | 3.47E+07 | 1.13E+08 | -2.24E+07 | 2.46E+08 | 2020 3.65E+08 | 4.85E+07 | 1.57E+08 | -1.57E+07 | 2.68E+08 | 2021 4.47E+08 | 7.73E+07 | 2.51E+08 | -1.10E+07 | 3.04E+08 | 2022 6.09E+08 | 1.39E+08 | 4.49E+08 | -7.68E+06 | 3.58E+08 | 2023 9.38E+08 | 2.76E+08 | 8.94E+08 | -5.38E+06 | 4.39E+08 | Enterprise Value for ALK: $1.38E+10. Equity Value for ALK: $1.14E+10. Per share value for ALK: $9.28E+01. Forecasting flows for 5 years out, starting at 2017-12-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2018 6.80E+08 | 1.94E+08 | 1.16E+08 | -4.76E+07 | 1.93E+08 | 2019 8.41E+08 | 2.71E+08 | 1.62E+08 | -3.33E+07 | 2.11E+08 | 2020 1.17E+09 | 4.32E+08 | 2.59E+08 | -2.33E+07 | 2.39E+08 | 2021 1.82E+09 | 7.74E+08 | 4.63E+08 | -1.63E+07 | 2.82E+08 | 2022 3.17E+09 | 1.54E+09 | 9.22E+08 | -1.14E+07 | 3.46E+08 | Enterprise Value for ALK: $4.53E+10. Equity Value for ALK: $4.28E+10. Per share value for ALK: $3.46E+02. Forecasting flows for 5 years out, starting at 2017-09-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2018 5.80E+08 | 5.26E+08 | 1.14E+08 | -1.48E+08 | 3.44E+08 | 2019 7.34E+08 | 7.34E+08 | 1.59E+08 | -1.03E+08 | 3.75E+08 | 2020 1.00E+09 | 1.17E+09 | 2.53E+08 | -7.24E+07 | 4.25E+08 | 2021 1.51E+09 | 2.10E+09 | 4.54E+08 | -5.07E+07 | 5.02E+08 | 2022 2.53E+09 | 4.17E+09 | 9.03E+08 | -3.55E+07 | 6.15E+08 | Enterprise Value for ALK: $3.64E+10. Equity Value for ALK: $3.38E+10. Per share value for ALK: $2.74E+02. Forecasting flows for 5 years out, starting at 2017-06-30. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2018 8.46E+08 | 5.91E+08 | 1.08E+08 | 1.48E+08 | 3.09E+08 | 2019 9.10E+08 | 8.24E+08 | 1.51E+08 | 1.04E+08 | 3.37E+08 | 2020 1.13E+09 | 1.31E+09 | 2.40E+08 | 7.27E+07 | 3.83E+08 | 2021 1.63E+09 | 2.36E+09 | 4.30E+08 | 5.09E+07 | 4.52E+08 | 2022 2.70E+09 | 4.69E+09 | 8.56E+08 | 3.56E+07 | 5.53E+08 | Enterprise Value for ALK: $3.92E+10. Equity Value for ALK: $3.65E+10. Per share value for ALK: $2.95E+02. Forecasting flows for 5 years out, starting at 2017-03-31. DFCF | EBIT | D&amp;A | CWC | CAP_EX | 2018 5.25E+08 | 1.99E+08 | 1.08E+08 | 1.14E+08 | 2.26E+08 | 2019 5.43E+08 | 2.78E+08 | 1.51E+08 | 7.99E+07 | 2.46E+08 | 2020 6.49E+08 | 4.43E+08 | 2.40E+08 | 5.59E+07 | 2.79E+08 | 2021 8.98E+08 | 7.93E+08 | 4.30E+08 | 3.91E+07 | 3.30E+08 | 2022 1.44E+09 | 1.58E+09 | 8.56E+08 | 2.74E+07 | 4.04E+08 | Enterprise Value for ALK: $2.11E+10. Equity Value for ALK: $1.85E+10. Per share value for ALK: $1.49E+02. . import pandas as pd %matplotlib inline a.show() . Conclusions and Summary . # print(returned_output.decode(&quot;utf-8&quot;)) .",
            "url": "https://albisbub.github.io/RFIC-Pitches/ALK/",
            "relUrl": "/ALK/",
            "date": " • Apr 29, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Historical Macroeconomic Data",
            "content": ". This is a work in progress report that will give real time info on macroeconomic conditions, along with info on our holdings composition. . To Do: . Github LIVE data updating | Collect historical records of portfolio for returns analysis | . Imports and Helpers . FRED Data Cleaning and Grouping . # exploring the basics, gdp, unemployment, and inflation prices_n = [ &#39;cpi_inflation&#39;, &#39;gdp_deflator&#39;,&#39;cpi_urban&#39;,&#39;cpi_medical&#39;] prices_id = [&#39;CPIAUCSL&#39;,&quot;FPCPITOTLZGUSA&quot;,&quot;A191RI1Q225SBEA&quot;,&quot;CPIMEDSL&quot;] fed_n = [&quot;M1&quot;,&quot;M2&quot;,&quot;M2_less_M1&quot;,&quot;effective_ffr&quot;,&quot;ffr_upper&quot;,&quot;ffr_lower&quot;] fed_id = [&quot;M1&quot;,&quot;M2&quot;,&quot;NONM1&quot;,&quot;DFF&quot;,&quot;DFEDTARU&quot;,&quot;DFEDTARL&quot;] output_n = [&#39;potential_gdp&#39;,&#39;nominal_gdp&#39;,&#39;real_GDP&#39;] output_id = [&#39;GDPPOT&#39;,&#39;GDPC1&#39;,&#39;GDP&#39;] per_cap_n = [&#39;gdp_per_capita&#39;,] per_cap_id = [&#39;A939RX0Q048SBEA&#39;] # employment_n = [&#39;unemployment_rate&#39;,&quot;fed_natural_rate&quot;,&#39;insured_unemployment_rate&#39;,&#39;20_and_over&#39;, &#39;black_or_african_american&#39;,&#39;LNU04032183&#39;,&#39;women&#39;,&#39;men&#39;] # employment_id = [&#39;UNRATE&#39;,&quot;NROU&quot;,&#39;IURSA&#39;,&#39;LNS14000024&#39;,&#39;LNS14000006&#39;,&#39;LNU04032183&#39;,&#39;LNS14000002&#39;,&#39;LNS14000001&#39;] # employment_n = [&#39;unemployment_rate&#39;,&quot;fed_natural_rate&quot;,&#39;insured_unemployment_rate&#39;,&#39;20_and_over&#39;, &#39;black_or_african_american&#39;,&#39;LNU04032183&#39;,&#39;women&#39;,&#39;men&#39;] # employment_id = [&#39;UNRATE&#39;,&quot;NROU&quot;,&#39;IURSA&#39;,&#39;LNS14000024&#39;,&#39;LNS14000006&#39;,&#39;LNU04032183&#39;,&#39;LNS14000002&#39;,&#39;LNS14000001&#39;] # employment_n = [&#39;unemployment_rate&#39;,&quot;fed_natural_rate&quot;,&#39;insured_unemployment_rate&#39;,] # employment_id = [&#39;UNRATE&#39;,&quot;NROU&quot;,&#39;IURSA&#39;,] employment_n = [&#39;unemployment_rate&#39;,&quot;fed_natural_rate&quot;,] employment_id = [&#39;UNRATE&#39;,&quot;NROU&quot;,] # # 1 Mo 2 Mo 3 Mo 6 Mo 1 Yr 2 Yr 3 Yr 5 Yr 7 Yr 10 Yr 20 Yr 30 Yr yield_curve_n = [&#39;DGS1MO&#39;,&quot;DGS2MO&quot;,&quot;DGS6MO&quot;,&quot;DGS1&quot;,&quot;DGS2&quot;,&quot;DGS3&quot;,&quot;DGS5&quot;,&quot;DGS7&quot;,&quot;DGS10&quot;,&quot;DGS20&quot;,&quot;DGS30&quot;] yield_curve_id = [&#39;DGS1MO&#39;,&quot;DGS2MO&quot;,&quot;DGS6MO&quot;,&quot;DGS1&quot;,&quot;DGS2&quot;,&quot;DGS3&quot;,&quot;DGS5&quot;,&quot;DGS7&quot;,&quot;DGS10&quot;,&quot;DGS20&quot;,&quot;DGS30&quot;] # yield_curve_n = [&quot;DGS6MO&quot;,&quot;DGS1&quot;,&quot;DGS2&quot;,&quot;DGS3&quot;,&quot;DGS5&quot;,&quot;DGS7&quot;,&quot;DGS10&quot;,&quot;DGS20&quot;,&quot;DGS30&quot;] # yield_curve_id = [&#39;DGS1MO&#39;,&quot;DGS2MO&quot;,&quot;DGS6MO&quot;,&quot;DGS1&quot;,&quot;DGS2&quot;,&quot;DGS3&quot;,&quot;DGS5&quot;,&quot;DGS7&quot;,&quot;DGS10&quot;,&quot;DGS20&quot;,&quot;DGS30&quot;] # print(len(series_names),len(series_ids)) prices =compile_FRED(prices_n, prices_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) prices[&#39;cpi_inflation&#39;] = prices[&#39;cpi_inflation&#39;].pct_change() * 100 prices[&#39;cpi_medical&#39;] = prices[&#39;cpi_medical&#39;].pct_change() * 100 for i in prices.columns: print(i) if i != &#39;date&#39;: prices[i] = prices[i].round(2) # prices = prices.pct_change() # prices[&#39;cpi_urban&#39;] = prices[&#39;cpi_urban&#39;].pct_change() # prices[&#39;cpi_medical&#39;] = prices[&#39;cpi_medical&#39;].pct_change() fed =compile_FRED(fed_n, fed_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) output =compile_FRED(output_n, output_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) pcap = compile_FRED(per_cap_n,per_cap_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) for i in pcap.columns: print(i) if i != &#39;date&#39;: pcap[i] = ((pcap[i].pct_change())*100).round(2) for i in output.columns: print(i) if i != &#39;date&#39;: output[i] = ((output[i].pct_change())*100).round(2) employment =compile_FRED(employment_n, employment_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) # yield_curve= compile_FRED(yield_curve_n, yield_curve_id, obs_start = &#39;1950-01-01&#39;, obs_end = today) macro_dfList = [prices,fed,output,pcap,employment] # US_data.columns # # add gdp per capital growth RATE, inflation RATE to the data set, as well as a flag for growth vs. recession per quarter # US_data[&#39;gdp_growth_rate&#39;] = US_data[&#39;gdp_per_capita&#39;].pct_change() # US_data[&#39;cpi_inflation_rate&#39;] = US_data[&#39;cpi&#39;].pct_change() # US_data[&#39;growth&#39;] = US_data[&#39;gdp_growth_rate&#39;] &gt; 0.0 # # drop null rows from the first period, which dont have percent changes # US_data = US_data.dropna() # US_data.head() . date cpi_inflation gdp_deflator cpi_urban cpi_medical date gdp_per_capita date potential_gdp nominal_gdp real_GDP . def formatMacros(inputs): ColumnList = list(inputs.columns) yearList = list(inputs.date) # print(ColumnList) # print(yearList) # transposed = inputs.transpose() cleaned = inputs.rename_axis(&#39;date&#39;) # print(cleaned.columns) # cleaned.drop(cleaned.columns[0],inplace=True) byYear = cleaned.set_index(&#39;date&#39;).stack() df = pd.DataFrame(byYear, columns=[&#39;Value&#39;]) # print(df) df.reset_index(inplace=True) # print(df.columns) df.rename(columns={&#39;level_1&#39;:&#39;Metric&#39;}, inplace=True) # df.dropna(inplace=True) # df[&#39;Value&#39;] = pd.to_numeric(df[&#39;Value&#39;], errors=&#39;coerce&#39;) # print(df) # print(df.columns) df = df[~df[&#39;date&#39;].isin([&#39;level_0&#39;,&#39;index&#39;])] # df = df.drop([&#39;level_0&#39;,&#39;index&#39;],axis=0) # print(df.Year) df.Year = df.date.astype(str) return df _prices = formatMacros(prices) . Prices . Values are in percents, so a reading of 6 on the following chart is interpreted as 6%, not 600%. . CPI Inflation Baskets . Aggregate Demand . Y = (Consumption) + (Investment) + (Govt. Spending) - (Net Exports) . Percent Change . Are we on a steady state growth path? Last 30 Years . Per Capita Output . make_multi_LineGraph(_pcap,True) . Consumption . Investment . Governmtment Spending . Exports/Imports . Net Exports = Exports-Imports | . Aggregate Supply . Productivity . Input Markets . Real Estate Markets . Labor Markets . Unemployment Rated . def gpct(input, logged,recent): _input = formatMacros(input) if recent: return make_multi_LineGraph(_input[_input.date &gt; yearsago], logged) else: return make_multi_LineGraph(_input, logged) gpct(employment, False, False) . gpct(employment, True,False) . gpct(employment, False, True) . gpct(employment, True, True) . Credit Markets . Capital Stock . Fed Watching . Balance Sheet . Fed Funds Rate Targets . Repurchase Activity . Theoretical Relationships . Classical Phillips Curve . # explore some visualizations here # let&#39;s take a look at a classic macro 101 relationship - the Phillips curve # https://en.wikipedia.org/wiki/Phillips_curve sns.pairplot(data=US_data, x_vars=[&#39;unemployment_rate&#39;], y_vars=[&#39;cpi_inflation_rate&#39;], size=7); . # doesnt seem to be much evidence of the Phillips curve in this correlation plot . # # try out some basic models on this data, attempting to predict if the US economy will grow or recede the next quarter (classification) # # going to adjust the data a bit first, since we should be trying to predict with past data # # each will have 4 lagged variables for unemployment rate, inflation rate, and gdp growth rate # US_data_new = US_data.copy() # # lagged unemployment # US_data_new[&#39;unemployment_1&#39;] = US_data_new[&#39;unemployment_rate&#39;].shift(periods=1) # US_data_new[&#39;unemployment_2&#39;] = US_data_new[&#39;unemployment_rate&#39;].shift(periods=2) # US_data_new[&#39;unemployment_3&#39;] = US_data_new[&#39;unemployment_rate&#39;].shift(periods=3) # US_data_new[&#39;unemployment_4&#39;] = US_data_new[&#39;unemployment_rate&#39;].shift(periods=4) # # gdp lags # US_data_new[&#39;gdp_1&#39;] = US_data_new[&#39;gdp_growth_rate&#39;].shift(periods=1) # US_data_new[&#39;gdp_2&#39;] = US_data_new[&#39;gdp_growth_rate&#39;].shift(periods=2) # US_data_new[&#39;gdp_3&#39;] = US_data_new[&#39;gdp_growth_rate&#39;].shift(periods=3) # US_data_new[&#39;gdp_4&#39;] = US_data_new[&#39;gdp_growth_rate&#39;].shift(periods=4) # # inflation lags # US_data_new[&#39;cpi_1&#39;] = US_data_new[&#39;cpi_inflation_rate&#39;].shift(periods=1) # US_data_new[&#39;cpi_2&#39;] = US_data_new[&#39;cpi_inflation_rate&#39;].shift(periods=2) # US_data_new[&#39;cpi_3&#39;] = US_data_new[&#39;cpi_inflation_rate&#39;].shift(periods=3) # US_data_new[&#39;cpi_4&#39;] = US_data_new[&#39;cpi_inflation_rate&#39;].shift(periods=4) # # convert target to 0/1 instead of boolean # US_data_new[&#39;growth&#39;].replace(False, 0, inplace=True) # # drop null rows for which we don&#39;t have new lagged variables # US_data_new = US_data_new.dropna() # # target and feature enumeration # target = [&#39;growth&#39;] # features = [&#39;unemployment_1&#39;, &#39;unemployment_2&#39;, &#39;unemployment_3&#39;, &#39;unemployment_4&#39;, &#39;gdp_1&#39;, &#39;gdp_2&#39;, &#39;gdp_3&#39;, &#39;gdp_4&#39;, &#39;cpi_1&#39;, &#39;cpi_2&#39;, &#39;cpi_3&#39;, &#39;cpi_4&#39;] # # train test split # from sklearn.model_selection import train_test_split # train, test = train_test_split(US_data_new, random_state=0) # US_data_new.head() . date gdp_per_capita unemployment_rate cpi gdp_growth_rate cpi_inflation_rate growth unemployment_1 unemployment_2 unemployment_3 unemployment_4 gdp_1 gdp_2 gdp_3 gdp_4 cpi_1 cpi_2 cpi_3 cpi_4 . 5 1951-04-01 | 15968.0 | 3.1 | 25.92 | 0.013262 | 0.021277 | 1.0 | 3.7 | 4.2 | 5.0 | 5.8 | 0.009416 | 0.014557 | 0.034209 | 0.026846 | 0.035918 | 0.017865 | 0.017759 | 0.005955 | . 6 1951-07-01 | 16223.0 | 3.1 | 25.91 | 0.015969 | -0.000386 | 1.0 | 3.1 | 3.7 | 4.2 | 5.0 | 0.013262 | 0.009416 | 0.014557 | 0.034209 | 0.021277 | 0.035918 | 0.017865 | 0.017759 | . 7 1951-10-01 | 16181.0 | 3.5 | 26.16 | -0.002589 | 0.009649 | 0.0 | 3.1 | 3.1 | 3.7 | 4.2 | 0.015969 | 0.013262 | 0.009416 | 0.014557 | -0.000386 | 0.021277 | 0.035918 | 0.017865 | . 8 1952-01-01 | 16288.0 | 3.2 | 26.45 | 0.006613 | 0.011086 | 1.0 | 3.5 | 3.1 | 3.1 | 3.7 | -0.002589 | 0.015969 | 0.013262 | 0.009416 | 0.009649 | -0.000386 | 0.021277 | 0.035918 | . 9 1952-04-01 | 16259.0 | 2.9 | 26.46 | -0.001780 | 0.000378 | 0.0 | 3.2 | 3.5 | 3.1 | 3.1 | 0.006613 | -0.002589 | 0.015969 | 0.013262 | 0.011086 | 0.009649 | -0.000386 | 0.021277 | . Modelling/Forecasting .",
            "url": "https://albisbub.github.io/RFIC-Pitches/2020/04/01/Macro-and-Holdings-Snapshot.html",
            "relUrl": "/2020/04/01/Macro-and-Holdings-Snapshot.html",
            "date": " • Apr 1, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "RFIC MEETING 6",
            "content": ". Source Data . COMING SOON: To Replicate Analysis With Another Stock . Duplicate The Following SpreadSheets | Exploratory Sheet: | Valuation Sheet: | Peer Valuation Sheet: | . Then Duplicate This Colab Notebook . Features To Add On: bold text- Feature to clean and format financial data automatically from edgar . Fetching industry metrics from domadran&#39;s websites for comparison with larger sample set | Facet BarGraph For comp table in peer analysis | . Financial Statements (Billions) . Income Statement . #collapse-hide income = booking_df_list[0][1] income_table = income.drop_duplicates(keep=False) income_table[income.columns] . . Year 12/1/2019 12/1/2018 12/1/2017 12/1/2016 12/1/2015 12/1/2014 12/1/2013 12/1/2012 12/1/2011 12/1/2010 . 0 Operating Revenue | $15.07 | $14.53 | $12.68 | $10.74 | $9.22 | $8.44 | $6.79 | $5.26 | $4.36 | $3.09 | . 1 Revenue | $15.07 | $14.53 | $12.68 | $10.74 | $9.22 | $8.44 | $6.79 | $5.26 | $4.36 | $3.09 | . 2 Cost of Goods Sold | $0.00 | $0.00 | $0.24 | $0.42 | $0.63 | $0.86 | $1.08 | $1.18 | $1.28 | $1.18 | . 3 Gross Profit | $0.00 | $0.00 | $12.44 | $10.33 | $8.59 | $7.58 | $5.72 | $4.08 | $3.08 | $1.91 | . 4 Sales and Marketing Expense | $5.92 | $5.79 | $5.11 | $4.23 | $3.37 | $2.90 | $2.16 | $1.51 | $1.12 | $0.70 | . 5 General and Administrative Expense | $3.05 | $2.74 | $2.24 | $1.80 | $1.58 | $1.30 | $0.95 | $0.64 | $0.48 | $0.35 | . 6 SG&amp;A Expense | $8.97 | $8.53 | $7.35 | $6.03 | $4.95 | $4.21 | $3.11 | $2.15 | $1.59 | $1.06 | . 7 Research and Development Expense | $0.29 | $0.23 | $0.19 | $0.14 | $0.11 | $0.98 | $0.07 | $0.04 | $0.03 | $0.02 | . 8 Investment Write Off | $0.00 | $0.00 | $0.00 | $0.06 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | . 9 Special Income and Charges | $0.00 | $0.00 | $0.00 | -$1.00 | $0.000 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | . 10 Operating Interest Expense | $0.27 | $0.27 | $0.25 | $0.21 | $0.16 | $0.09 | $0.08 | $0.06 | $0.03 | $0.03 | . 11 Operating Interest Income | $0.15 | $0.19 | $0.16 | $0.10 | $0.06 | $0.01 | $0.00 | $0.00 | $0.01 | $0.00 | . 12 Net Operating Interest Income | -$0.11 | -$0.08 | -$0.10 | -$0.11 | -$0.10 | -$0.07 | -$0.08 | -$0.06 | -$0.02 | -$0.03 | . 13 Other Operating Expenses | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | . 14 Total Operating Expenses | $9.72 | $9.19 | $7.90 | $6.48 | $5.33 | $4.51 | $3.30 | $2.25 | $1.68 | $1.12 | . 15 Operating Income | $5.35 | $5.34 | $4.54 | $3.85 | $3.26 | $3.07 | $2.41 | $1.83 | $1.40 | $0.79 | . 16 Non-Operating Interest Income | $0.15 | $0.19 | $0.16 | $0.10 | $0.06 | $0.01 | $0.00 | $0.00 | $0.01 | $0.00 | . 17 Non-Operating Interest Expense | $0.27 | $0.27 | $0.25 | $0.21 | $0.16 | $0.09 | $0.08 | $0.06 | $0.03 | $0.03 | . 18 Net Non-Operating Interest Income Expense | -$0.11 | -$0.08 | -$0.10 | -$0.11 | -$0.10 | -$0.07 | -$0.08 | -$0.06 | -$0.02 | -$0.03 | . 19 Other Income and Expenses | $0.73 | -$0.42 | -$0.04 | -$1.02 | -$0.03 | -$0.01 | -$0.04 | -$0.01 | -$0.01 | -$0.01 | . 20 Net Interest Income | -$0.11 | -$0.08 | -$0.10 | -$0.11 | -$0.10 | -$0.07 | -$0.08 | -$0.06 | -$0.02 | -$0.03 | . 21 Pre-Tax Income | $5.96 | $4.84 | $4.40 | $2.71 | $3.13 | $2.99 | $2.30 | $1.76 | $1.37 | $0.75 | . 22 Provision for Income Taxes | $1.09 | $0.84 | $2.06 | $0.58 | $0.58 | $0.57 | $0.40 | $0.34 | $0.31 | $0.22 | . 23 Income from Continuing Operations | $4.87 | $4.00 | $2.34 | $2.14 | $2.55 | $2.42 | $1.89 | $1.42 | $1.06 | $0.53 | . 24 Income Attributable to Minority Interest | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | . 25 Preferred Stock Dividend | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | . 26 Net Income | $4.87 | $4.00 | $2.34 | $2.14 | $2.55 | $2.42 | $1.89 | $1.42 | $1.06 | $0.53 | . 27 Normalized Income | $4.27 | $4.35 | $2.37 | $2.94 | $2.57 | $2.43 | $1.92 | $1.43 | $1.06 | $0.54 | . 28 EBITDA | $6.87 | $5.53 | $5.02 | $3.23 | $3.56 | $3.29 | $2.50 | $1.89 | $1.45 | $0.83 | . 29 Reconciled Depreciation | $0.64 | $0.43 | $0.36 | $0.31 | $0.27 | $0.21 | $0.12 | $0.07 | $0.05 | $0.05 | . 30 EBIT | $6.22 | $5.10 | $4.65 | $2.92 | $3.29 | $3.08 | $2.38 | $1.82 | $1.40 | $0.78 | . Balance Sheet . #collapse-hide balance = booking_df_list[1][1] balance_table = balance.drop_duplicates(keep=False) balance_table[balance_table.columns] . . Year 12/1/2019 12/1/2018 12/1/2017 12/1/2016 12/1/2015 12/1/2014 12/1/2013 12/1/2012 12/1/2011 12/1/2010 . 0 Cash and Equivalents | $6.31 | $2.62 | $2.54 | $2.08 | $1.48 | $3.15 | $1.29 | $1.54 | $0.63 | $0.36 | | . 1 Short Term Investments | $1.00 | $3.66 | $4.86 | $2.22 | $1.17 | $1.14 | $5.46 | $3.65 | $2.03 | $1.30 | | . 2 Cash and Short Term Investments | $7.31 | $6.28 | $7.40 | $4.30 | $2.65 | $4.29 | $6.75 | $5.18 | $2.66 | $1.66 | | . 3 Accounts Receivable | $1.68 | $1.52 | $1.22 | $0.86 | $0.65 | $0.64 | $0.54 | $0.37 | $0.26 | $0.16 | | . 4 Total Receivables | $1.68 | $1.52 | $1.22 | $0.86 | $0.65 | $0.64 | $0.54 | $0.37 | $0.26 | $0.16 | | . 5 Prepaid Expenses | $0.84 | $0.60 | $0.42 | $0.24 | $0.26 | $0.18 | $0.11 | $0.08 | $0.10 | $0.06 | | . 6 Restricted Cash | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.01 | $0.01 | $0.00 | $0.00 | | . 7 Current Deferred Tax Assets | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.07 | $0.04 | $0.04 | $0.07 | | . 8 Other Current Assets | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 9 Total Current Assets | $9.83 | $8.41 | $9.04 | $5.40 | $3.55 | $5.11 | $7.48 | $5.68 | $3.07 | $1.96 | | . 10 Properties | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 11 Machine, Furniture &amp; Equipment | $1.24 | $1.02 | $0.82 | $0.56 | $0.43 | $0.44 | $0.31 | $0.23 | $0.18 | $0.13 | | . 12 Other Properties | $0.62 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 13 Construction in Progress | $0.16 | $0.09 | $0.01 | $0.01 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 14 Leases | $0.27 | $0.24 | $0.20 | $0.14 | $0.11 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 15 Gross PP&amp;E | $2.29 | $1.35 | $1.02 | $0.71 | $0.54 | $0.44 | $0.31 | $0.23 | $0.18 | $0.13 | | . 16 Accumulated D&amp;A | -$0.93 | -$0.69 | -$0.54 | -$0.36 | -$0.26 | -$0.24 | -$0.18 | -$0.14 | -$0.11 | -$0.09 | | . 17 Net PP&amp;E | $1.36 | $0.66 | $0.48 | $0.35 | $0.27 | $0.20 | $0.14 | $0.09 | $0.06 | $0.04 | | . 18 Goodwill | $2.91 | $2.91 | $2.74 | $2.40 | $3.38 | $3.33 | $1.77 | $0.52 | $0.50 | $0.51 | | . 19 Other Intangible Assets | $1.95 | $2.13 | $2.18 | $1.99 | $2.17 | $2.34 | $1.02 | $0.21 | $0.20 | $0.23 | | . 20 Goodwill and Intangibles | $4.87 | $5.04 | $4.92 | $4.39 | $5.54 | $5.66 | $2.79 | $0.73 | $0.70 | $0.74 | | . 21 Long Term Investments | $4.48 | $8.41 | $10.87 | $9.59 | $7.93 | $3.76 | $0.00 | $0.00 | $0.00 | $0.00 | | . 22 Long Term Deferred Assets | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.02 | $0.06 | $0.12 | $0.15 | | . 23 Other Long Term Assets | $0.87 | $0.18 | $0.15 | $0.11 | $0.12 | $0.04 | $0.01 | $0.01 | $0.01 | $0.01 | | . 24 Total Long Term Assets | $11.57 | $14.28 | $16.42 | $14.44 | $13.87 | $9.66 | $2.96 | $0.89 | $0.90 | $0.95 | | . 25 Total Assets | $21.40 | $22.69 | $25.45 | $19.84 | $17.42 | $14.77 | $10.44 | $6.57 | $3.97 | $2.91 | | . 26 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 27 Liabilities (Annual) | 12/1/2019 | 12/1/2018 | 12/1/2017 | 12/1/2016 | 12/1/2015 | 12/1/2014 | 12/1/2013 | 12/1/2012 | 12/1/2011 | 12/1/2010 | | . 28 Accounts Payable | $1.24 | $1.13 | $0.67 | $0.42 | $0.32 | $0.28 | $0.25 | $0.18 | $0.15 | $0.09 | | . 29 Total Payables | $1.24 | $1.13 | $0.67 | $0.42 | $0.32 | $0.28 | $0.25 | $0.18 | $0.15 | $0.09 | | . 30 Accrued Expenses | $1.58 | $1.40 | $1.14 | $0.86 | $0.68 | $0.60 | $0.55 | $0.39 | $0.22 | $0.24 | | . 31 Payables and Accrued Expenses | $2.82 | $2.53 | $1.81 | $1.28 | $1.00 | $0.88 | $0.79 | $0.57 | $0.37 | $0.33 | | . 32 Other Current Borrowings | $0.99 | $0.00 | $0.71 | $0.97 | $0.00 | $0.04 | $0.15 | $0.52 | $0.50 | $0.00 | | . 33 Current Portion of Long Term Debt | $0.99 | $0.00 | $0.71 | $0.97 | $0.00 | $0.04 | $0.15 | $0.52 | $0.50 | $0.00 | | . 34 Current Debt &amp; Capital Lease Obligation | $0.99 | $0.00 | $0.71 | $0.97 | $0.00 | $0.04 | $0.15 | $0.52 | $0.50 | $0.00 | | . 35 Current Deferred Revenue | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 36 Current Deferred Liabilities | $1.56 | $1.02 | $0.98 | $0.61 | $0.43 | $0.46 | $0.44 | $0.37 | $0.24 | $0.14 | | . 37 Other Current Liability | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 38 Total Current Liabilities | $5.37 | $3.56 | $3.50 | $2.86 | $1.44 | $1.38 | $1.38 | $1.46 | $1.11 | $0.47 | | . 39 Non-Current Portion of Long Term Debt | $7.64 | $8.65 | $8.81 | $6.20 | $6.16 | $3.82 | $1.75 | $0.94 | $0.08 | $0.48 | | . 40 Long Term Cap Lease Obligation | $0.46 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 41 Non-Current Portion of LTD and Capital Lease O... | $8.10 | $8.65 | $8.81 | $6.20 | $6.16 | $3.82 | $1.75 | $0.94 | $0.08 | $0.48 | | . 42 Long Term Deferred Tax Liabilities | $1.90 | $1.54 | $1.73 | $0.82 | $0.89 | $0.90 | $0.33 | $0.05 | $0.05 | $0.06 | | . 43 Non-Current Deferred Liabilities | $1.90 | $1.54 | $1.73 | $0.82 | $0.89 | $0.90 | $0.33 | $0.05 | $0.05 | $0.06 | | . 44 Minority Interest Ownership | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.05 | | . 45 Preferred Securities out of Shareholders Equity | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.16 | $0.13 | $0.00 | | . 46 Other Long Term Liabilities | $0.10 | $0.16 | $0.15 | $0.14 | $0.13 | $0.10 | $0.08 | $0.07 | $0.04 | $0.04 | | . 47 Total Long Term Liabilities | $10.10 | $10.35 | $10.69 | $7.16 | $7.19 | $4.83 | $2.15 | $1.21 | $0.29 | $0.58 | | . 48 Total Liabilities | $15.47 | $13.90 | $14.19 | $10.02 | $8.63 | $6.20 | $3.54 | $2.67 | $1.40 | $1.05 | | . Cash Flows . #collapse-hide cash = booking_df_list[2][1] cash_table = cash.drop_duplicates(keep=False) cash_table[cash_table.columns] . . Year 2019-12 2018-12 2017-12 2016-12 2015-12 2014-12 2013-12 2012-12 2011-12 2010-12 . 0 Net Income | $4.87 | $4.00 | $2.34 | $2.14 | $2.55 | $2.42 | $1.89 | $1.42 | $1.06 | $0.53 | | . 1 Gain and Loss on Sale of PPE | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 2 Earnings Loss from Eq. Investments | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 3 Operating Gains Losses | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.01 | $0.03 | $0.00 | $0.00 | $0.01 | | . 4 Depreciation Expense | $0.64 | $0.43 | $0.36 | $0.14 | $0.10 | $0.08 | $0.05 | $0.03 | $0.02 | $0.02 | | . 5 Amortization Expense CF | $0.00 | $0.00 | $0.00 | $0.17 | $0.17 | $0.13 | $0.07 | $0.03 | $0.03 | $0.03 | | . 6 Total Depreciation and Amortization | $0.64 | $0.43 | $0.36 | $0.31 | $0.27 | $0.21 | $0.12 | $0.07 | $0.05 | $0.05 | | . 7 Total Depreciation, Amortization, Depletion | $0.64 | $0.43 | $0.36 | $0.31 | $0.27 | $0.21 | $0.12 | $0.07 | $0.05 | $0.05 | | . 8 Deferred Taxes | $0.12 | -$0.15 | -$0.03 | -$0.11 | -$0.06 | $0.03 | -$0.01 | $0.02 | $0.04 | $0.04 | | . 9 Amortization of Securities | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 10 Asset Impairment Charge | $0.00 | $0.00 | $0.00 | $1.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 11 Unrealized Gain (Loss) on Investment Securities | -$0.75 | $0.37 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 12 Stock Based Compensation | $0.33 | $0.33 | $0.26 | $0.25 | $0.25 | $0.19 | $0.14 | $0.07 | $0.07 | $0.07 | | . 13 Excess Tax Benefit from Stock Compensation | $0.00 | $0.00 | $0.00 | $0.06 | $0.10 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 14 Other Noncash Items | $0.06 | $0.06 | $0.08 | $0.08 | $0.07 | $0.06 | $0.06 | $0.05 | $0.02 | $0.02 | | . 15 Change in Receivables | -$0.32 | -$0.32 | -$0.27 | -$0.28 | -$0.07 | -$0.18 | -$0.11 | -$0.11 | -$0.13 | -$0.03 | | . 16 Change in Prepaid Assets | -$0.26 | -$0.20 | -$0.12 | $0.01 | -$0.08 | -$0.05 | -$0.01 | -$0.04 | $0.01 | -$0.02 | | . 17 Change in Payables and Accrued Expense | $0.48 | $0.64 | $0.69 | $0.51 | $0.17 | $0.20 | $0.18 | $0.26 | $0.21 | $0.08 | | . 18 Change in Other Current Assets | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 19 Change in Other Current Liabilities | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 20 Change in Other Working Cap | -$0.43 | $0.03 | $1.30 | -$0.02 | -$0.02 | $0.00 | -$0.01 | $0.03 | -$0.01 | $0.02 | | . 21 Changes in Working Capital | -$0.54 | $0.14 | $1.59 | $0.21 | -$0.01 | -$0.03 | $0.05 | $0.14 | $0.08 | $0.05 | | . 22 Cash from Operations | $4.87 | $5.34 | $4.66 | $3.98 | $3.20 | $2.91 | $2.30 | $1.79 | $1.34 | $0.78 | | . 24 Cash Flow - Investing (Annual) | 12/1/2019 | 12/1/2018 | 12/1/2017 | 12/1/2016 | 12/1/2015 | 12/1/2014 | 12/1/2013 | 12/1/2012 | 12/1/2011 | 12/1/2010 | | . 25 Net Change in Capital Expenditures | -$0.37 | -$0.44 | -$0.29 | -$0.27 | -$0.17 | -$0.13 | -$0.08 | -$0.06 | -$0.05 | -$0.02 | | . 26 Sale of PPE | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 27 Net Change in PP&amp;E | -$0.37 | -$0.44 | -$0.29 | -$0.22 | -$0.17 | -$0.13 | -$0.08 | -$0.06 | -$0.05 | -$0.02 | | . 28 Net Change in Intangibles | $0.00 | $0.00 | $0.00 | -$0.05 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 29 Net Divestitures (Acquisitions) | -$0.01 | -$0.27 | -$0.55 | $0.00 | -$0.14 | -$2.50 | -$0.33 | -$0.03 | -$0.07 | -$0.11 | | . 30 Total Net Change in Investments | $7.43 | $2.93 | -$3.36 | -$3.06 | -$3.58 | $0.27 | -$1.74 | -$1.47 | -$0.79 | -$0.71 | | . 31 Net Other Investing Changes | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 32 Cash from Investing | $7.05 | $2.22 | -$4.20 | -$3.33 | -$3.90 | -$2.36 | -$2.16 | -$1.56 | -$0.90 | -$0.84 | | . 34 Cash Flow - Financing (Annual) | 12/1/2019 | 12/1/2018 | 12/1/2017 | 12/1/2016 | 12/1/2015 | 12/1/2014 | 12/1/2013 | 12/1/2012 | 12/1/2011 | 12/1/2010 | | . 35 Net Change in Long Term Debt | -$0.03 | -$1.46 | $1.76 | $1.00 | $2.25 | $2.14 | $0.56 | $1.00 | $0.00 | $0.28 | | . 36 Net Change in Short Term Debt | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 37 Net Debt Issuance | -$0.03 | -$1.46 | $1.76 | $1.00 | $2.25 | $2.14 | $0.56 | $1.00 | $0.00 | $0.28 | | . 38 Common Stock Issuance | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 39 Common Stock Payments | -$8.19 | -$5.97 | -$1.83 | -$1.01 | -$3.09 | -$0.75 | -$0.88 | -$0.26 | -$0.16 | -$0.13 | | . 40 Net Common Equity Issued (Purchased) | -$8.19 | -$5.97 | -$1.83 | -$1.01 | -$3.09 | -$0.75 | -$0.88 | -$0.26 | -$0.16 | -$0.13 | | . 41 Proceeds from Stock Option Exercised | $0.00 | $0.00 | $0.00 | $0.02 | $0.02 | $0.02 | $0.09 | $0.00 | $0.00 | $0.03 | | . 42 Cash from Other Financing Activities | -$0.01 | $0.00 | -$0.01 | $0.00 | -$0.01 | $0.02 | -$0.18 | -$0.08 | $0.01 | $0.04 | | . 43 Cash from Financing | -$8.22 | -$7.43 | -$0.08 | $0.00 | -$0.83 | $1.43 | -$0.40 | $0.67 | -$0.15 | $0.21 | | . 45 Ending Cash (Annual) | 12/1/2019 | 12/1/2018 | 12/1/2017 | 12/1/2016 | 12/1/2015 | 12/1/2014 | 12/1/2013 | 12/1/2012 | 12/1/2011 | 12/1/2010 | | . 46 Beginning Cash | $2.65 | $2.56 | $2.08 | $1.48 | $3.15 | $1.30 | $1.54 | $0.63 | $0.36 | $0.20 | | . 47 Change in Cash | $3.70 | $0.12 | $0.38 | $0.65 | -$1.52 | $1.99 | -$0.26 | $0.89 | $0.29 | $0.15 | | . 48 Cash Foreign Exchange Adjustment | -$0.01 | -$0.04 | $0.10 | -$0.05 | -$0.15 | -$0.14 | $0.02 | $0.01 | -$0.01 | $0.01 | | . 49 Ending Cash | $6.33 | $2.65 | $2.56 | $2.08 | $1.48 | $3.15 | $1.29 | $1.54 | $0.63 | $0.36 | | . 51 Additional Items (Annual) | 12/1/2019 | 12/1/2018 | 12/1/2017 | 12/1/2016 | 12/1/2015 | 12/1/2014 | 12/1/2013 | 12/1/2012 | 12/1/2011 | 12/1/2010 | | . 52 Issuance of Capital Stock | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | $0.00 | | . 53 Issuance of Debt | $0.40 | $0.03 | $2.05 | $1.00 | $2.62 | $3.26 | $0.98 | $1.00 | $0.00 | $0.58 | | . 54 Debt Repayment | -$0.43 | -$1.49 | -$0.29 | $0.00 | -$0.37 | -$1.12 | -$0.41 | $0.00 | $0.00 | -$0.30 | | . 55 Repurchase of Capital Stock | -$8.19 | -$5.97 | -$1.83 | -$1.01 | -$3.09 | -$0.75 | -$0.88 | -$0.26 | -$0.16 | -$0.13 | | . 56 Income Tax Paid Supplemental Data | $1.07 | $1.17 | $0.70 | $0.64 | $0.53 | $0.49 | $0.39 | $0.30 | $0.23 | $0.17 | | . 57 Interest Paid Supplemental Data | $0.22 | $0.22 | $0.16 | $0.13 | $0.05 | $0.02 | $0.02 | $0.01 | $0.01 | $0.00 | | . Financial Analysis . Earnings Base Growth Rates . #collapse-hide income_g = booking_df_list[3][1] income_g_table = income_g cleaned = income_g_table[income_g_table.columns][:10] cleaned.columns cleaned . . Year Revenue Gross Profit Net Income EBITDA Revenue Growth AVG Revenue Growth Gross Profit Growth AVG Gross Profit Growth Net Income Growth AVG Net Income Growth EBITDA Growth AVG EBITDA Growth . 0 12/1/2019 | 15.07 | | 4.865 | 6.865 | 3.72% | 19.72% | | 31.50% | 21.69% | 31.89% | 24.14% | 28.70% | . 1 12/1/2018 | 14.53 | | 3.998 | 5.53 | 14.59% | 19.72% | | 31.50% | 70.78% | 31.89% | 10.25% | 28.70% | . 2 12/1/2017 | 12.68 | 12.44 | 2.341 | 5.016 | 18.06% | 19.72% | 20.43% | 31.50% | 9.65% | 31.89% | 55.29% | 28.70% | . 3 12/1/2016 | 10.74 | 10.33 | 2.135 | 3.23 | 16.44% | 19.72% | 20.23% | 31.50% | -16.31% | 31.89% | -9.30% | 28.70% | . 4 12/1/2015 | 9.224 | 8.592 | 2.551 | 3.561 | 9.26% | 19.72% | 13.29% | 31.50% | 5.33% | 31.89% | 8.37% | 28.70% | . 5 12/1/2014 | 8.442 | 7.584 | 2.422 | 3.286 | 24.27% | 19.72% | 32.68% | 31.50% | 27.95% | 31.89% | 31.55% | 28.70% | . 6 12/1/2013 | 6.793 | 5.716 | 1.893 | 2.498 | 29.12% | 19.72% | 39.96% | 31.50% | 33.31% | 31.89% | 32.24% | 28.70% | . 7 12/1/2012 | 5.261 | 4.084 | 1.42 | 1.889 | 20.78% | 19.72% | 32.60% | 31.50% | 34.47% | 31.89% | 30.01% | 28.70% | . 8 12/1/2011 | 4.356 | 3.08 | 1.056 | 1.453 | 41.20% | 19.72% | 61.34% | 31.50% | 100.17% | 31.89% | 75.76% | 28.70% | . 9 12/1/2010 | 3.085 | 1.909 | 0.52754 | 0.82669 | #DIV/0! | | | | #DIV/0! | | #DIV/0! | | . #collapse-hide columns = [&#39;Year&#39;,&#39;Revenue Growth&#39;, &#39;AVG Revenue Growth&#39;, &#39;Gross Profit Growth&#39;, &#39;AVG Gross Profit Growth&#39;, &#39;Net Income Growth&#39;, &#39;AVG Net Income Growth&#39;, &#39;EBITDA Growth&#39;, &#39;AVG EBITDA Growth&#39;] cleaned[columns] . . Year Revenue Growth AVG Revenue Growth Gross Profit Growth AVG Gross Profit Growth Net Income Growth AVG Net Income Growth EBITDA Growth AVG EBITDA Growth . 0 12/1/2019 | 3.72% | 19.72% | | 31.50% | 21.69% | 31.89% | 24.14% | 28.70% | . 1 12/1/2018 | 14.59% | 19.72% | | 31.50% | 70.78% | 31.89% | 10.25% | 28.70% | . 2 12/1/2017 | 18.06% | 19.72% | 20.43% | 31.50% | 9.65% | 31.89% | 55.29% | 28.70% | . 3 12/1/2016 | 16.44% | 19.72% | 20.23% | 31.50% | -16.31% | 31.89% | -9.30% | 28.70% | . 4 12/1/2015 | 9.26% | 19.72% | 13.29% | 31.50% | 5.33% | 31.89% | 8.37% | 28.70% | . 5 12/1/2014 | 24.27% | 19.72% | 32.68% | 31.50% | 27.95% | 31.89% | 31.55% | 28.70% | . 6 12/1/2013 | 29.12% | 19.72% | 39.96% | 31.50% | 33.31% | 31.89% | 32.24% | 28.70% | . 7 12/1/2012 | 20.78% | 19.72% | 32.60% | 31.50% | 34.47% | 31.89% | 30.01% | 28.70% | . 8 12/1/2011 | 41.20% | 19.72% | 61.34% | 31.50% | 100.17% | 31.89% | 75.76% | 28.70% | . 9 12/1/2010 | #DIV/0! | | | | #DIV/0! | | #DIV/0! | | . Earnings Base Historical Growth Rates . #collapse-hide # select a point for which to provide details-on-demand # label = alt.selection_single( # encodings=[&#39;x&#39;], # limit selection to x-axis value # on=&#39;mouseover&#39;, # select on mouseover events # nearest=True, # select data point nearest the cursor # empty=&#39;none&#39; # empty selection includes no data points # ) label = alt.selection_multi(fields=[&#39;Metric&#39;], bind=&#39;legend&#39;, on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;Year:T&#39;), alt.Y(&#39;Value:Q&#39;) , color = alt.Color(&#39;Metric:N&#39;, legend=alt.Legend(labelFontSize=15, titleFontSize=17), scale=alt.Scale(scheme=&#39;tableau20&#39;)) # alt.Color(&#39;Metric:N&#39;), opacity = alt.condition(label, alt.value(1), alt.value(0.5)) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;Year:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;Value:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;Value:Q&#39; ).transform_filter(label), data=df ).properties( width=700, height=400 ) . . Earnings Base Historical Growth in Growth Rates (Natural Log) . #collapse-hide #Take natural logs df[&#39;log Value&#39;] = np.around(np.log(df[&#39;Value&#39;]), 4) # select a point for which to provide details-on-demand label = alt.selection_multi(fields=[&#39;Metric&#39;], bind=&#39;legend&#39;, on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;Year:T&#39;), alt.Y(&#39;log Value:Q&#39;), color = alt.Color(&#39;Metric:N&#39;, legend=alt.Legend(title=&quot;Log Growth Rate&quot;, labelFontSize=15, titleFontSize=17), scale=alt.Scale(scheme=&#39;tableau20&#39;)) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;Year:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), data=df ).properties( width=700, height=400 ) . . /usr/local/lib/python3.6/dist-packages/pandas/core/series.py:679: RuntimeWarning: invalid value encountered in log result = getattr(ufunc, method)(*inputs, **kwargs) . Costs Strucutres over Time . #collapse-hide columns = [&#39;Year&#39;, &#39;Operating Revenue&#39;, &#39;Total Operating Expenses&#39;, &#39;Operating Income&#39;] cleaned = cleaned[columns] cleaned . . Year Operating Revenue Total Operating Expenses Operating Income . 11 12/1/2019 | $15.07 | $9.72 | $5.35 | . 12 12/1/2018 | $14.53 | $9.19 | $5.34 | . 13 12/1/2017 | $12.68 | $7.90 | $4.54 | . 14 12/1/2016 | $10.74 | $6.48 | $3.85 | . 15 12/1/2015 | $9.22 | $5.33 | $3.26 | . 16 12/1/2014 | $8.44 | $4.51 | $3.07 | . 17 12/1/2013 | $6.79 | $3.30 | $2.41 | . 18 12/1/2012 | $5.26 | $2.25 | $1.83 | . 19 12/1/2011 | $4.36 | $1.68 | $1.40 | . 20 12/1/2010 | $3.09 | $1.12 | $0.79 | . #collapse-hide # select a point for which to provide details-on-demand # label = alt.selection_single( # encodings=[&#39;x&#39;], # limit selection to x-axis value # on=&#39;mouseover&#39;, # select on mouseover events # nearest=True, # select data point nearest the cursor # empty=&#39;none&#39; # empty selection includes no data points # ) label = alt.selection_multi(fields=[&#39;Metric&#39;], bind=&#39;legend&#39;, on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;Year:T&#39;), alt.Y(&#39;Value:Q&#39;) , color = alt.Color(&#39;Metric:N&#39;, legend=alt.Legend(labelFontSize=15, titleFontSize=17), scale=alt.Scale(scheme=&#39;tableau20&#39;)) # alt.Color(&#39;Metric:N&#39;), opacity = alt.condition(label, alt.value(1), alt.value(0.5)) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;Year:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;Value:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;Value:Q&#39; ).transform_filter(label), data=df ).properties( width=700, height=400 ) . . #collapse-hide #Take natural logs df[&#39;log Value&#39;] = np.around(np.log(df[&#39;Value&#39;]), 4) # select a point for which to provide details-on-demand label = alt.selection_multi(fields=[&#39;Metric&#39;], bind=&#39;legend&#39;, on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;Year:T&#39;), alt.Y(&#39;log Value:Q&#39;), color = alt.Color(&#39;Metric:N&#39;, legend=alt.Legend(title=&quot;Growth Rate&quot;, labelFontSize=15, titleFontSize=17), scale=alt.Scale(scheme=&#39;tableau20&#39;)) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;Year:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), data=df ).properties( width=700, height=400 ) . . Balance Sheet Trends . Balance Sheet Historical Growth Rates . #collapse-hide cleaned . . Year Cash and Equivalents Total Liabilities Total Assets Liabilities/Assets . 0 12/1/2019 | 6.312 | 15.47 | 21.4 | 0.722897 | . 1 12/1/2018 | 2.624 | 13.9 | 22.69 | 0.612605 | . 2 12/1/2017 | 2.542 | 14.19 | 25.45 | 0.557564 | . 3 12/1/2016 | 2.081 | 10.02 | 19.84 | 0.50504 | . 4 12/1/2015 | 1.477 | 8.625 | 17.42 | 0.495121 | . 5 12/1/2014 | 3.149 | 6.204 | 14.77 | 0.420041 | . 6 12/1/2013 | 1.29 | 3.535 | 10.44 | 0.338602 | . 7 12/1/2012 | 1.536 | 2.673 | 6.57 | 0.406849 | . 8 12/1/2011 | 0.63284 | 1.396 | 3.971 | 0.351549 | . 9 12/1/2010 | 0.35897 | 1.047 | 2.906 | 0.360289 | . #collapse-hide #Take natural logs df[&#39;log Value&#39;] = np.around(np.log(df[&#39;Value&#39;]), 4) # df[&#39;log Value&#39;] = np.around(np.log(df[&#39;log&#39;]), 4) # select a point for which to provide details-on-demand label = alt.selection_multi(fields=[&#39;Metric&#39;], bind=&#39;legend&#39;, on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;Year:T&#39;), alt.Y(&#39;log Value:Q&#39;), color = alt.Color(&#39;Metric:N&#39;, legend=alt.Legend(title=&quot;Growth Rate&quot;, labelFontSize=15, titleFontSize=17), scale=alt.Scale(scheme=&#39;tableau20&#39;)) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;Year:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), data=df ).properties( width=700, height=400 ) . . Balance Sheet Historical Growth in Growth Rates . #collapse-hide #Take natural logs df[&#39;log&#39;] = np.around(np.log(df[&#39;Value&#39;]), 4) # df[&#39;log Value&#39;] = np.around(np.log(df[&#39;log&#39;]), 4) # select a point for which to provide details-on-demand label = alt.selection_multi(fields=[&#39;Metric&#39;], bind=&#39;legend&#39;, on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;Year:T&#39;), alt.Y(&#39;log Value:Q&#39;), color = alt.Color(&#39;Metric:N&#39;, legend=alt.Legend(title=&quot;Log Growth Rate&quot;, labelFontSize=15, titleFontSize=17), scale=alt.Scale(scheme=&#39;tableau20&#39;)) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;Year:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), data=df ).properties( width=700, height=400 ) . . #collapse-hide #Take natural logs df[&#39;log&#39;] = np.around(np.log(df[&#39;Value&#39;]), 4) df[&#39;log Value&#39;] = np.around(np.log(df[&#39;log&#39;]), 4) # select a point for which to provide details-on-demand label = alt.selection_multi(fields=[&#39;Metric&#39;], bind=&#39;legend&#39;, on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;Year:T&#39;), alt.Y(&#39;log Value:Q&#39;), color = alt.Color(&#39;Metric:N&#39;, legend=alt.Legend(title=&quot;Log Growth Rate&quot;, labelFontSize=15, titleFontSize=17), scale=alt.Scale(scheme=&#39;tableau20&#39;)) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;Year:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;log Value:Q&#39; ).transform_filter(label), data=df ).properties( width=700, height=400 ) . . /usr/local/lib/python3.6/dist-packages/pandas/core/series.py:679: RuntimeWarning: invalid value encountered in log result = getattr(ufunc, method)(*inputs, **kwargs) . DCF Valuation . Model Choice . We chose a n-period FCFF so we could model special situations such as the current slowdown and value the firm at a longer time period. . #collapse-hide inputs = FCFF_inputs_outputs[:26][[&#39;Current Inputs&#39;, &#39;($ in Billions)&#39;]] inputs[&#39;Current Inputs&#39;] = inputs[&#39;Current Inputs&#39;].str.rstrip(&#39;=&#39;) inputs.set_index(&quot;Current Inputs&quot;) outputs = FCFF_inputs_outputs[:5][[ &#39;Year&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;10&#39;]].transpose() outputs.columns = (outputs.iloc[0]) outputs.drop(outputs.index[0], inplace=True) # outputs . . Inputs . #collapse-hide inputs . . Current Inputs ($ in Billions) . 0 Enter the current revenues of the firm | $ 15.0700 | . 1 Enter current capital invested in the firm | $ 36.8700 | . 2 Enter the current depreciation | $ 0.6410 | . 3 Enter the current capital expenditures for the... | $ 0.2730 | . 4 Enter the change in Working Capital in last year | $ (0.4330) | . 5 Enter the value of current debt outstanding | $ 15.4700 | . 6 Enter the number of shares outstanding | $ 0.0411 | . 7 | | . 8 High Growth Period | | . 9 Enter the growth rate after 5 years | 15.00% | . 10 What will all operating expenses be as a % of ... | 60.46% | . 11 How much debt do you plan to use in financing ... | 29% | . 12 Enter the growth rate in capital expenditures ... | 27.11% | . 13 Enter working capital as a percent of revenues | 39.35% | . 14 Enter the tax rate that you have on corporate ... | 18.00% | . 15 What beta do you want to use to calculate cost... | 1.28 | . 16 Enter the current long term bond rate | 0.64% | . 17 Enter the market risk premium you want to use | 5.70% | . 18 Enter your cost of borrowing money | 1.77% | . 19 Stable Period | | . 20 Enter the growth rate in revenues | 2.00% | . 21 Enter operating expenses as a % of revenues in... | 64.51% | . 22 Enter capital expenditures as a percent of dep... | 42.59% | . 23 How much debt do you plan to use in financing ... | 27% | . 24 Enter interest rate of debt in stable period | 1.70% | . 25 What beta do you want to use in the stable per... | 1.28 | . Output and Forecasts . #collapse-hide marketD price = marketD.iloc[1][&#39;Value&#39;] print(price) outputs[&#39;Current Price&#39;] = price outputs . . 1,271.630 . Year Value of Firm $ Value of Debt Shares outstanding Firm Value Per Share Equity Value Per Share Current Price . 1 131.738 | 38.125 | 0.041 | 3,208.269 | 2279.8 | 1,271.630 | . 2 133.75 | 38.707 | 0.041 | 3,257.263 | 2314.61 | 1,271.630 | . 3 139.41 | 40.345 | 0.041 | 3,395.110 | 2412.57 | 1,271.630 | . 4 144.815 | 41.909 | 0.041 | 3,526.748 | 2506.11 | 1,271.630 | . 5 149.864 | 43.37 | 0.041 | 3,649.696 | 2593.48 | 1,271.630 | . 6 154.451 | 44.131 | 0.041 | 3,761.405 | 2686.65 | 1,271.630 | . 7 158.496 | 44.706 | 0.041 | 3,859.911 | 2771.17 | 1,271.630 | . 8 162.119 | 45.133 | 0.041 | 3,948.152 | 2849 | 1,271.630 | . 9 165.437 | 45.451 | 0.041 | 4,028.964 | 2922.09 | 1,271.630 | . 10 168.648 | 45.714 | 0.041 | 4,107.162 | 2993.87 | 1,271.630 | . #collapse-hide estimated_cash_flows . . Year 0 1 2 3 4 5 6 7 8 9 10 . 0 Growth in Revenue | | -60.00% | 22.80% | 20.20% | 17.60% | 15.00% | 12.40% | 9.80% | 7.20% | 4.60% | 2.00% | | . 1 Growth in Deprec&#39;n | | 27.11% | 27.11% | 27.11% | 27.11% | 27.11% | 27.11% | 17.06% | 12.04% | 7.02% | 2.00% | | . 2 Revenues | 15.07 | 6.028 | 7.40238 | 8.89767 | 10.4636 | 12.0332 | 13.5253 | 14.8508 | 15.9201 | 16.6524 | 16.9854 | | . 3 Operating Expenses | | | | | | | | | | | | | . 4 % of Revenues | 60.46% | 60.46% | 60.46% | 60.46% | 60.46% | 60.46% | 61.27% | 62.08% | 62.89% | 63.70% | 64.51% | | . 5 - $ Operating Expenses | 9.112 | 3.6448 | 4.47581 | 5.37993 | 6.3268 | 7.27582 | 8.28733 | 9.21952 | 10.012 | 10.6071 | 10.9566 | | . 6 EBIT | 5.958 | 2.3832 | 2.92657 | 3.51774 | 4.13686 | 4.75739 | 5.23799 | 5.63128 | 5.90806 | 6.04525 | 6.02887 | | . 7 Tax Rate | 18.00% | 18.00% | 18.00% | 18.00% | 18.00% | 18.00% | 18.00% | 18.00% | 18.00% | 18.00% | 18.00% | | . 8 | | | | | | | | | | | | | . 9 EBIT (1-t) | 4.88556 | 1.95422 | 2.39979 | 2.88454 | 3.39222 | 3.90106 | 4.29515 | 4.61765 | 4.84461 | 4.9571 | 4.94367 | | . 10 + Depreciation | 0.641 | 0.81475 | 1.0356 | 1.31631 | 1.67311 | 2.12663 | 2.70308 | 3.16433 | 3.54539 | 3.79432 | 3.87021 | | . 11 - Capital Expenditures | 0.273 | 0.347 | 0.44106 | 0.56061 | 0.71257 | 0.90573 | 1.05424 | 1.20276 | 1.35128 | 1.49979 | 1.64831 | | . 12 - Change in WC | -0.433 | -3.558 | 0.54082 | 0.58839 | 0.61621 | 0.61761 | 0.58714 | 0.52157 | 0.42075 | 0.28817 | 0.13105 | | . 13 = FCFF | 5.68656 | 5.97997 | 2.45351 | 3.05185 | 3.73655 | 4.50435 | 5.35684 | 6.05765 | 6.61798 | 6.96346 | 7.03452 | | . 14 Terminal Value | | | | | | | | | | | 172.021 | 4.17% | . #collapse-hide cost_of_equityNcapital . . Year 1 2 3 4 5 6 7 8 9 10 . 0 Cost of Equity | 7.95% | 7.95% | 7.95% | 7.95% | 7.95% | 7.95% | 7.95% | 7.95% | 7.95% | 7.95% | . 1 Proportion of Equity | 71.06% | 71.06% | 71.06% | 71.06% | 71.06% | 71.43% | 71.79% | 72.16% | 72.53% | 72.89% | . 2 After-tax Cost of Debt | 1.45% | 1.45% | 1.45% | 1.45% | 1.45% | 1.44% | 1.43% | 1.42% | 1.40% | 1.39% | . 3 Proportion of Debt | 28.94% | 28.94% | 28.94% | 28.94% | 28.94% | 28.57% | 28.21% | 27.84% | 27.47% | 27.11% | . 4 Cost of Capital | 6.07% | 6.07% | 6.07% | 6.07% | 6.07% | 6.09% | 6.11% | 6.13% | 6.15% | 6.17% | . 5 Cumulative WACC | 106.07% | 112.50% | 119.33% | 126.56% | 134.24% | 142.41% | 151.11% | 160.37% | 170.24% | 180.74% | . 6 Present Value | 5.63795 | 2.18088 | 2.55759 | 2.95229 | 3.35539 | 3.76146 | 4.0087 | 4.12659 | 4.09045 | 99.0666 | . 7 Terminal Value | | | | | | | | | | | . Economic Value Added (EVA) FCFF . #collapse-hide EVA_output[:8] . . Year 0 1 2 3 4 5 6 7 8 9 10 Terminal Year . 0 EBIT (1-t) | $ 4.88556 | $ 1.95422 | $ 2.39979 | $ 2.88454 | $ 3.39222 | $ 3.90106 | $ 4.29515 | $ 4.61765 | $ 4.84461 | $ 4.95710 | $ 4.94367 | $ 5.04255 | | . 1 - WACC (CI) | | $ 2.23668 | $ 1.99246 | $ 1.98920 | $ 1.97905 | $ 1.95817 | $ 1.92815 | $ 1.86991 | $ 1.78807 | $ 1.68514 | $ 1.56710 | $ (6.58045) | | . 2 EVA | | $ (0.28246) | $ 0.40732 | $ 0.89534 | $ 1.41317 | $ 1.94289 | $ 2.36700 | $ 2.74774 | $ 3.05655 | $ 3.27196 | $ 3.37657 | $ 11.62300 | | . 3 Terminal EVA | | | | | | | | | | | $ 278.65432 | | | . 4 PV | | $ (0.26630) | $ 0.36206 | $ 0.75033 | $ 1.11656 | $ 1.44730 | $ 1.66206 | $ 1.81834 | $ 1.90588 | $ 1.92200 | $ 156.03997 | | | . 5 WACC | | 6.07% | 6.07% | 6.07% | 6.07% | 6.07% | 6.09% | 6.11% | 6.13% | 6.15% | 6.17% | 6.17% | | . 6 ROC | | 5.30% | 7.31% | 8.80% | 10.40% | 12.09% | 13.56% | 15.08% | 16.61% | 18.09% | 19.47% | -4.73% | | . 7 Capital Invested | | $ 37 | $ 33 | $ 33 | $ 33 | $ 32 | $ 32 | $ 31 | $ 29 | $ 27 | $ 25 | $ (107) | (Adjusted to reflect terminal ROC) | . Calculation of Capital Invested . #collapse-hide EVA_output[9:14] . . Year 0 1 2 3 4 5 6 7 8 9 10 Terminal Year . 9 Initial | $ 36.870 | $ 36.870 | $ 32.844 | $ 32.791 | $ 32.623 | $ 32.279 | $ 31.676 | $ 30.614 | $ 29.174 | $ 27.401 | $ 25.394 | | | . 10 + Net Cap Ex | | $ (0.468) | $ (0.595) | $ (0.756) | $ (0.961) | $ (1.221) | $ (1.649) | $ (1.962) | $ (2.194) | $ (2.295) | $ (2.222) | | | . 11 + Chg in WC | | $ (3.5580) | $ 0.5408 | $ 0.5884 | $ 0.6162 | $ 0.6176 | $ 0.5871 | $ 0.5216 | $ 0.4207 | $ 0.2882 | $ 0.1311 | | | . 12 Ending | $ 36.870 | $ 32.844 | $ 32.791 | $ 32.623 | $ 32.279 | $ 31.676 | $ 30.614 | $ 29.174 | $ 27.401 | $ 25.394 | $ 23.303 | | | . 13 Cumulated WACC | | 106.07% | 112.50% | 119.33% | 126.56% | 134.24% | 142.41% | 151.11% | 160.37% | 170.24% | 180.74% | | | . Relative Valuation . Peer Sample Cross Section . #collapse-hide peer_book = get_sheets_as_dfs(&#39;Bookings Peer Analysis&#39;) print(len(peer_book)) %clear . . Could not get &lt;Worksheet &#39;Chart4&#39; id:1060738748&gt; This is probably a graph Could not get &lt;Worksheet &#39;Chart3&#39; id:295439058&gt; This is probably a graph Could not get &lt;Worksheet &#39;Chart2&#39; id:1880232164&gt; This is probably a graph 4 . #collapse-hide peers = peer_book[0][1] cleaned = peers[peers.columns][:4] compTable = cleaned fw = peer_book[1][1] cleaned = fw[[&#39;Ticker&#39;,&#39;2020&#39;, &#39;2021&#39;, &#39;2022&#39;, &#39;2023&#39;, &#39;2024&#39;, &#39;2025&#39;, &#39;Implied Return&#39;, &#39;Model Base&#39;]][:13] modelOutput = cleaned compTable . . Name Symbol Gross Profit Margin Operating Margin (ttm) EBITDA MArgin (ttm) Profit Margin Return on Invested Capital Return on Equity Dividend Yield EV to EBITDA Price to Book Value PEG Ratio PE5 PE 10 PE Ratio Forward PE Relative PE Sector Relative PE Market Relative PE Ratio (Indust. Quick Ratio Current Ratio Normalized Diluted EPS (TTM) . 0 Booking Holdings Inc | BKNG | | 35.48% | 45.57% | 32.29% | 32.04% | 73.96% | 0.00% | 7.699 | 8.687 | 0.3179 | 20.59 | 29.14 | 11.15 | 17.78 | 0.8376 | 0.7703 | 1.649 | 1.6750 | 1.832 | 99.330 | . 1 Expedia Group Inc | EXPE | 82.08% | 7.68% | 15.40% | 4.68% | 5.71% | 13.66% | 2.23% | 5.958 | 2.118 | 0.3807 | 19.01 | 21.23 | 16.01 | 137.20 | 1.2030 | 1.1060 | 2.368 | 0.6006 | 0.722 | 3.993 | . 2 TripAdvisor Inc | TRIP | 93.98% | 12.04% | 21.14% | 8.07% | 8.56% | 8.56% | 0.00% | 6.440 | 2.105 | 2.0430 | 23.04 | | 20.18 | 14.33 | 1.5160 | 1.3940 | 2.985 | 1.5400 | 1.225 | 0.890 | . Forward Valuation With Various Ratios as Bases . #collapse-hide modelOutput #Stack Dataframes For Charting byYear = modelOutput[[&#39;Ticker&#39;,&#39;2020&#39;, &#39;2021&#39;, &#39;2022&#39;, &#39;2023&#39;, &#39;2024&#39;, &#39;2025&#39;, &#39;Model Base&#39;]].set_index([&#39;Model Base&#39;, &quot;Ticker&quot;]).stack() byYear df = pd.DataFrame(byYear, columns=[ &#39;Value&#39;]) df[&#39;Value&#39;] = pd.to_numeric(df[&#39;Value&#39;], errors=&#39;raise&#39;) df df.reset_index(inplace=True) df df.rename(columns={&quot;level_2&quot;:&#39;Year&#39;}, inplace=True) df.set_index(&#39;Model Base&#39;) price = df.Value[0] df[df[&quot;Year&quot;]==&#39;2020&#39;] aa = list(df.loc[df[&#39;Year&#39;] == &#39;2020&#39;, &#39;Value&#39;]) print(aa) df conditions = [ (df[&#39;Ticker&#39;] == &#39;BKNG&#39;), (df[&#39;Ticker&#39;] == &#39;EXPE&#39;), (df[&#39;Ticker&#39;] == &#39;TRIP&#39;)] choices = [float(aa[0]),float(aa[1]),float(aa[2])] df[&#39;CurrentPrice&#39;] = np.select(conditions, choices) df df[&#39;Return&#39;] = (df.Value - df.CurrentPrice).div(df.CurrentPrice) # df.dropna(inplace=True) # df[~df.Value.str.contains(&quot;#DIV/0!&quot;)] # df[~df.Year.str.contains(&quot;12/1/2010&quot;)] # df.set_index(&#39;Metric&#39;) # df . . [1271.63, 52.0, 16.67, 1271.63, 52.0, 16.67, 1271.63, 52.0, 16.67, 1271.63, 52.0, 16.67] . #collapse-hide source = df # label = alt.selection_multi(fields=[&#39;Ticker&#39;], bind=&#39;legend&#39;, # on=&#39;mouseover&#39;, # select on mouseover events # nearest=True, # select data point nearest the cursor # empty=&#39;none&#39; # empty selection includes no data points # ) # alt.Chart(source).mark_bar().encode( # x=&#39;Year:T&#39;, # y=&#39;Upside:Q&#39;, # color = alt.Color(&#39;Ticker:N&#39;, legend=alt.Legend(title=&quot;Ticker&quot;, labelFontSize=15, titleFontSize=17),scale=alt.Scale(scheme=&#39;tableau20&#39;)), # column=&#39;Model Base:N&#39; # ) # bars = alt.Chart(source).mark_bar().encode( # x=alt.X(&#39;average(Return):Q&#39;, stack=&#39;zero&#39;), # y=alt.Y(&#39;Ticker:N&#39;), # color=alt.Color(&#39;Model Base&#39;) # ) # text = alt.Chart(source).mark_text(dx=-15, dy=3, color=&#39;white&#39;).encode( # x=alt.X(&#39;average(Return):Q&#39;, stack=&#39;zero&#39;), # y=alt.Y(&#39;Ticker:N&#39;), # detail=&#39;Model Base:N&#39;, # text=alt.Text(&#39;average(Return):Q&#39;, format=&#39;.1f&#39;) # ) # bars + text alt.Chart(source).mark_bar().encode( column = &quot;Ticker&quot;, x=&#39;Year&#39;, y=&#39;Return&#39;, color=&#39;Model Base&#39;).properties(width=220) . . Investment Summary and Proposal . #collapse-hide # marketD.set_index(&#39;Variable&#39;) marketD . . Variable Value . 0 ticker | BKNG | . 1 Price | 1,271.630 | . 2 52 Week High | 2,094.000 | . 3 52 Week Low | 1,107.290 | . 4 Beta (Unlevered) | 0.95 | . 5 Mkt Cap (Billions $) | 52.215 | . 6 EPS | 111.43 | . 7 Shares Outstanding (Billions) | 0.041062 | . 8 1Y Target | 2279.8 | . 9 5Y Target | 2686.65 | . 10 % Upside (1Y) | 79.28% | . 11 % Upside (5Y) | 111.28% | . Recommendation: . We recommend a BUY on BKNG. We expect volatility to continue over the next two weeks; therefore, we would like to use a tailored entry to capitalize on these movements. We propose placing a limit order for three shares of BKNG at 1000 dollars per share. We want to place a stop BUY at 1400 dollars per share. For those who dont know what that means: we would not buy BKNG unless it hit 1000 or 1400 dollars per share. . Thesis . Bookings Holdings is a quality company trading almost 50% off of 52-Week Highs. We believe that BKNG wins coming out of this recession and currently attractive at these prices on a relative and DCF valuation basis. We think that BKNG&#39;s period of rapid revenue growth approaches an end, however, after a massive decline in revenues this year, we anticipate BKNG converging back to a steady 2% revenue growth rate over ten years. . Why Now: The Coronavirus impacted and continues to impact the economy at an unprecedented level. Unlike the Great Depression, the Great Recession and other recessions, the Coronavirus upheaval has brought the global economy to a full halt. Economic indicators over the next few weeks will likely be some of the worst readings in the history of US economic account records. But under the presumption that the crises will eventually end, either through a vaccine or herd immunity, we decided to explore the wreckage that is the travel industry in search of pockets of value and mispriced names. Staying away from airlines, we turned to travel intermediaries and hospitality stocks and settled on a peer sample of companies who leverage technology. . | Why Bookings: Bookings would complement our portfolio as a multibillion-dollar, global, US-based technology company with many subsidiaries, including Booking.com, Priceline.com, Agoda.com, Kayak.com, Cheapflights, Rentalcars.com, Momondo, and OpenTable. They have a reputation for market dominance in hotel bookings. Additionally, Bookings aggressively expanded their operations using their fluency in information technology and hospitality to include restaurant reservations systems internationally. Bookings earnings have steadily increased in the past, and have room to continue as they expand. . | Why Bookings now: Models, incorporating worst-case scenarios for economic slowdowns, predict not only Bookings&#39; survival as a company due to high margins, but also future growth. The consistent revenue they bring in as a dynamic company sustains the company through black swan events like the Coronavirus while maintaining positive outlooks for the future. As an online intermediary for travelers, hotels, and restaurants, Bookings&#39;s exposure is lower than other hospitality industries that had sold off recently, such as airlines, cruise lines, amusement parks, hotels, and food services. They have fewer employees and have the technological flexibility to afford periods of stagnation in development. BKNG is trading at historically low prices compared to fundamental value and presents a significant opportunity to add a travel industry behemoth to our portfolio and take advantage of the extreme pessimism, and volatility equity markets are currently experiencing. . | . Brief Industry Overview . Traveling requires planning trips; not too long ago, consumers relied on travel agencies to serve that function. Technology made that obsolete by allowing consumers to plan their travels. With the rise of the internet and social media, consumers can access information, decide where they want to go and compare prices themselves. They also have more modes of transportation via ride-sharing apps, higher volume, and scope of airline flights in general improvements in global infrastructure. . These technological advancements create more efficient markets for travelers and do most of the heavy lifting when it comes to contract matching and sales. It is no wonder that Tourism, hospitality, and circularly, industries have newfound reliance on information technology. . Bookings provide much of this information in one place, on any of their given websites. Travel technology demand by consumers and businesses rises along with new applications for travel technology. This demand is mainly satisfied with Bookings, the largest travel technology company in the world. . Brief Peer Overview . Bookings&#39; competitors include Expedia, Trip.com, and TripAdvisor. Expedia with a market cap of 8.8B includes CarRentals.com, Expedia.com, Hotels.com, Orbitz and Travelocity. Trip.com with a cap of 13.8B includes Airfarewatchdog, Bookingbuddy.com, Holidaylettings.co.uk, and Jetsetter.com. TripAdvisor, with a market cap of 2.4B receives a significant portion of their revenue from Bookings and Expedia. For comparison, Bookings has a market cap of $51.5B. Bookings outperforms its competitors in almost all performance markers. . Business Description . Booking Holdings Inc. provides online travel and related services in Europe, North America, South America, the Asia-Pacific region, the Middle East, and Africa. The company operates Booking.com, which connects travelers with a selection of places to stay, including apartments, vacation homes, family-run B&amp;Bs, 5-star luxury resorts, tree houses, and igloos; and KAYAK that searches other sites to show travelers the information they need to find the right flights, hotels, rental cars, and vacation packages. It also operates Priceline, an online travel deal service, which provides travelers to save on hotel rooms, airline tickets, rental cars, vacation packages, and cruises; Agoda, which provides online accommodation reservation services. In addition, the company operates Rentalcars.com that offers online rental car reservation services; and OpenTable, an online provider of restaurant reservation and information services to consumers and restaurant reservation management, as well as customer acquisition services to restaurants. Further, it offers travel insurance products. The company was formerly known as The Priceline Group Inc. and changed its name to Booking Holdings Inc. in February 2018. Booking Holdings Inc. was founded in 1997 and is headquartered in Norwalk, Connecticut. (Source: Finviz) . Revenue Drivers . Agency, merchant and advertising operations drive Bookings&#39; revenue. Their main source of revenue comes from acting as an online travel agency booking hotels, car rentals and restaurant reservations with commissions. Their second source derives from their role as a merchant, selling reservations at hotels, car rentals and restaurant reservations. Bookings also receives revenue from traditional advertising on it&#39;s websites. . Sustainability and Governance . Yahoo ESG rating is 19/100, quantified using data of 120 environmental, social and governance indicators including: carbon emissions, climate change effect, pollution, waste disposal, renewable energy, resource depletion, supply chain, political contributions, discrimination, diversity, community relations, human rights, cumulative voting, executive compensation, shareholders&#39; rights, takeover defense, staggered boards, and independent directors. ESG rating will penalize companies for &quot;missing data.&quot; A low score signals less risk in governance and social-environmental impact. The anti-competitive nature of Bookings indicates its success as a capitalist company as much as their disrespect for fair play in markets. Business informs Bookings political opinions, evidenced by their support for the illegal Israeli occupation of Palestine. . Risks . The beautiful thing about this idea is the company is experiencing a worst-case scenario. Economic activity will grind to a halt, and revenues will be impacted. We expect BKNG&#39;s revenues to decline modestly, and the DCF models account for this in the 60% decline in topline built into the first year. One risk might be that recent events might change consumer behavior in the travel sector, and revenue streams might be dampened for the foreseeable future. Additionally, more than half of revenues are reservations and travel insurance--massive amounts of travel insurance claims might drain cash flows in ways our models do not anticipate. .",
            "url": "https://albisbub.github.io/RFIC-Pitches/bkng/",
            "relUrl": "/bkng/",
            "date": " • Apr 1, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://albisbub.github.io/RFIC-Pitches/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://albisbub.github.io/RFIC-Pitches/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}